#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Base_TPP

#include "Basic.hpp"

#include "EEquipedWeapon_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "ELethalEquipment_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Base_TPP.ABP_Base_TPP_C
// 0x6380 (0x6640 - 0x02C0)
class UABP_Base_TPP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0370(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x0398(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x0418(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0440(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x0508(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0538(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x0560(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x05E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x0610(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x0690(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_9;                      // 0x06C0(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x0770(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x07A0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x07C8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_8;                      // 0x07F8(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x08A8(0x0158)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0A00(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0A20(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x0A40(0x01E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x0C20(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0D78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0DA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0DC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0DF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0E18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0E68(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x0E90(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0F78(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x0FA8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x1090(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x10C0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x11A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x11D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x1258(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x1288(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x1338(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1490(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x14B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x14E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1508(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x1530(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x15B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1630(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x16B0(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1760(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x17E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x1810(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1890(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x1910(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x1990(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x1A10(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1AC0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1AF0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1B70(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1BF0(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x1C70(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1D20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1DA0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1DD0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1E50(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x1ED0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x1EF8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1F20(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1F48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1F70(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1F98(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x1FC0(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x2070(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x20A0(0x00B0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x2150(0x0190)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x22E0(0x00D0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x23B0(0x0028)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_1;                      // 0x23D8(0x0018)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x23F0(0x00C0)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x24B0(0x0038)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x24E8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2640(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2668(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x2690(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x2778(0x00E8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x2888(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x28B0(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_26;                // 0x28D8(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_25;                // 0x2928(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_24;                // 0x2978(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_23;                // 0x29C8(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_25;                  // 0x2A18(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_24;                  // 0x2AB8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_23;                  // 0x2B58(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x2BF8(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_22;                // 0x2C28(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_21;                // 0x2C78(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_22;                  // 0x2CC8(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2D68(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x2D98(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x2E48(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x2FA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x2FC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2FF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x3018(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_20;                // 0x3040(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_19;                // 0x3090(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_21;                  // 0x30E0(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x3180(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x31B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x3230(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x32B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x3330(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_20;                  // 0x33B0(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_19;                  // 0x3450(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_18;                  // 0x34F0(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x3590(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x35C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3640(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_17;                  // 0x36C0(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x3760(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x3790(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x3840(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x3998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x39C0(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_18;                // 0x39E8(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_17;                // 0x3A38(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_16;                // 0x3A88(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_15;                // 0x3AD8(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_16;                  // 0x3B28(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x3BC8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x3C68(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x3D08(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_14;                // 0x3D38(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_13;                // 0x3D88(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x3DD8(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x3E78(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x3EA8(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x3F58(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x40B0(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x4170(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x4198(0x00C0)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x4258(0x0018)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x4270(0x00F8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x4368(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x4390(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_12;                // 0x43B8(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_11;                // 0x4408(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_10;                // 0x4458(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_9;                 // 0x44A8(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x44F8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x4598(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x4638(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x46D8(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_8;                 // 0x4708(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_7;                 // 0x4758(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x47A8(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x4848(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x4878(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x4928(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x4A80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x4AA8(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_6;                 // 0x4AD0(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_5;                 // 0x4B20(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x4B70(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x4BC0(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x4C10(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x4CB0(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x4D50(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x4DF0(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x4E20(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x4E70(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x4EC0(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x4F60(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x4F90(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x5040(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x5198(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x51C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x51E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x5210(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x5238(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x5288(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x52B8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x5338(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x53B8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x5438(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x54B8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x5558(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x55F8(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x5698(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x56C8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x5748(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x57C8(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x5868(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x5898(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x5948(0x0158)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x5AA0(0x0190)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x5C30(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x5CF0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x5D18(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x5D98(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x5E38(0x00E8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x5F20(0x0190)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x60B0(0x00B0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x6160(0x00E8)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x6248(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x62B8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x63A0(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x6488(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x64D0(0x00E8)()
	float                                         Speed;                                             // 0x65B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x65BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAiming;                                         // 0x65C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCrouching;                                        // 0x65C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReloading;                                        // 0x65C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFalling;                                          // 0x65C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65C4[0x4];                                     // 0x65C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseCharacter_C*                    Pawn;                                              // 0x65C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunning;                                          // 0x65D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EEquipedWeapon                                EquipedWeapon;                                     // 0x65D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65D2[0x2];                                     // 0x65D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeaningInput;                                      // 0x65D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseWeapon_C*                       PawnWeapon;                                        // 0x65D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccelerating;                                    // 0x65E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65E1[0x3];                                     // 0x65E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Acceleration;                                      // 0x65E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StopDirection;                                     // 0x65E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x65EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x65F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x65F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PelvisCurrentOffset;                               // 0x65F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Right;                                             // 0x65FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseFullBody;                                      // 0x6600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUsingLethal;                                      // 0x6601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6602[0x2];                                     // 0x6602(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta;                                             // 0x6604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IKoffsetLeftFoot;                                  // 0x6608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IKoffsetRightFoot;                                 // 0x660C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Foot_l_rotation;                                   // 0x6610(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Foot_r_rotation;                                   // 0x661C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         IKTraceDistance;                                   // 0x6628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PelvilsOffsetRange;                                // 0x662C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELethalEquipment                              Lethal_Type;                                       // 0x6630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6631[0x3];                                     // 0x6631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpineOverrideAlpha;                                // 0x6634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void MakeNosieEvent();
	void PlayFootstepSound();
	void SetPawnInfo();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_ReloadCompleted();
	void AnimNotify_MeleeAttackCompleted();
	void AnimNotify_Footstep();
	void BlueprintInitializeAnimation();
	void AnimNotify_SpawnLethal();
	void AnimNotify_ShowLethal();
	void AnimNotify_EquipWeapon();
	void AnimNotify_HideLethal();
	void AnimNotify_HideWeapon();
	void ExecuteUbergraph_ABP_Base_TPP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Base_TPP_C">();
	}
	static class UABP_Base_TPP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Base_TPP_C>();
	}
};
static_assert(alignof(UABP_Base_TPP_C) == 0x000010, "Wrong alignment on UABP_Base_TPP_C");
static_assert(sizeof(UABP_Base_TPP_C) == 0x006640, "Wrong size on UABP_Base_TPP_C");
static_assert(offsetof(UABP_Base_TPP_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Base_TPP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_Base_TPP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_31) == 0x0002F8, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_30) == 0x000320, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_29) == 0x000348, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_28) == 0x000370, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_30) == 0x000398, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_13) == 0x000418, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_ApplyAdditive) == 0x000440, "Member 'UABP_Base_TPP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_26) == 0x000508, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_27) == 0x000538, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_29) == 0x000560, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_25) == 0x0005E0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_28) == 0x000610, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_24) == 0x000690, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_9) == 0x0006C0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_23) == 0x000770, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_12) == 0x0007A0, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_22) == 0x0007C8, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_8) == 0x0007F8, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_9) == 0x0008A8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000A00, "Member 'UABP_Base_TPP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_LocalToComponentSpace) == 0x000A20, "Member 'UABP_Base_TPP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TwoBoneIK) == 0x000A40, "Member 'UABP_Base_TPP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_8) == 0x000C20, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_26) == 0x000D78, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_25) == 0x000DA0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_24) == 0x000DC8, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_23) == 0x000DF0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_22) == 0x000E18, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_21) == 0x000E40, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_20) == 0x000E68, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_9) == 0x000E90, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_21) == 0x000F78, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_8) == 0x000FA8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_20) == 0x001090, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_7) == 0x0010C0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_19) == 0x0011A8, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_27) == 0x0011D8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_18) == 0x001258, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_7) == 0x001288, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_7) == 0x001338, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_19) == 0x001490, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_18) == 0x0014B8, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_17) == 0x0014E0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_16) == 0x001508, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_26) == 0x001530, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_25) == 0x0015B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_24) == 0x001630, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByEnum_4) == 0x0016B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_23) == 0x001760, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_17) == 0x0017E0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_22) == 0x001810, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_21) == 0x001890, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_20) == 0x001910, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_19) == 0x001990, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByEnum_3) == 0x001A10, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_16) == 0x001AC0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_18) == 0x001AF0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_17) == 0x001B70, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_16) == 0x001BF0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByEnum_2) == 0x001C70, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_15) == 0x001D20, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_15) == 0x001DA0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_14) == 0x001DD0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_13) == 0x001E50, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_11) == 0x001ED0, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_10) == 0x001EF8, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_9) == 0x001F20, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_8) == 0x001F48, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_7) == 0x001F70, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_6) == 0x001F98, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByEnum_1) == 0x001FC0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_14) == 0x002070, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_6) == 0x0020A0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x002150, "Member 'UABP_Base_TPP_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x0022E0, "Member 'UABP_Base_TPP_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_5) == 0x0023B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_IdentityPose_1) == 0x0023D8, "Member 'UABP_Base_TPP_C::AnimGraphNode_IdentityPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_LayeredBoneBlend_3) == 0x0023F0, "Member 'UABP_Base_TPP_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_MakeDynamicAdditive) == 0x0024B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_6) == 0x0024E8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_4) == 0x002640, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_3) == 0x002668, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x002690, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x002778, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_2) == 0x002860, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_15) == 0x002888, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_14) == 0x0028B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_26) == 0x0028D8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_26' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_25) == 0x002928, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_25' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_24) == 0x002978, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_24' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_23) == 0x0029C8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_23' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_25) == 0x002A18, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_25' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_24) == 0x002AB8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_24' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_23) == 0x002B58, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_23' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_13) == 0x002BF8, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_22) == 0x002C28, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_22' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_21) == 0x002C78, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_21' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_22) == 0x002CC8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_22' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_12) == 0x002D68, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_5) == 0x002D98, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_5) == 0x002E48, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_13) == 0x002FA0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_12) == 0x002FC8, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_11) == 0x002FF0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_10) == 0x003018, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_20) == 0x003040, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_20' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_19) == 0x003090, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_19' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_21) == 0x0030E0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_21' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_11) == 0x003180, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_12) == 0x0031B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_11) == 0x003230, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_10) == 0x0032B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_9) == 0x003330, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_20) == 0x0033B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_20' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_19) == 0x003450, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_19' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_18) == 0x0034F0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_18' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_10) == 0x003590, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_8) == 0x0035C0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_7) == 0x003640, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_17) == 0x0036C0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_17' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_9) == 0x003760, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_4) == 0x003790, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_4) == 0x003840, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_9) == 0x003998, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_8) == 0x0039C0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_18) == 0x0039E8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_18' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_17) == 0x003A38, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_17' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_16) == 0x003A88, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_16' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_15) == 0x003AD8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_15' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_16) == 0x003B28, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_16' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_15) == 0x003BC8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_14) == 0x003C68, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_8) == 0x003D08, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_14) == 0x003D38, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_14' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_13) == 0x003D88, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_13' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_13) == 0x003DD8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_7) == 0x003E78, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_3) == 0x003EA8, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_3) == 0x003F58, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0040B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose_1) == 0x004170, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x004198, "Member 'UABP_Base_TPP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_IdentityPose) == 0x004258, "Member 'UABP_Base_TPP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_LegIK) == 0x004270, "Member 'UABP_Base_TPP_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_7) == 0x004368, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_6) == 0x004390, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_12) == 0x0043B8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_11) == 0x004408, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_10) == 0x004458, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_9) == 0x0044A8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_12) == 0x0044F8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_11) == 0x004598, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_10) == 0x004638, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_6) == 0x0046D8, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_8) == 0x004708, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_7) == 0x004758, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_9) == 0x0047A8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_5) == 0x004848, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_2) == 0x004878, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_2) == 0x004928, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_5) == 0x004A80, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_4) == 0x004AA8, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_6) == 0x004AD0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_5) == 0x004B20, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_4) == 0x004B70, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_3) == 0x004BC0, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_8) == 0x004C10, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_7) == 0x004CB0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_6) == 0x004D50, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_4) == 0x004DF0, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_2) == 0x004E20, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator_1) == 0x004E70, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_5) == 0x004EC0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_3) == 0x004F60, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine_1) == 0x004F90, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose_1) == 0x005040, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_3) == 0x005198, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_2) == 0x0051C0, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult_1) == 0x0051E8, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_TransitionResult) == 0x005210, "Member 'UABP_Base_TPP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequenceEvaluator) == 0x005238, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_2) == 0x005288, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_6) == 0x0052B8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_5) == 0x005338, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_4) == 0x0053B8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_3) == 0x005438, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_4) == 0x0054B8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_3) == 0x005558, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_2) == 0x0055F8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult_1) == 0x005698, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_2) == 0x0056C8, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer_1) == 0x005748, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool_1) == 0x0057C8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateResult) == 0x005868, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_StateMachine) == 0x005898, "Member 'UABP_Base_TPP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SaveCachedPose) == 0x005948, "Member 'UABP_Base_TPP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x005AA0, "Member 'UABP_Base_TPP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_LayeredBoneBlend) == 0x005C30, "Member 'UABP_Base_TPP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_UseCachedPose) == 0x005CF0, "Member 'UABP_Base_TPP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_SequencePlayer) == 0x005D18, "Member 'UABP_Base_TPP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByBool) == 0x005D98, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x005E38, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x005F20, "Member 'UABP_Base_TPP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendListByEnum) == 0x0060B0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x006160, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_Inertialization) == 0x006248, "Member 'UABP_Base_TPP_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0062B8, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0063A0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_Slot) == 0x006488, "Member 'UABP_Base_TPP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, AnimGraphNode_BlendSpacePlayer) == 0x0064D0, "Member 'UABP_Base_TPP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Speed) == 0x0065B8, "Member 'UABP_Base_TPP_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Direction) == 0x0065BC, "Member 'UABP_Base_TPP_C::Direction' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bIsAiming) == 0x0065C0, "Member 'UABP_Base_TPP_C::bIsAiming' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bCrouching) == 0x0065C1, "Member 'UABP_Base_TPP_C::bCrouching' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bReloading) == 0x0065C2, "Member 'UABP_Base_TPP_C::bReloading' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bFalling) == 0x0065C3, "Member 'UABP_Base_TPP_C::bFalling' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Pawn) == 0x0065C8, "Member 'UABP_Base_TPP_C::Pawn' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bRunning) == 0x0065D0, "Member 'UABP_Base_TPP_C::bRunning' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, EquipedWeapon) == 0x0065D1, "Member 'UABP_Base_TPP_C::EquipedWeapon' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, LeaningInput) == 0x0065D4, "Member 'UABP_Base_TPP_C::LeaningInput' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, PawnWeapon) == 0x0065D8, "Member 'UABP_Base_TPP_C::PawnWeapon' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, IsAccelerating) == 0x0065E0, "Member 'UABP_Base_TPP_C::IsAccelerating' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Acceleration) == 0x0065E4, "Member 'UABP_Base_TPP_C::Acceleration' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, StopDirection) == 0x0065E8, "Member 'UABP_Base_TPP_C::StopDirection' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Roll) == 0x0065EC, "Member 'UABP_Base_TPP_C::Roll' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Pitch) == 0x0065F0, "Member 'UABP_Base_TPP_C::Pitch' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Yaw) == 0x0065F4, "Member 'UABP_Base_TPP_C::Yaw' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, PelvisCurrentOffset) == 0x0065F8, "Member 'UABP_Base_TPP_C::PelvisCurrentOffset' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Right) == 0x0065FC, "Member 'UABP_Base_TPP_C::Right' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bUseFullBody) == 0x006600, "Member 'UABP_Base_TPP_C::bUseFullBody' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, bUsingLethal) == 0x006601, "Member 'UABP_Base_TPP_C::bUsingLethal' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Delta) == 0x006604, "Member 'UABP_Base_TPP_C::Delta' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, IKoffsetLeftFoot) == 0x006608, "Member 'UABP_Base_TPP_C::IKoffsetLeftFoot' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, IKoffsetRightFoot) == 0x00660C, "Member 'UABP_Base_TPP_C::IKoffsetRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Foot_l_rotation) == 0x006610, "Member 'UABP_Base_TPP_C::Foot_l_rotation' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Foot_r_rotation) == 0x00661C, "Member 'UABP_Base_TPP_C::Foot_r_rotation' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, IKTraceDistance) == 0x006628, "Member 'UABP_Base_TPP_C::IKTraceDistance' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, PelvilsOffsetRange) == 0x00662C, "Member 'UABP_Base_TPP_C::PelvilsOffsetRange' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, Lethal_Type) == 0x006630, "Member 'UABP_Base_TPP_C::Lethal_Type' has a wrong offset!");
static_assert(offsetof(UABP_Base_TPP_C, SpineOverrideAlpha) == 0x006634, "Member 'UABP_Base_TPP_C::SpineOverrideAlpha' has a wrong offset!");

}

