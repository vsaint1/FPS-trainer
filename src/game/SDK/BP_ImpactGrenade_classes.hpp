#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ImpactGrenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ImpactGrenade.BP_ImpactGrenade_C
// 0x0050 (0x0270 - 0x0220)
class ABP_ImpactGrenade_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_HealthComponent_C*                  HealthComponent;                                   // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bExploded;                                         // 0x0248(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeToExplode;                                     // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         PawnVelocity;                                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ExplosionEmitter;                                  // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ExplosionSound;                                    // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ExplosionShake;                                    // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetProjectileVelocity();
	void OnRep_bExploded();
	void UserConstructionScript();
	void Multicast_PlayEffects();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ExplodeGrenade();
	void ReceiveBeginPlay();
	void OnExploded();
	void Explode(class AController* Instigator_0);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_ImpactGrenade(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ImpactGrenade_C">();
	}
	static class ABP_ImpactGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ImpactGrenade_C>();
	}
};
static_assert(alignof(ABP_ImpactGrenade_C) == 0x000008, "Wrong alignment on ABP_ImpactGrenade_C");
static_assert(sizeof(ABP_ImpactGrenade_C) == 0x000270, "Wrong size on ABP_ImpactGrenade_C");
static_assert(offsetof(ABP_ImpactGrenade_C, UberGraphFrame) == 0x000220, "Member 'ABP_ImpactGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, Mesh) == 0x000228, "Member 'ABP_ImpactGrenade_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, Sphere) == 0x000230, "Member 'ABP_ImpactGrenade_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, ProjectileMovement) == 0x000238, "Member 'ABP_ImpactGrenade_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, HealthComponent) == 0x000240, "Member 'ABP_ImpactGrenade_C::HealthComponent' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, bExploded) == 0x000248, "Member 'ABP_ImpactGrenade_C::bExploded' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, TimeToExplode) == 0x00024C, "Member 'ABP_ImpactGrenade_C::TimeToExplode' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, PawnVelocity) == 0x000250, "Member 'ABP_ImpactGrenade_C::PawnVelocity' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, Radius) == 0x000254, "Member 'ABP_ImpactGrenade_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, ExplosionEmitter) == 0x000258, "Member 'ABP_ImpactGrenade_C::ExplosionEmitter' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, ExplosionSound) == 0x000260, "Member 'ABP_ImpactGrenade_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(ABP_ImpactGrenade_C, ExplosionShake) == 0x000268, "Member 'ABP_ImpactGrenade_C::ExplosionShake' has a wrong offset!");

}

