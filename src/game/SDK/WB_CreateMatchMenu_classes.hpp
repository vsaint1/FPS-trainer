#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CreateMatchMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MapInfo_structs.hpp"
#include "EGameModeNames_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CreateMatchMenu.WB_CreateMatchMenu_C
// 0x0228 (0x0488 - 0x0260)
class UWB_CreateMatchMenu_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         AIDifficultyHB;                                    // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              BotsCheckBox;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DecreaseAIDifficulty;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Description;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         EnableLanHB;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Fade;                                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              FriendlyFireCheckBox;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         FriendlyFireHB;                                    // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GameModeImage;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeName;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                IncreaseAIDifficulty;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              LANCB;                                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                LessABots;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                LessBBots;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                LessPlayersButton;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MaxPlayersHB;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MoreABots;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MoreBBots;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MorePlayersButton;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextMapButton;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextModeButton;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PreviousMapButton;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PreviousModeButton;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TeamABotsHB;                                       // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TeamBBotsHB;                                       // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_8;                                       // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_13;                                      // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_15;                                      // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_19;                                      // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_21;                                      // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_29;                                      // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_30;                                      // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_BaseButton_C*                       WB_Return;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_BaseButton_C*                       WB_StartGame;                                      // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_Bots;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxPlayers;                                        // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapIndex;                                          // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLAN;                                              // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamBBots;                                         // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamABots;                                         // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseBots;                                          // 0x039C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HoveredColor;                                      // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredTextColor;                                  // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ButtonColor;                                       // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNumberOfBots;                                   // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFriendlyFire;                                     // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DifficultyIndex;                                   // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMultiplayer;                                      // 0x03EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapInfo                               CurrentGameModeInfo;                               // 0x03F0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ModeIndex;                                         // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeNames                                SelectedGameMode;                                  // 0x0454(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ListOfRows;                                        // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         NumberOfMapEntries;                                // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   GameModeFriendlyName;                              // 0x0470(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UpdateMapList();
	class FText UpdateGameMode();
	ESlateVisibility GetNumberOfBotsSelection();
	void InitOptions();
	bool Get_DecreaseAIDifficulty_bIsEnabled();
	bool Get_IncreaseAIDifficulty_bIsEnabled();
	class FText GetAIDifficulty();
	ESlateVisibility GetVisibilityNotDM();
	class FText GetNumberOfBotsText();
	class FText GetTeamBBots();
	class FText GetTeamABots();
	class FText GetMapName();
	class FText GetMaxPlayers();
	bool GetLessPlayersButtonIsEnabled();
	bool GetMorePlayersButtonIsEnabled();
	void OnFailure_BAC502AF476E13714F8579ACC80D0110();
	void OnSuccess_BAC502AF476E13714F8579ACC80D0110();
	void BndEvt__LessPlayersButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__MorePlayersButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__NextMapButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__PreviusMapButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void PlaySoundEffect();
	void PlaySoundLow();
	void BndEvt__LANCB_K2Node_ComponentBoundEvent_18_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__MoreABots_K2Node_ComponentBoundEvent_19_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__MoreBBots_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__LessBBots_K2Node_ComponentBoundEvent_21_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__LessABots_K2Node_ComponentBoundEvent_22_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BotsCheckBox_K2Node_ComponentBoundEvent_23_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__FriendlyFireCheckBox_K2Node_ComponentBoundEvent_24_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void OnButtonHovered(class UButton* Button, class UTextBlock* Text);
	void OnButtonUnhovered(class UButton* Button, class UTextBlock* Text);
	void CheckNumberOfBots();
	void Construct();
	void BndEvt__DecreaseAIDifficulty_K2Node_ComponentBoundEvent_10_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__IncreaseAIDifficulty_K2Node_ComponentBoundEvent_11_OnButtonReleasedEvent__DelegateSignature();
	void CreateMatch(bool bMultiplayer_0, int32 Players, bool LAN, class FName Map);
	void BndEvt__WB_CreateMatchMenu_WB_Return_K2Node_ComponentBoundEvent_12_OnReleased__DelegateSignature();
	void BndEvt__WB_CreateMatchMenu_WB_StartGame_K2Node_ComponentBoundEvent_13_OnReleased__DelegateSignature();
	void UpdateGameModeInfo();
	void BndEvt__WB_CreateMatchMenu_PreviousModeButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WB_CreateMatchMenu_NextModeButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_WB_CreateMatchMenu(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CreateMatchMenu_C">();
	}
	static class UWB_CreateMatchMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CreateMatchMenu_C>();
	}
};
static_assert(alignof(UWB_CreateMatchMenu_C) == 0x000008, "Wrong alignment on UWB_CreateMatchMenu_C");
static_assert(sizeof(UWB_CreateMatchMenu_C) == 0x000488, "Wrong size on UWB_CreateMatchMenu_C");
static_assert(offsetof(UWB_CreateMatchMenu_C, UberGraphFrame) == 0x000260, "Member 'UWB_CreateMatchMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, AIDifficultyHB) == 0x000268, "Member 'UWB_CreateMatchMenu_C::AIDifficultyHB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, BotsCheckBox) == 0x000270, "Member 'UWB_CreateMatchMenu_C::BotsCheckBox' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, DecreaseAIDifficulty) == 0x000278, "Member 'UWB_CreateMatchMenu_C::DecreaseAIDifficulty' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, Description) == 0x000280, "Member 'UWB_CreateMatchMenu_C::Description' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, EnableLanHB) == 0x000288, "Member 'UWB_CreateMatchMenu_C::EnableLanHB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, Fade) == 0x000290, "Member 'UWB_CreateMatchMenu_C::Fade' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, FriendlyFireCheckBox) == 0x000298, "Member 'UWB_CreateMatchMenu_C::FriendlyFireCheckBox' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, FriendlyFireHB) == 0x0002A0, "Member 'UWB_CreateMatchMenu_C::FriendlyFireHB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, GameModeImage) == 0x0002A8, "Member 'UWB_CreateMatchMenu_C::GameModeImage' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, GameModeName) == 0x0002B0, "Member 'UWB_CreateMatchMenu_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, IncreaseAIDifficulty) == 0x0002B8, "Member 'UWB_CreateMatchMenu_C::IncreaseAIDifficulty' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, LANCB) == 0x0002C0, "Member 'UWB_CreateMatchMenu_C::LANCB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, LessABots) == 0x0002C8, "Member 'UWB_CreateMatchMenu_C::LessABots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, LessBBots) == 0x0002D0, "Member 'UWB_CreateMatchMenu_C::LessBBots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, LessPlayersButton) == 0x0002D8, "Member 'UWB_CreateMatchMenu_C::LessPlayersButton' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MaxPlayersHB) == 0x0002E0, "Member 'UWB_CreateMatchMenu_C::MaxPlayersHB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MoreABots) == 0x0002E8, "Member 'UWB_CreateMatchMenu_C::MoreABots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MoreBBots) == 0x0002F0, "Member 'UWB_CreateMatchMenu_C::MoreBBots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MorePlayersButton) == 0x0002F8, "Member 'UWB_CreateMatchMenu_C::MorePlayersButton' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, NextMapButton) == 0x000300, "Member 'UWB_CreateMatchMenu_C::NextMapButton' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, NextModeButton) == 0x000308, "Member 'UWB_CreateMatchMenu_C::NextModeButton' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, PreviousMapButton) == 0x000310, "Member 'UWB_CreateMatchMenu_C::PreviousMapButton' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, PreviousModeButton) == 0x000318, "Member 'UWB_CreateMatchMenu_C::PreviousModeButton' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TeamABotsHB) == 0x000320, "Member 'UWB_CreateMatchMenu_C::TeamABotsHB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TeamBBotsHB) == 0x000328, "Member 'UWB_CreateMatchMenu_C::TeamBBotsHB' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_3) == 0x000330, "Member 'UWB_CreateMatchMenu_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_8) == 0x000338, "Member 'UWB_CreateMatchMenu_C::TextBlock_8' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_13) == 0x000340, "Member 'UWB_CreateMatchMenu_C::TextBlock_13' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_15) == 0x000348, "Member 'UWB_CreateMatchMenu_C::TextBlock_15' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_19) == 0x000350, "Member 'UWB_CreateMatchMenu_C::TextBlock_19' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_21) == 0x000358, "Member 'UWB_CreateMatchMenu_C::TextBlock_21' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_29) == 0x000360, "Member 'UWB_CreateMatchMenu_C::TextBlock_29' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextBlock_30) == 0x000368, "Member 'UWB_CreateMatchMenu_C::TextBlock_30' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, WB_Return) == 0x000370, "Member 'UWB_CreateMatchMenu_C::WB_Return' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, WB_StartGame) == 0x000378, "Member 'UWB_CreateMatchMenu_C::WB_StartGame' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, WS_Bots) == 0x000380, "Member 'UWB_CreateMatchMenu_C::WS_Bots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MaxPlayers) == 0x000388, "Member 'UWB_CreateMatchMenu_C::MaxPlayers' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MapIndex) == 0x00038C, "Member 'UWB_CreateMatchMenu_C::MapIndex' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, bLAN) == 0x000390, "Member 'UWB_CreateMatchMenu_C::bLAN' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TeamBBots) == 0x000394, "Member 'UWB_CreateMatchMenu_C::TeamBBots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TeamABots) == 0x000398, "Member 'UWB_CreateMatchMenu_C::TeamABots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, bUseBots) == 0x00039C, "Member 'UWB_CreateMatchMenu_C::bUseBots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, HoveredColor) == 0x0003A0, "Member 'UWB_CreateMatchMenu_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, HoveredTextColor) == 0x0003B0, "Member 'UWB_CreateMatchMenu_C::HoveredTextColor' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, ButtonColor) == 0x0003C0, "Member 'UWB_CreateMatchMenu_C::ButtonColor' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, TextColor) == 0x0003D0, "Member 'UWB_CreateMatchMenu_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, MaxNumberOfBots) == 0x0003E0, "Member 'UWB_CreateMatchMenu_C::MaxNumberOfBots' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, bFriendlyFire) == 0x0003E4, "Member 'UWB_CreateMatchMenu_C::bFriendlyFire' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, DifficultyIndex) == 0x0003E8, "Member 'UWB_CreateMatchMenu_C::DifficultyIndex' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, bMultiplayer) == 0x0003EC, "Member 'UWB_CreateMatchMenu_C::bMultiplayer' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, CurrentGameModeInfo) == 0x0003F0, "Member 'UWB_CreateMatchMenu_C::CurrentGameModeInfo' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, ModeIndex) == 0x000450, "Member 'UWB_CreateMatchMenu_C::ModeIndex' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, SelectedGameMode) == 0x000454, "Member 'UWB_CreateMatchMenu_C::SelectedGameMode' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, ListOfRows) == 0x000458, "Member 'UWB_CreateMatchMenu_C::ListOfRows' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, NumberOfMapEntries) == 0x000468, "Member 'UWB_CreateMatchMenu_C::NumberOfMapEntries' has a wrong offset!");
static_assert(offsetof(UWB_CreateMatchMenu_C, GameModeFriendlyName) == 0x000470, "Member 'UWB_CreateMatchMenu_C::GameModeFriendlyName' has a wrong offset!");

}

