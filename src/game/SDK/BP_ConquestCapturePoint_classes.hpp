#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConquestCapturePoint

#include "Basic.hpp"

#include "ECapturePointState_structs.hpp"
#include "Engine_structs.hpp"
#include "ECapturePoints_structs.hpp"
#include "BP_Base_Objective_classes.hpp"
#include "ERewardReasons_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConquestCapturePoint.BP_ConquestCapturePoint_C
// 0x0098 (0x02E0 - 0x0248)
class ABP_ConquestCapturePoint_C final : public ABP_Base_Objective_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ConquestCapturePoint_C;          // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Flag_01;                                           // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamAPlayers;                                      // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamBPlayers;                                      // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHolderTeam;                                       // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECapturePoints                                PointId;                                           // 0x0279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Conquest_GS_C*                      GameStateRef;                                      // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECapturePointState                            ObjetiveState;                                     // 0x0288(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PointsToCapture;                                   // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BaseCharacter_C*>            TeamAPlayerList;                                   // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_BaseCharacter_C*>            TeamBPlayerList;                                   // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	ECapturePointState                            LastFlagState;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Points;                                            // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ConquestObjectiveProgressBar_C*     ConquestProgressBar;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CaptureBounderyVisible;                            // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CaptureRadius;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   FlagLocationName;                                  // 0x02C8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void SecurePoint();
	void SetNewState();
	void CapturePoint(ECapturePointState NewState);
	void SetState();
	void Neutral();
	void InitCapturePoint();
	void RecoverLastState();
	void OnRep_FlagState();
	void GetPlayersInside();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void Increase_Team_Points();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Client_ChangeFlagMat(ECapturePointState NewParam);
	void Server_GivePoints(bool bTeam, float Score, ERewardReasons Reason);
	void Client_SetIconColor(ECapturePointState State);
	void Set_Icon();
	void AddPoints();
	void FlagUpdatePoints();
	void SetPointPorgress();
	void WidgetStartAnimation();
	void WidgetStopAnimation();
	void ExecuteUbergraph_BP_ConquestCapturePoint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConquestCapturePoint_C">();
	}
	static class ABP_ConquestCapturePoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ConquestCapturePoint_C>();
	}
};
static_assert(alignof(ABP_ConquestCapturePoint_C) == 0x000008, "Wrong alignment on ABP_ConquestCapturePoint_C");
static_assert(sizeof(ABP_ConquestCapturePoint_C) == 0x0002E0, "Wrong size on ABP_ConquestCapturePoint_C");
static_assert(offsetof(ABP_ConquestCapturePoint_C, UberGraphFrame_BP_ConquestCapturePoint_C) == 0x000248, "Member 'ABP_ConquestCapturePoint_C::UberGraphFrame_BP_ConquestCapturePoint_C' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, Widget) == 0x000250, "Member 'ABP_ConquestCapturePoint_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, Flag_01) == 0x000258, "Member 'ABP_ConquestCapturePoint_C::Flag_01' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, Decal) == 0x000260, "Member 'ABP_ConquestCapturePoint_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, Sphere) == 0x000268, "Member 'ABP_ConquestCapturePoint_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, TeamAPlayers) == 0x000270, "Member 'ABP_ConquestCapturePoint_C::TeamAPlayers' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, TeamBPlayers) == 0x000274, "Member 'ABP_ConquestCapturePoint_C::TeamBPlayers' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, bHolderTeam) == 0x000278, "Member 'ABP_ConquestCapturePoint_C::bHolderTeam' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, PointId) == 0x000279, "Member 'ABP_ConquestCapturePoint_C::PointId' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, GameStateRef) == 0x000280, "Member 'ABP_ConquestCapturePoint_C::GameStateRef' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, ObjetiveState) == 0x000288, "Member 'ABP_ConquestCapturePoint_C::ObjetiveState' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, PointsToCapture) == 0x00028C, "Member 'ABP_ConquestCapturePoint_C::PointsToCapture' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, TeamAPlayerList) == 0x000290, "Member 'ABP_ConquestCapturePoint_C::TeamAPlayerList' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, TeamBPlayerList) == 0x0002A0, "Member 'ABP_ConquestCapturePoint_C::TeamBPlayerList' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, LastFlagState) == 0x0002B0, "Member 'ABP_ConquestCapturePoint_C::LastFlagState' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, Points) == 0x0002B4, "Member 'ABP_ConquestCapturePoint_C::Points' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, ConquestProgressBar) == 0x0002B8, "Member 'ABP_ConquestCapturePoint_C::ConquestProgressBar' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, CaptureBounderyVisible) == 0x0002C0, "Member 'ABP_ConquestCapturePoint_C::CaptureBounderyVisible' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, CaptureRadius) == 0x0002C4, "Member 'ABP_ConquestCapturePoint_C::CaptureRadius' has a wrong offset!");
static_assert(offsetof(ABP_ConquestCapturePoint_C, FlagLocationName) == 0x0002C8, "Member 'ABP_ConquestCapturePoint_C::FlagLocationName' has a wrong offset!");

}

