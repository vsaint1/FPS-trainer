#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseFlag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseFlag.BP_BaseFlag_C.OnRep_Carrier
// 0x0028 (0x0028 - 0x0000)
struct BP_BaseFlag_C_OnRep_Carrier final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CaptureTheFlag_UI_Icon_C*           CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseFlag_C_OnRep_Carrier) == 0x000008, "Wrong alignment on BP_BaseFlag_C_OnRep_Carrier");
static_assert(sizeof(BP_BaseFlag_C_OnRep_Carrier) == 0x000028, "Wrong size on BP_BaseFlag_C_OnRep_Carrier");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_OnRep_Carrier, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_BaseFlag_C_OnRep_Carrier::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_BaseFlag.BP_BaseFlag_C.TryToAddPoint
// 0x0178 (0x0178 - 0x0000)
struct BP_BaseFlag_C_TryToAddPoint final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseFlag_C*                         AttachedFlag;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCarringFlag;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0014(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseFlag_C*                         K2Node_DynamicCast_AsBP_Base_Flag;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseFlag_C_TryToAddPoint) == 0x000008, "Wrong alignment on BP_BaseFlag_C_TryToAddPoint");
static_assert(sizeof(BP_BaseFlag_C_TryToAddPoint) == 0x000178, "Wrong size on BP_BaseFlag_C_TryToAddPoint");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, Success) == 0x000000, "Member 'BP_BaseFlag_C_TryToAddPoint::Success' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, AttachedFlag) == 0x000008, "Member 'BP_BaseFlag_C_TryToAddPoint::AttachedFlag' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, bCarringFlag) == 0x000010, "Member 'BP_BaseFlag_C_TryToAddPoint::bCarringFlag' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000014, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00009C, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_BaseFlag_C_TryToAddPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_VSize_ReturnValue) == 0x0000BC, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_AsI_Player_State) == 0x0000C0, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Abs_ReturnValue) == 0x0000D4, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000D9, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000DC, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_K2_TeleportTo_ReturnValue) == 0x0000E8, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000EC, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_VSize_ReturnValue_1) == 0x0000F8, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Abs_ReturnValue_1) == 0x0000FC, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_GetAttachedActors_OutActors) == 0x000100, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000110, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_BooleanAND_ReturnValue) == 0x000120, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_AsBP_Base_Flag) == 0x000128, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_AsBP_Base_Flag' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'BP_BaseFlag_C_TryToAddPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_AsI_Player_State_1) == 0x000140, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000154, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, CallFunc_GetGameState_ReturnValue) == 0x000160, "Member 'BP_BaseFlag_C_TryToAddPoint::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_AsBP_Base_GS) == 0x000168, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_TryToAddPoint, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'BP_BaseFlag_C_TryToAddPoint::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_BaseFlag.BP_BaseFlag_C.BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BaseFlag_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BaseFlag.BP_BaseFlag_C.ExecuteUbergraph_BP_BaseFlag
// 0x01D0 (0x01D0 - 0x0000)
struct BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseCharacter_C*                    K2Node_DynamicCast_AsBP_Base_Character;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryToAddPoint_Success;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CaptureTheFlag_World_Widget_C*      K2Node_DynamicCast_AsWB_Capture_the_Flag_World_Widget; // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag) == 0x000008, "Wrong alignment on BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag");
static_assert(sizeof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag) == 0x0001D0, "Wrong size on BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, EntryPoint) == 0x000000, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_DynamicCast_AsBP_Base_Character) == 0x0000C0, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_DynamicCast_AsBP_Base_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x0000CC, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_TryToAddPoint_Success) == 0x0000D0, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_TryToAddPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_CreateDelegate_OutputDelegate) == 0x0000D4, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_HasAuthority_ReturnValue_1) == 0x0000E4, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E8, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_DynamicCast_AsI_Player_State) == 0x0000F8, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00010C, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000118, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000124, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000128, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001B0, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001B1, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0001B8, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_DynamicCast_AsWB_Capture_the_Flag_World_Widget) == 0x0001C0, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_DynamicCast_AsWB_Capture_the_Flag_World_Widget' has a wrong offset!");
static_assert(offsetof(BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag, K2Node_DynamicCast_bSuccess_2) == 0x0001C8, "Member 'BP_BaseFlag_C_ExecuteUbergraph_BP_BaseFlag::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

