#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BasePlayerController

#include "Basic.hpp"

#include "EPlayerClass_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "EPerks_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_SetClass
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_Server_SetClass final
{
public:
	EPlayerClass                                  PlayeerClass;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_SetClass) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_Server_SetClass");
static_assert(sizeof(BP_BasePlayerController_C_Server_SetClass) == 0x000001, "Wrong size on BP_BasePlayerController_C_Server_SetClass");
static_assert(offsetof(BP_BasePlayerController_C_Server_SetClass, PlayeerClass) == 0x000000, "Member 'BP_BasePlayerController_C_Server_SetClass::PlayeerClass' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_SetPerks
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_Server_SetPerks final
{
public:
	EPerks                                        Perk;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_SetPerks) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_Server_SetPerks");
static_assert(sizeof(BP_BasePlayerController_C_Server_SetPerks) == 0x000001, "Wrong size on BP_BasePlayerController_C_Server_SetPerks");
static_assert(offsetof(BP_BasePlayerController_C_Server_SetPerks, Perk) == 0x000000, "Member 'BP_BasePlayerController_C_Server_SetPerks::Perk' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_DestroyWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_BasePlayerController_C_Server_DestroyWeapon final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_DestroyWeapon) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Server_DestroyWeapon");
static_assert(sizeof(BP_BasePlayerController_C_Server_DestroyWeapon) == 0x000008, "Wrong size on BP_BasePlayerController_C_Server_DestroyWeapon");
static_assert(offsetof(BP_BasePlayerController_C_Server_DestroyWeapon, Actor) == 0x000000, "Member 'BP_BasePlayerController_C_Server_DestroyWeapon::Actor' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_SetPrimaryWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_BasePlayerController_C_Server_SetPrimaryWeapon final
{
public:
	const class UClass*                           PrimaryWeapon;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_SetPrimaryWeapon) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Server_SetPrimaryWeapon");
static_assert(sizeof(BP_BasePlayerController_C_Server_SetPrimaryWeapon) == 0x000008, "Wrong size on BP_BasePlayerController_C_Server_SetPrimaryWeapon");
static_assert(offsetof(BP_BasePlayerController_C_Server_SetPrimaryWeapon, PrimaryWeapon) == 0x000000, "Member 'BP_BasePlayerController_C_Server_SetPrimaryWeapon::PrimaryWeapon' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_SetSecondaryWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_BasePlayerController_C_Server_SetSecondaryWeapon final
{
public:
	const class UClass*                           SecondaryWeapon;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_SetSecondaryWeapon) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Server_SetSecondaryWeapon");
static_assert(sizeof(BP_BasePlayerController_C_Server_SetSecondaryWeapon) == 0x000008, "Wrong size on BP_BasePlayerController_C_Server_SetSecondaryWeapon");
static_assert(offsetof(BP_BasePlayerController_C_Server_SetSecondaryWeapon, SecondaryWeapon) == 0x000000, "Member 'BP_BasePlayerController_C_Server_SetSecondaryWeapon::SecondaryWeapon' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_SetUtilityType
// 0x0008 (0x0008 - 0x0000)
struct BP_BasePlayerController_C_Server_SetUtilityType final
{
public:
	class UClass*                                 UtilityType;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_SetUtilityType) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Server_SetUtilityType");
static_assert(sizeof(BP_BasePlayerController_C_Server_SetUtilityType) == 0x000008, "Wrong size on BP_BasePlayerController_C_Server_SetUtilityType");
static_assert(offsetof(BP_BasePlayerController_C_Server_SetUtilityType, UtilityType) == 0x000000, "Member 'BP_BasePlayerController_C_Server_SetUtilityType::UtilityType' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.SetPerspective
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_SetPerspective final
{
public:
	bool                                          IsInTPP;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_SetPerspective) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_SetPerspective");
static_assert(sizeof(BP_BasePlayerController_C_SetPerspective) == 0x000001, "Wrong size on BP_BasePlayerController_C_SetPerspective");
static_assert(offsetof(BP_BasePlayerController_C_SetPerspective, IsInTPP) == 0x000000, "Member 'BP_BasePlayerController_C_SetPerspective::IsInTPP' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Client_SetControlRotation
// 0x000C (0x000C - 0x0000)
struct BP_BasePlayerController_C_Client_SetControlRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_Client_SetControlRotation) == 0x000004, "Wrong alignment on BP_BasePlayerController_C_Client_SetControlRotation");
static_assert(sizeof(BP_BasePlayerController_C_Client_SetControlRotation) == 0x00000C, "Wrong size on BP_BasePlayerController_C_Client_SetControlRotation");
static_assert(offsetof(BP_BasePlayerController_C_Client_SetControlRotation, NewRotation) == 0x000000, "Member 'BP_BasePlayerController_C_Client_SetControlRotation::NewRotation' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.SetTeam
// 0x0004 (0x0004 - 0x0000)
struct BP_BasePlayerController_C_SetTeam final
{
public:
	int32                                         NewTeam;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_SetTeam) == 0x000004, "Wrong alignment on BP_BasePlayerController_C_SetTeam");
static_assert(sizeof(BP_BasePlayerController_C_SetTeam) == 0x000004, "Wrong size on BP_BasePlayerController_C_SetTeam");
static_assert(offsetof(BP_BasePlayerController_C_SetTeam, NewTeam) == 0x000000, "Member 'BP_BasePlayerController_C_SetTeam::NewTeam' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.ExecuteUbergraph_BP_BasePlayerController
// 0x0668 (0x0668 - 0x0000)
struct BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0018(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0030(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0048(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0088(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x00A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x00C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_HUD_C*                              CallFunc_Create_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x00F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_KillerName_1;                   // 0x0118(0x0018)()
	float                                         K2Node_CustomEvent_KillerHealth_1;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  K2Node_CustomEvent_KillerClass_1;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType_2;                   // 0x0138(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0140(0x0018)(HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Instant;                        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CharacterSelection_C*               CallFunc_Create_ReturnValue_1;                     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Chat_C*                             CallFunc_Create_ReturnValue_2;                     // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_KillingSpreeMessage_C*              CallFunc_Create_ReturnValue_3;                     // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Kill;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Victi;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_CustomEvent_DamageType_1;                   // 0x01C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Assist;                         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadshot;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x01D8(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0208(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWB_InGameMenu_C*                       CallFunc_Create_ReturnValue_4;                     // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue_1;               // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253[0x5];                                      // 0x0253(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InGame;                         // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SettingsMenu_C*                     CallFunc_Create_ReturnValue_5;                     // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue_2;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_KillerName;                     // 0x0298(0x0018)()
	float                                         K2Node_CustomEvent_KillerHealth;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  K2Node_CustomEvent_KillerClass;                    // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType;                     // 0x02B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_KilledBy_C*                         CallFunc_Create_ReturnValue_6;                     // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_AudioVolume;                    // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundClass*                            K2Node_CustomEvent_Sound_Class;                    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue_7;                     // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_1;                 // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue_8;                     // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_2;                 // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue_9;                     // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_NewParam;                       // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue_10;                    // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GM_C*                          K2Node_DynamicCast_AsBP_Base_GM;                   // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x03E8(0x0010)(ReferenceParm)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406[0x2];                                      // 0x0406(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_6;                            // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Sender;                         // 0x0418(0x0018)()
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0430(0x0018)()
	bool                                          K2Node_CustomEvent_bTeamChat_1;                    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetPlayerName_PlayerName;                 // 0x0468(0x0018)()
	class ABP_Base_GM_C*                          K2Node_DynamicCast_AsBP_Base_GM_1;                 // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_TextToSend;                     // 0x0490(0x0018)()
	bool                                          K2Node_CustomEvent_bTeamChat;                      // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_SenderPC;                       // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_1;                         // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D2[0x2];                                      // 0x04D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_7;                            // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x0510(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x052B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_3;                 // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerClass                                  K2Node_CustomEvent_PlayeerClass;                   // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerks                                        K2Node_CustomEvent_Perk;                           // 0x054B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0588(0x0018)()
	const class UClass*                           K2Node_CustomEvent_PrimaryWeapon;                  // 0x05A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           K2Node_CustomEvent_SecondaryWeapon;                // 0x05A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_UtilityType;                    // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_1;             // 0x05C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsInTPP;                        // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5DA[0x2];                                      // 0x05DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x05DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x05E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FA[0x2];                                      // 0x05FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NewTeam;                        // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0600(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CheatManager_C*                     K2Node_DynamicCast_AsBP_Cheat_Manager;             // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642[0x6];                                      // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GM_C*                          K2Node_DynamicCast_AsBP_Base_GM_2;                 // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTeamBalance_NoSwap;                  // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65A[0x2];                                      // 0x065A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_2;      // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController");
static_assert(sizeof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController) == 0x000668, "Wrong size on BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, EntryPoint) == 0x000000, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsVisible_ReturnValue) == 0x000005, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputActionEvent_Key_2) == 0x000018, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputActionEvent_Key_1) == 0x000030, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputActionEvent_Key) == 0x000048, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsVisible_ReturnValue_1) == 0x000081, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_struct_Variable) == 0x000088, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputActionEvent_Key_3) == 0x0000A0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_HasAuthority_ReturnValue) == 0x0000B8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputActionEvent_Key_4) == 0x0000C0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_HasAuthority_ReturnValue_1) == 0x0000D8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_HasAuthority_ReturnValue_2) == 0x0000D9, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_3) == 0x0000DA, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_HasAuthority_ReturnValue_3) == 0x0000DB, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue) == 0x0000E0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue) == 0x0000E8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_4) == 0x0000F0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputActionEvent_Key_5) == 0x0000F8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_5) == 0x000110, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_KillerName_1) == 0x000118, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_KillerName_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_KillerHealth_1) == 0x000130, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_KillerHealth_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_KillerClass_1) == 0x000134, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_KillerClass_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_DamageType_2) == 0x000138, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_DamageType_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputKeyEvent_Key) == 0x000140, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable) == 0x000158, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_1) == 0x000168, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Instant) == 0x000178, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Instant' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_1) == 0x000180, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_int_Array_Index_Variable) == 0x000188, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_6) == 0x00018C, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsVisible_ReturnValue_2) == 0x00018D, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_1) == 0x000190, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_bool_Variable) == 0x000198, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_2) == 0x0001A0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_3) == 0x0001A8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Kill) == 0x0001B0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Kill' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Victi) == 0x0001B8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Victi' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_DamageType_1) == 0x0001C0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Assist) == 0x0001C8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Assist' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_bHeadshot) == 0x0001D0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_bHeadshot' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputKeyEvent_Key_1) == 0x0001D8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsI_UI) == 0x0001F0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputKeyEvent_Key_2) == 0x000208, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_2) == 0x000220, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_2) == 0x000228, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_4) == 0x000238, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_7) == 0x000240, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsInViewport_ReturnValue) == 0x000241, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_3) == 0x000248, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_8) == 0x000250, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsInViewport_ReturnValue_1) == 0x000251, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsInViewport_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_9) == 0x000252, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_3) == 0x000258, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_InGame) == 0x000268, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_InGame' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_4) == 0x000270, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_10) == 0x000278, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_5) == 0x000280, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_5) == 0x000288, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsInViewport_ReturnValue_2) == 0x000290, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsInViewport_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_KillerName) == 0x000298, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_KillerName' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_KillerHealth) == 0x0002B0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_KillerHealth' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_KillerClass) == 0x0002B4, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_KillerClass' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_DamageType) == 0x0002B8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_bool_Variable_1) == 0x0002C0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_6) == 0x0002C8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_6) == 0x0002D0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_Select_Default) == 0x0002D8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_11) == 0x0002E8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_7) == 0x0002F0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_int_Loop_Counter_Variable) == 0x0002F8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Add_IntInt_ReturnValue) == 0x0002FC, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_4) == 0x000300, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_AudioVolume) == 0x000310, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_AudioVolume' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Sound_Class) == 0x000318, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Sound_Class' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_FClamp_ReturnValue) == 0x000320, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_5) == 0x000328, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_8) == 0x000338, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameState_ReturnValue) == 0x000340, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GS) == 0x000348, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000350, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameState_ReturnValue_1) == 0x000358, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_7) == 0x000360, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GS_1) == 0x000368, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GS_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_2) == 0x000370, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsGameOver_bGameOver) == 0x000371, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsGameOver_bGameOver' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_8) == 0x000378, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValidClass_ReturnValue) == 0x000380, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_bool_Variable_2) == 0x000381, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameState_ReturnValue_2) == 0x000388, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GS_2) == 0x000390, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GS_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_3) == 0x000398, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_Select_Default_1) == 0x0003A0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_9) == 0x0003B0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_NewParam) == 0x0003B8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_9) == 0x0003C0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Create_ReturnValue_10) == 0x0003C8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Create_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameMode_ReturnValue) == 0x0003D0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GM) == 0x0003D8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GM' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_4) == 0x0003E0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetAllActorsOfClass_OutActors) == 0x0003E8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Array_Get_Item) == 0x0003F8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Array_Length_ReturnValue) == 0x000400, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000404, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_12) == 0x000405, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_6) == 0x000408, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Sender) == 0x000418, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Sender' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Text) == 0x000430, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_bTeamChat_1) == 0x000448, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_bTeamChat_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_bool_Variable_3) == 0x000449, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x00044A, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_Select_Default_2) == 0x000450, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameMode_ReturnValue_1) == 0x000460, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerName_PlayerName) == 0x000468, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerName_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GM_1) == 0x000480, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GM_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_5) == 0x000488, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_TextToSend) == 0x000490, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_TextToSend' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_bTeamChat) == 0x0004A8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_bTeamChat' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_SenderPC) == 0x0004B0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_SenderPC' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Array_Get_Item_1) == 0x0004B8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x0004C0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x0004C4, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x0004C8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_6) == 0x0004D0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004D1, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Array_Length_ReturnValue_1) == 0x0004D4, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Less_IntInt_ReturnValue) == 0x0004D8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_string_Variable_7) == 0x0004E0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, Temp_bool_Variable_4) == 0x0004F0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_Select_Default_3) == 0x0004F8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_13) == 0x000508, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Message) == 0x000510, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_14) == 0x000528, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_Event_EndPlayReason) == 0x000529, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00052A, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_15) == 0x00052B, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_DestroySession_ReturnValue) == 0x000530, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameState_ReturnValue_3) == 0x000538, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GS_3) == 0x000540, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GS_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_7) == 0x000548, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_16) == 0x000549, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_PlayeerClass) == 0x00054A, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_PlayeerClass' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Perk) == 0x00054B, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Perk' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerPawn_ReturnValue) == 0x000550, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_Actor) == 0x000558, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000560, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_8) == 0x000570, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerName_ReturnValue) == 0x000578, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_Conv_StringToText_ReturnValue) == 0x000588, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_PrimaryWeapon) == 0x0005A0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_PrimaryWeapon' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_SecondaryWeapon) == 0x0005A8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_SecondaryWeapon' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_17) == 0x0005B0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_UtilityType) == 0x0005B8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_UtilityType' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x0005C0, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsI_Pawn_Actions_1) == 0x0005C8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsI_Pawn_Actions_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_9) == 0x0005D8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_IsInTPP) == 0x0005D9, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_IsInTPP' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_NewRotation) == 0x0005DC, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsI_Player_State) == 0x0005E8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_10) == 0x0005F8, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_IsValid_ReturnValue_18) == 0x0005F9, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_CustomEvent_NewTeam) == 0x0005FC, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_CustomEvent_NewTeam' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_InputKeyEvent_Key_3) == 0x000600, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsI_Player_State_1) == 0x000618, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_11) == 0x000628, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerController_ReturnValue_10) == 0x000630, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Cheat_Manager) == 0x000638, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Cheat_Manager' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_12) == 0x000640, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000641, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetGameMode_ReturnValue_2) == 0x000648, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_AsBP_Base_GM_2) == 0x000650, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_AsBP_Base_GM_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, K2Node_DynamicCast_bSuccess_13) == 0x000658, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_CheckTeamBalance_NoSwap) == 0x000659, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_CheckTeamBalance_NoSwap' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_GetPlayerTeamFromPlayerState_Team_2) == 0x00065C, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_GetPlayerTeamFromPlayerState_Team_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000660, "Member 'BP_BasePlayerController_C_ExecuteUbergraph_BP_BasePlayerController::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.IsAnyMenuOpen
// 0x0006 (0x0006 - 0x0000)
struct BP_BasePlayerController_C_IsAnyMenuOpen final
{
public:
	bool                                          bTrue;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_IsAnyMenuOpen) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_IsAnyMenuOpen");
static_assert(sizeof(BP_BasePlayerController_C_IsAnyMenuOpen) == 0x000006, "Wrong size on BP_BasePlayerController_C_IsAnyMenuOpen");
static_assert(offsetof(BP_BasePlayerController_C_IsAnyMenuOpen, bTrue) == 0x000000, "Member 'BP_BasePlayerController_C_IsAnyMenuOpen::bTrue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_IsAnyMenuOpen, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_BasePlayerController_C_IsAnyMenuOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_IsAnyMenuOpen, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_BasePlayerController_C_IsAnyMenuOpen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_IsAnyMenuOpen, CallFunc_IsVisible_ReturnValue) == 0x000003, "Member 'BP_BasePlayerController_C_IsAnyMenuOpen::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_IsAnyMenuOpen, CallFunc_IsValid_ReturnValue_2) == 0x000004, "Member 'BP_BasePlayerController_C_IsAnyMenuOpen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_IsAnyMenuOpen, CallFunc_IsVisible_ReturnValue_1) == 0x000005, "Member 'BP_BasePlayerController_C_IsAnyMenuOpen::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.SetNoCooldownAbilities
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_SetNoCooldownAbilities final
{
public:
	bool                                          bNoAbilityCooldown;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_SetNoCooldownAbilities) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_SetNoCooldownAbilities");
static_assert(sizeof(BP_BasePlayerController_C_SetNoCooldownAbilities) == 0x000001, "Wrong size on BP_BasePlayerController_C_SetNoCooldownAbilities");
static_assert(offsetof(BP_BasePlayerController_C_SetNoCooldownAbilities, bNoAbilityCooldown) == 0x000000, "Member 'BP_BasePlayerController_C_SetNoCooldownAbilities::bNoAbilityCooldown' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.SetInfiniteExplosives
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_SetInfiniteExplosives final
{
public:
	bool                                          bInfiniteExplosives_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_SetInfiniteExplosives) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_SetInfiniteExplosives");
static_assert(sizeof(BP_BasePlayerController_C_SetInfiniteExplosives) == 0x000001, "Wrong size on BP_BasePlayerController_C_SetInfiniteExplosives");
static_assert(offsetof(BP_BasePlayerController_C_SetInfiniteExplosives, bInfiniteExplosives_0) == 0x000000, "Member 'BP_BasePlayerController_C_SetInfiniteExplosives::bInfiniteExplosives_0' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.SetInfiniteClip
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_SetInfiniteClip final
{
public:
	bool                                          bInfiniteClip_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_SetInfiniteClip) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_SetInfiniteClip");
static_assert(sizeof(BP_BasePlayerController_C_SetInfiniteClip) == 0x000001, "Wrong size on BP_BasePlayerController_C_SetInfiniteClip");
static_assert(offsetof(BP_BasePlayerController_C_SetInfiniteClip, bInfiniteClip_0) == 0x000000, "Member 'BP_BasePlayerController_C_SetInfiniteClip::bInfiniteClip_0' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.GetPlayerName
// 0x0040 (0x0040 - 0x0000)
struct BP_BasePlayerController_C_GetPlayerName final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(BP_BasePlayerController_C_GetPlayerName) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_GetPlayerName");
static_assert(sizeof(BP_BasePlayerController_C_GetPlayerName) == 0x000040, "Wrong size on BP_BasePlayerController_C_GetPlayerName");
static_assert(offsetof(BP_BasePlayerController_C_GetPlayerName, PlayerName) == 0x000000, "Member 'BP_BasePlayerController_C_GetPlayerName::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_GetPlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x000018, "Member 'BP_BasePlayerController_C_GetPlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_GetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_BasePlayerController_C_GetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.LoadSettings
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BasePlayerController_C_LoadSettings final
{
public:
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0000(0x0028)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_1;           // 0x0050(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_2;           // 0x0088(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_3;           // 0x00B0(0x0028)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_4;           // 0x00E0(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_5;           // 0x0108(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_6;           // 0x0130(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_7;           // 0x0158(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFPS_SaveGame_C*                        K2Node_DynamicCast_AsFPS_Save_Game;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_LoadSettings) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_LoadSettings");
static_assert(sizeof(BP_BasePlayerController_C_LoadSettings) == 0x0001A0, "Wrong size on BP_BasePlayerController_C_LoadSettings");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000000, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_DynamicCast_AsBP_Player_Character) == 0x000040, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_1) == 0x000050, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, Temp_bool_Variable) == 0x000078, "Member 'BP_BasePlayerController_C_LoadSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, Temp_bool_Variable_1) == 0x000079, "Member 'BP_BasePlayerController_C_LoadSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_Select_Default) == 0x00007C, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_Select_Default_1) == 0x000080, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_2) == 0x000088, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_3) == 0x0000B0, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_3' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000D8, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_4) == 0x0000E0, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_4' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_5) == 0x000108, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_5' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_6) == 0x000130, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_6' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_MakeStruct_InputAxisKeyMapping_7) == 0x000158, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_MakeStruct_InputAxisKeyMapping_7' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_GetInputSettings_ReturnValue) == 0x000180, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000188, "Member 'BP_BasePlayerController_C_LoadSettings::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_DynamicCast_AsFPS_Save_Game) == 0x000190, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_DynamicCast_AsFPS_Save_Game' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_LoadSettings, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'BP_BasePlayerController_C_LoadSettings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_Alt_Two_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_Alt_Two_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_Alt_Four_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_Alt_Four_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_Alt_Three_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_Alt_Three_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_Alt_One_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_Alt_One_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_SettingMenu_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_SettingMenu_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_ShowScoreScreen_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_GlobalChat_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_TeamChat_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.InpActEvt_Chat_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_BasePlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.ShowKilledByWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_BasePlayerController_C_ShowKilledByWidget final
{
public:
	class FText                                   KillerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         KillerHealth;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  KillerClass;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_ShowKilledByWidget) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_ShowKilledByWidget");
static_assert(sizeof(BP_BasePlayerController_C_ShowKilledByWidget) == 0x000028, "Wrong size on BP_BasePlayerController_C_ShowKilledByWidget");
static_assert(offsetof(BP_BasePlayerController_C_ShowKilledByWidget, KillerName) == 0x000000, "Member 'BP_BasePlayerController_C_ShowKilledByWidget::KillerName' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ShowKilledByWidget, KillerHealth) == 0x000018, "Member 'BP_BasePlayerController_C_ShowKilledByWidget::KillerHealth' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ShowKilledByWidget, KillerClass) == 0x00001C, "Member 'BP_BasePlayerController_C_ShowKilledByWidget::KillerClass' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ShowKilledByWidget, DamageType) == 0x000020, "Member 'BP_BasePlayerController_C_ShowKilledByWidget::DamageType' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Client_ShowCharacterSelectionWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget");
static_assert(sizeof(BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget) == 0x000001, "Wrong size on BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget");
static_assert(offsetof(BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget, Instant) == 0x000000, "Member 'BP_BasePlayerController_C_Client_ShowCharacterSelectionWidget::Instant' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Client_UpdateKillFeed
// 0x0028 (0x0028 - 0x0000)
struct BP_BasePlayerController_C_Client_UpdateKillFeed final
{
public:
	class APlayerState*                           Kill;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Victi;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Assist;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadshot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_Client_UpdateKillFeed) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Client_UpdateKillFeed");
static_assert(sizeof(BP_BasePlayerController_C_Client_UpdateKillFeed) == 0x000028, "Wrong size on BP_BasePlayerController_C_Client_UpdateKillFeed");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateKillFeed, Kill) == 0x000000, "Member 'BP_BasePlayerController_C_Client_UpdateKillFeed::Kill' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateKillFeed, Victi) == 0x000008, "Member 'BP_BasePlayerController_C_Client_UpdateKillFeed::Victi' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateKillFeed, DamageType) == 0x000010, "Member 'BP_BasePlayerController_C_Client_UpdateKillFeed::DamageType' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateKillFeed, Assist) == 0x000018, "Member 'BP_BasePlayerController_C_Client_UpdateKillFeed::Assist' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateKillFeed, bHeadshot) == 0x000020, "Member 'BP_BasePlayerController_C_Client_UpdateKillFeed::bHeadshot' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.ShowSettingsMenu
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_ShowSettingsMenu final
{
public:
	bool                                          InGame;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_ShowSettingsMenu) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_ShowSettingsMenu");
static_assert(sizeof(BP_BasePlayerController_C_ShowSettingsMenu) == 0x000001, "Wrong size on BP_BasePlayerController_C_ShowSettingsMenu");
static_assert(offsetof(BP_BasePlayerController_C_ShowSettingsMenu, InGame) == 0x000000, "Member 'BP_BasePlayerController_C_ShowSettingsMenu::InGame' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.CreateKilledByWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_BasePlayerController_C_CreateKilledByWidget final
{
public:
	class FText                                   KillerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         KillerHealth;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  KillerClass;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_CreateKilledByWidget) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_CreateKilledByWidget");
static_assert(sizeof(BP_BasePlayerController_C_CreateKilledByWidget) == 0x000028, "Wrong size on BP_BasePlayerController_C_CreateKilledByWidget");
static_assert(offsetof(BP_BasePlayerController_C_CreateKilledByWidget, KillerName) == 0x000000, "Member 'BP_BasePlayerController_C_CreateKilledByWidget::KillerName' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_CreateKilledByWidget, KillerHealth) == 0x000018, "Member 'BP_BasePlayerController_C_CreateKilledByWidget::KillerHealth' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_CreateKilledByWidget, KillerClass) == 0x00001C, "Member 'BP_BasePlayerController_C_CreateKilledByWidget::KillerClass' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_CreateKilledByWidget, DamageType) == 0x000020, "Member 'BP_BasePlayerController_C_CreateKilledByWidget::DamageType' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.ChangeVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_BasePlayerController_C_ChangeVolume final
{
public:
	float                                         AudioVolume;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundClass*                            Sound_Class;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_ChangeVolume) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_ChangeVolume");
static_assert(sizeof(BP_BasePlayerController_C_ChangeVolume) == 0x000010, "Wrong size on BP_BasePlayerController_C_ChangeVolume");
static_assert(offsetof(BP_BasePlayerController_C_ChangeVolume, AudioVolume) == 0x000000, "Member 'BP_BasePlayerController_C_ChangeVolume::AudioVolume' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_ChangeVolume, Sound_Class) == 0x000008, "Member 'BP_BasePlayerController_C_ChangeVolume::Sound_Class' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Client_AddWidgetByClass
// 0x0008 (0x0008 - 0x0000)
struct BP_BasePlayerController_C_Client_AddWidgetByClass final
{
public:
	class UClass*                                 NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Client_AddWidgetByClass) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Client_AddWidgetByClass");
static_assert(sizeof(BP_BasePlayerController_C_Client_AddWidgetByClass) == 0x000008, "Wrong size on BP_BasePlayerController_C_Client_AddWidgetByClass");
static_assert(offsetof(BP_BasePlayerController_C_Client_AddWidgetByClass, NewParam) == 0x000000, "Member 'BP_BasePlayerController_C_Client_AddWidgetByClass::NewParam' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Client_UpdateChat
// 0x0038 (0x0038 - 0x0000)
struct BP_BasePlayerController_C_Client_UpdateChat final
{
public:
	class FText                                   Sender;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bTeamChat;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_Client_UpdateChat) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Client_UpdateChat");
static_assert(sizeof(BP_BasePlayerController_C_Client_UpdateChat) == 0x000038, "Wrong size on BP_BasePlayerController_C_Client_UpdateChat");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateChat, Sender) == 0x000000, "Member 'BP_BasePlayerController_C_Client_UpdateChat::Sender' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateChat, Text) == 0x000018, "Member 'BP_BasePlayerController_C_Client_UpdateChat::Text' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Client_UpdateChat, bTeamChat) == 0x000030, "Member 'BP_BasePlayerController_C_Client_UpdateChat::bTeamChat' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.Server_GetChatMessage
// 0x0028 (0x0028 - 0x0000)
struct BP_BasePlayerController_C_Server_GetChatMessage final
{
public:
	class FText                                   TextToSend;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bTeamChat;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      SenderPC;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_Server_GetChatMessage) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_Server_GetChatMessage");
static_assert(sizeof(BP_BasePlayerController_C_Server_GetChatMessage) == 0x000028, "Wrong size on BP_BasePlayerController_C_Server_GetChatMessage");
static_assert(offsetof(BP_BasePlayerController_C_Server_GetChatMessage, TextToSend) == 0x000000, "Member 'BP_BasePlayerController_C_Server_GetChatMessage::TextToSend' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Server_GetChatMessage, bTeamChat) == 0x000018, "Member 'BP_BasePlayerController_C_Server_GetChatMessage::bTeamChat' has a wrong offset!");
static_assert(offsetof(BP_BasePlayerController_C_Server_GetChatMessage, SenderPC) == 0x000020, "Member 'BP_BasePlayerController_C_Server_GetChatMessage::SenderPC' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.SendServerMessage
// 0x0018 (0x0018 - 0x0000)
struct BP_BasePlayerController_C_SendServerMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BasePlayerController_C_SendServerMessage) == 0x000008, "Wrong alignment on BP_BasePlayerController_C_SendServerMessage");
static_assert(sizeof(BP_BasePlayerController_C_SendServerMessage) == 0x000018, "Wrong size on BP_BasePlayerController_C_SendServerMessage");
static_assert(offsetof(BP_BasePlayerController_C_SendServerMessage, Message) == 0x000000, "Member 'BP_BasePlayerController_C_SendServerMessage::Message' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BasePlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_ReceiveEndPlay");
static_assert(sizeof(BP_BasePlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BasePlayerController_C_ReceiveEndPlay");
static_assert(offsetof(BP_BasePlayerController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BasePlayerController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.HasNoAbilityCooldown
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_HasNoAbilityCooldown final
{
public:
	bool                                          bNoAbilityCooldown;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_HasNoAbilityCooldown) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_HasNoAbilityCooldown");
static_assert(sizeof(BP_BasePlayerController_C_HasNoAbilityCooldown) == 0x000001, "Wrong size on BP_BasePlayerController_C_HasNoAbilityCooldown");
static_assert(offsetof(BP_BasePlayerController_C_HasNoAbilityCooldown, bNoAbilityCooldown) == 0x000000, "Member 'BP_BasePlayerController_C_HasNoAbilityCooldown::bNoAbilityCooldown' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.HasInfiniteExplosives
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_HasInfiniteExplosives final
{
public:
	bool                                          bInfiniteExplosives_0;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_HasInfiniteExplosives) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_HasInfiniteExplosives");
static_assert(sizeof(BP_BasePlayerController_C_HasInfiniteExplosives) == 0x000001, "Wrong size on BP_BasePlayerController_C_HasInfiniteExplosives");
static_assert(offsetof(BP_BasePlayerController_C_HasInfiniteExplosives, bInfiniteExplosives_0) == 0x000000, "Member 'BP_BasePlayerController_C_HasInfiniteExplosives::bInfiniteExplosives_0' has a wrong offset!");

// Function BP_BasePlayerController.BP_BasePlayerController_C.HasInfiniteClip
// 0x0001 (0x0001 - 0x0000)
struct BP_BasePlayerController_C_HasInfiniteClip final
{
public:
	bool                                          bInfiniteClip_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BasePlayerController_C_HasInfiniteClip) == 0x000001, "Wrong alignment on BP_BasePlayerController_C_HasInfiniteClip");
static_assert(sizeof(BP_BasePlayerController_C_HasInfiniteClip) == 0x000001, "Wrong size on BP_BasePlayerController_C_HasInfiniteClip");
static_assert(offsetof(BP_BasePlayerController_C_HasInfiniteClip, bInfiniteClip_0) == 0x000000, "Member 'BP_BasePlayerController_C_HasInfiniteClip::bInfiniteClip_0' has a wrong offset!");

}

