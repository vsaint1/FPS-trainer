#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharacterSelection

#include "Basic.hpp"

#include "EPlayerClass_structs.hpp"
#include "Engine_structs.hpp"
#include "EPerks_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EFiringMode_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "EGameModeNames_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CharacterSelection.WB_CharacterSelection_C
// 0x03C0 (0x0620 - 0x0260)
class UWB_CharacterSelection_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                AssaultClass;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AssaultIcon;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                GrenadeButton;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GrenadeIcon;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GunName;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GunSlot;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MedicClass;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MedicIcon;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextGrenade;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NextGrenadeText;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextPerk;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NextPerkText;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextSidearmButton;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NextSidearmText;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextWeapon;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NextWeaponText;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PerkImage;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PerksButton;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PlayButton;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayText;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PrematchTimer;                                     // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PreviousGrenade;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PreviousGrenadeText;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PreviousPerk;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PreviousPerkText;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PreviousSidearmButton;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PreviousSidearmText;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PreviousWeapon;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PreviousWeaponText;                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PrimaryWeaponButton;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PrimaryWeaponOverlay;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PrymaryWeaponImage;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SideArm;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SideArmImage;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SidearmName;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_157;                                       // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SupportClass;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SupportIcon;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TeamImage;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TeamText;                                          // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ToggleTeamButton;                                  // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ToggleTeamText;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EPlayerClass                                  PlayerClass;                                       // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReadyToSpawn;                                     // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EPerks                                        Selected_Perk;                                     // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3[0x1];                                      // 0x03C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           On_HoveredTextColor;                               // 0x03C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SelectedPrimaryWeapon;                             // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SelectedSecondaryWeapon;                           // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SelectedUtilityType;                               // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredTextColor;                                  // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ButtonColor;                                       // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrimaryWeaponIndex;                                // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PerkIndex;                                         // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GrenadeIndex;                                      // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SidearmWeaponIndex;                                // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, class UTexture2D*>        PrimaryWeapons;                                    // 0x0440(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UTexture2D*>        SecondaryWeapons;                                  // 0x0490(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EPerks, class UTexture2D*>               Perks;                                             // 0x04E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UTexture2D*>        UtilityArray;                                      // 0x0530(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UTexture2D*>        SecondPrimaryWeapons;                              // 0x0580(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UTexture2D*>        SecondaryMap;                                      // 0x05D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnPerkChange();
	ESlateVisibility Get_ToggleTeamButton_Visibility();
	void OnConstruct();
	void InitialSetup();
	class FText GetTimeLeftToStart();
	ESlateVisibility Get_PrematchTimer_Visibility();
	class FText Get_TeamText();
	ESlateVisibility ChangeTeamVisibility();
	class FText GetPerkDescription();
	class FText GetSpawnCountDown();
	bool GetReadyToSpawnButtonIsEnabled();
	bool SetEnableMedicButton();
	bool SetEnableSupportButton();
	bool SetEnableAssaultButton();
	struct FSlateBrush GetTeamImage();
	void ShowCrouchIcon();
	void ShowStandingIcon();
	void UpdateSkillIcon(class UTexture2D* SkillIcon);
	void BndEvt__AssaultClass_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__MedicClass_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__SupportClass_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void UpdateExplosives(int32 ExplosivesAmount, class UTexture* Icon);
	void Construct();
	void HideWidget();
	void ShowWidget();
	void BndEvt__NextWeapon_K2Node_ComponentBoundEvent_23_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NextWeapon_K2Node_ComponentBoundEvent_24_OnButtonHoverEvent__DelegateSignature();
	void OnButtonHovered(class UButton* Button, class UTextBlock* Text);
	void OnButtonUnhovered(class UButton* Button, class UTextBlock* Text);
	void BndEvt__PreviousWeapon_K2Node_ComponentBoundEvent_25_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousWeapon_K2Node_ComponentBoundEvent_26_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousWeapon_K2Node_ComponentBoundEvent_27_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__NextWeapon_K2Node_ComponentBoundEvent_28_OnButtonClickedEvent__DelegateSignature();
	void UpdatePrimaryWeapon();
	void BndEvt__PlayButton_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__PlayButton_K2Node_ComponentBoundEvent_21_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PlayButton_K2Node_ComponentBoundEvent_29_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_127_K2Node_ComponentBoundEvent_30_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__ToggleTeamButton_K2Node_ComponentBoundEvent_31_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ToggleTeamButton_K2Node_ComponentBoundEvent_32_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NextPerk_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__NextPerk_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NextPerk_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousPerk_K2Node_ComponentBoundEvent_22_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__PreviousPerk_K2Node_ComponentBoundEvent_36_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousPerk_K2Node_ComponentBoundEvent_37_OnButtonHoverEvent__DelegateSignature();
	void UpdatePerk();
	void BndEvt__NextGrenade_K2Node_ComponentBoundEvent_38_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__NextGrenade_K2Node_ComponentBoundEvent_39_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NextGrenade_K2Node_ComponentBoundEvent_40_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousGrenade_K2Node_ComponentBoundEvent_41_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousGrenade_K2Node_ComponentBoundEvent_42_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousGrenade_K2Node_ComponentBoundEvent_43_OnButtonClickedEvent__DelegateSignature();
	void UpdateGrenades();
	void InitButtons();
	void ShowAbilityCooldownTime(float TimeRemaining);
	void HideInteractInfo();
	void BndEvt__NextSidearmButton_K2Node_ComponentBoundEvent_44_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NextSidearmButton_K2Node_ComponentBoundEvent_45_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__NextSidearmButton_K2Node_ComponentBoundEvent_46_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__PreviousSidearmButton_K2Node_ComponentBoundEvent_47_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousSidearmButton_K2Node_ComponentBoundEvent_48_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__PreviousSidearmButton_K2Node_ComponentBoundEvent_49_OnButtonClickedEvent__DelegateSignature();
	void ShowInteractInfo(const class FText& Description);
	void ShowHealOverlay();
	void UpdateSideArm();
	void HideInteractProgressBar();
	void ShowInteractProgressBar(float InteractTime);
	void UpdateObjectiveMarkers(class ABP_Base_Objective_C* ObjectiveToUpdate, bool PlayIconAnim, int32 Team);
	void HideWeaponInfo();
	void ShowScore(float Score, const class FText& Reason);
	void UpdateKillFeed(class APlayerState* Killer, class APlayerState* Victim, const class UDamageType* DamageType, class APlayerState* Assist, bool bHeadshot);
	void UpdateGameModeScores(int32 TeamAPoints, int32 TeamBPoints, int32 PointsToWin);
	void UpdateMatchTimer(float TimeInSeconds);
	void ShowHitOverlay();
	void UpdateTotalBullets(int32 TotalBullets);
	void UpdateCurrentBullets(int32 CurrentBullets, int32 BulletsPerMag);
	void UpdateHP(float NewHP, float MaxHP);
	void ShowHitMarker(bool bVehicle);
	void UpdateTeamIcon(class UTexture* TeamIcon);
	void OnOwnerDeath();
	void UpdateFiringMode(EFiringMode NewFiringMode);
	void ShowKillMarker();
	void UpdateDeathmatchScores(const class FString& WinnerName, int32 WinnerKills, int32 KillsToWin);
	void UpdateRushScores(int32 Reinforcements, int32 TotalReinforcements);
	void ToggleTeamTextDisable();
	void ExecuteUbergraph_WB_CharacterSelection(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CharacterSelection_C">();
	}
	static class UWB_CharacterSelection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CharacterSelection_C>();
	}
};
static_assert(alignof(UWB_CharacterSelection_C) == 0x000008, "Wrong alignment on UWB_CharacterSelection_C");
static_assert(sizeof(UWB_CharacterSelection_C) == 0x000620, "Wrong size on UWB_CharacterSelection_C");
static_assert(offsetof(UWB_CharacterSelection_C, UberGraphFrame) == 0x000260, "Member 'UWB_CharacterSelection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, AssaultClass) == 0x000268, "Member 'UWB_CharacterSelection_C::AssaultClass' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, AssaultIcon) == 0x000270, "Member 'UWB_CharacterSelection_C::AssaultIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, GrenadeButton) == 0x000278, "Member 'UWB_CharacterSelection_C::GrenadeButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, GrenadeIcon) == 0x000280, "Member 'UWB_CharacterSelection_C::GrenadeIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, GunName) == 0x000288, "Member 'UWB_CharacterSelection_C::GunName' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, GunSlot) == 0x000290, "Member 'UWB_CharacterSelection_C::GunSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, MedicClass) == 0x000298, "Member 'UWB_CharacterSelection_C::MedicClass' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, MedicIcon) == 0x0002A0, "Member 'UWB_CharacterSelection_C::MedicIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextGrenade) == 0x0002A8, "Member 'UWB_CharacterSelection_C::NextGrenade' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextGrenadeText) == 0x0002B0, "Member 'UWB_CharacterSelection_C::NextGrenadeText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextPerk) == 0x0002B8, "Member 'UWB_CharacterSelection_C::NextPerk' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextPerkText) == 0x0002C0, "Member 'UWB_CharacterSelection_C::NextPerkText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextSidearmButton) == 0x0002C8, "Member 'UWB_CharacterSelection_C::NextSidearmButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextSidearmText) == 0x0002D0, "Member 'UWB_CharacterSelection_C::NextSidearmText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextWeapon) == 0x0002D8, "Member 'UWB_CharacterSelection_C::NextWeapon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, NextWeaponText) == 0x0002E0, "Member 'UWB_CharacterSelection_C::NextWeaponText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PerkImage) == 0x0002E8, "Member 'UWB_CharacterSelection_C::PerkImage' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PerksButton) == 0x0002F0, "Member 'UWB_CharacterSelection_C::PerksButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PlayButton) == 0x0002F8, "Member 'UWB_CharacterSelection_C::PlayButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PlayText) == 0x000300, "Member 'UWB_CharacterSelection_C::PlayText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PrematchTimer) == 0x000308, "Member 'UWB_CharacterSelection_C::PrematchTimer' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousGrenade) == 0x000310, "Member 'UWB_CharacterSelection_C::PreviousGrenade' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousGrenadeText) == 0x000318, "Member 'UWB_CharacterSelection_C::PreviousGrenadeText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousPerk) == 0x000320, "Member 'UWB_CharacterSelection_C::PreviousPerk' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousPerkText) == 0x000328, "Member 'UWB_CharacterSelection_C::PreviousPerkText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousSidearmButton) == 0x000330, "Member 'UWB_CharacterSelection_C::PreviousSidearmButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousSidearmText) == 0x000338, "Member 'UWB_CharacterSelection_C::PreviousSidearmText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousWeapon) == 0x000340, "Member 'UWB_CharacterSelection_C::PreviousWeapon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PreviousWeaponText) == 0x000348, "Member 'UWB_CharacterSelection_C::PreviousWeaponText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PrimaryWeaponButton) == 0x000350, "Member 'UWB_CharacterSelection_C::PrimaryWeaponButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PrimaryWeaponOverlay) == 0x000358, "Member 'UWB_CharacterSelection_C::PrimaryWeaponOverlay' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PrymaryWeaponImage) == 0x000360, "Member 'UWB_CharacterSelection_C::PrymaryWeaponImage' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SideArm) == 0x000368, "Member 'UWB_CharacterSelection_C::SideArm' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SideArmImage) == 0x000370, "Member 'UWB_CharacterSelection_C::SideArmImage' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SidearmName) == 0x000378, "Member 'UWB_CharacterSelection_C::SidearmName' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SizeBox_157) == 0x000380, "Member 'UWB_CharacterSelection_C::SizeBox_157' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SupportClass) == 0x000388, "Member 'UWB_CharacterSelection_C::SupportClass' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SupportIcon) == 0x000390, "Member 'UWB_CharacterSelection_C::SupportIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, TeamImage) == 0x000398, "Member 'UWB_CharacterSelection_C::TeamImage' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, TeamText) == 0x0003A0, "Member 'UWB_CharacterSelection_C::TeamText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, TextBlock_1) == 0x0003A8, "Member 'UWB_CharacterSelection_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, ToggleTeamButton) == 0x0003B0, "Member 'UWB_CharacterSelection_C::ToggleTeamButton' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, ToggleTeamText) == 0x0003B8, "Member 'UWB_CharacterSelection_C::ToggleTeamText' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PlayerClass) == 0x0003C0, "Member 'UWB_CharacterSelection_C::PlayerClass' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, bReadyToSpawn) == 0x0003C1, "Member 'UWB_CharacterSelection_C::bReadyToSpawn' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, Selected_Perk) == 0x0003C2, "Member 'UWB_CharacterSelection_C::Selected_Perk' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, On_HoveredTextColor) == 0x0003C4, "Member 'UWB_CharacterSelection_C::On_HoveredTextColor' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SelectedPrimaryWeapon) == 0x0003D8, "Member 'UWB_CharacterSelection_C::SelectedPrimaryWeapon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SelectedSecondaryWeapon) == 0x0003E0, "Member 'UWB_CharacterSelection_C::SelectedSecondaryWeapon' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SelectedUtilityType) == 0x0003E8, "Member 'UWB_CharacterSelection_C::SelectedUtilityType' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, HoveredColor) == 0x0003F0, "Member 'UWB_CharacterSelection_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, HoveredTextColor) == 0x000400, "Member 'UWB_CharacterSelection_C::HoveredTextColor' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, ButtonColor) == 0x000410, "Member 'UWB_CharacterSelection_C::ButtonColor' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, TextColor) == 0x000420, "Member 'UWB_CharacterSelection_C::TextColor' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PrimaryWeaponIndex) == 0x000430, "Member 'UWB_CharacterSelection_C::PrimaryWeaponIndex' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PerkIndex) == 0x000434, "Member 'UWB_CharacterSelection_C::PerkIndex' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, GrenadeIndex) == 0x000438, "Member 'UWB_CharacterSelection_C::GrenadeIndex' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SidearmWeaponIndex) == 0x00043C, "Member 'UWB_CharacterSelection_C::SidearmWeaponIndex' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, PrimaryWeapons) == 0x000440, "Member 'UWB_CharacterSelection_C::PrimaryWeapons' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SecondaryWeapons) == 0x000490, "Member 'UWB_CharacterSelection_C::SecondaryWeapons' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, Perks) == 0x0004E0, "Member 'UWB_CharacterSelection_C::Perks' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, UtilityArray) == 0x000530, "Member 'UWB_CharacterSelection_C::UtilityArray' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SecondPrimaryWeapons) == 0x000580, "Member 'UWB_CharacterSelection_C::SecondPrimaryWeapons' has a wrong offset!");
static_assert(offsetof(UWB_CharacterSelection_C, SecondaryMap) == 0x0005D0, "Member 'UWB_CharacterSelection_C::SecondaryMap' has a wrong offset!");

}

