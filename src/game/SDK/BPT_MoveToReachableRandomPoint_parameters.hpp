#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPT_MoveToReachableRandomPoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPT_MoveToReachableRandomPoint.BPT_MoveToReachableRandomPoint_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI");
static_assert(sizeof(BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BPT_MoveToReachableRandomPoint_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BPT_MoveToReachableRandomPoint.BPT_MoveToReachableRandomPoint_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI");
static_assert(sizeof(BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI) == 0x000010, "Wrong size on BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BPT_MoveToReachableRandomPoint_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BPT_MoveToReachableRandomPoint.BPT_MoveToReachableRandomPoint_C.ExecuteUbergraph_BPT_MoveToReachableRandomPoint
// 0x0068 (0x0068 - 0x0000)
struct BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation_1; // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue_1; // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint) == 0x000008, "Wrong alignment on BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint");
static_assert(sizeof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint) == 0x000068, "Wrong size on BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, EntryPoint) == 0x000000, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, K2Node_Event_OwnerController) == 0x000018, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000028, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_GetDistanceTo_ReturnValue) == 0x000034, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000048, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000054, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation_1) == 0x000058, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation_1' has a wrong offset!");
static_assert(offsetof(BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue_1) == 0x000064, "Member 'BPT_MoveToReachableRandomPoint_C_ExecuteUbergraph_BPT_MoveToReachableRandomPoint::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue_1' has a wrong offset!");

}

