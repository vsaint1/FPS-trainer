#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerScores

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EGameModeNames_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_PlayerScores.WB_PlayerScores_C.UpdateTeamScores
// 0x0030 (0x0030 - 0x0000)
struct WB_PlayerScores_C_UpdateTeamScores final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0018(0x0018)()
};
static_assert(alignof(WB_PlayerScores_C_UpdateTeamScores) == 0x000008, "Wrong alignment on WB_PlayerScores_C_UpdateTeamScores");
static_assert(sizeof(WB_PlayerScores_C_UpdateTeamScores) == 0x000030, "Wrong size on WB_PlayerScores_C_UpdateTeamScores");
static_assert(offsetof(WB_PlayerScores_C_UpdateTeamScores, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'WB_PlayerScores_C_UpdateTeamScores::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateTeamScores, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000018, "Member 'WB_PlayerScores_C_UpdateTeamScores::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.CleanList
// 0x0038 (0x0038 - 0x0000)
struct WB_PlayerScores_C_CleanList final
{
public:
	TArray<class ABP_PlayerState_C*>              List;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Team;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerScores_C_CleanList) == 0x000008, "Wrong alignment on WB_PlayerScores_C_CleanList");
static_assert(sizeof(WB_PlayerScores_C_CleanList) == 0x000038, "Wrong size on WB_PlayerScores_C_CleanList");
static_assert(offsetof(WB_PlayerScores_C_CleanList, List) == 0x000000, "Member 'WB_PlayerScores_C_CleanList::List' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, Team) == 0x000010, "Member 'WB_PlayerScores_C_CleanList::Team' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WB_PlayerScores_C_CleanList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_PlayerScores_C_CleanList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_PlayerScores_C_CleanList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WB_PlayerScores_C_CleanList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'WB_PlayerScores_C_CleanList::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WB_PlayerScores_C_CleanList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_PlayerScores_C_CleanList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_CleanList, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WB_PlayerScores_C_CleanList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.AssingPlayerSlots
// 0x00C8 (0x00C8 - 0x0000)
struct WB_PlayerScores_C_AssingPlayerSlots final
{
public:
	class UScrollBox*                             ScrollBox;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerState_C*>              Players;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         NumberOfSlots;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              PlayersArray;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UScrollBox*                             SB;                                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PlayerScore_C*                      CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerScore_C*                      K2Node_DynamicCast_AsWB_Player_Score;              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerScores_C_AssingPlayerSlots) == 0x000008, "Wrong alignment on WB_PlayerScores_C_AssingPlayerSlots");
static_assert(sizeof(WB_PlayerScores_C_AssingPlayerSlots) == 0x0000C8, "Wrong size on WB_PlayerScores_C_AssingPlayerSlots");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, ScrollBox) == 0x000000, "Member 'WB_PlayerScores_C_AssingPlayerSlots::ScrollBox' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, Players) == 0x000008, "Member 'WB_PlayerScores_C_AssingPlayerSlots::Players' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, NumberOfSlots) == 0x000018, "Member 'WB_PlayerScores_C_AssingPlayerSlots::NumberOfSlots' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, PlayersArray) == 0x000020, "Member 'WB_PlayerScores_C_AssingPlayerSlots::PlayersArray' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, SB) == 0x000030, "Member 'WB_PlayerScores_C_AssingPlayerSlots::SB' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, Temp_int_Variable) == 0x000038, "Member 'WB_PlayerScores_C_AssingPlayerSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Create_ReturnValue) == 0x000040, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WB_PlayerScores_C_AssingPlayerSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, Temp_int_Array_Index_Variable) == 0x000054, "Member 'WB_PlayerScores_C_AssingPlayerSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_GetChildrenCount_ReturnValue) == 0x00005C, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_GetChildAt_ReturnValue) == 0x000068, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, Temp_int_Variable_1) == 0x000070, "Member 'WB_PlayerScores_C_AssingPlayerSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Array_Get_Item) == 0x000088, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_GetChildAt_ReturnValue_1) == 0x000098, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, K2Node_DynamicCast_AsWB_Player_Score) == 0x0000A0, "Member 'WB_PlayerScores_C_AssingPlayerSlots::K2Node_DynamicCast_AsWB_Player_Score' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WB_PlayerScores_C_AssingPlayerSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_GetChildrenCount_ReturnValue_1) == 0x0000B0, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B4, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Abs_Int_ReturnValue) == 0x0000BC, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C1, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C2, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_AssingPlayerSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C3, "Member 'WB_PlayerScores_C_AssingPlayerSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.UpdateSemiSortedLists
// 0x0058 (0x0058 - 0x0000)
struct WB_PlayerScores_C_UpdateSemiSortedLists final
{
public:
	class ABP_PlayerState_C*                      CurrentPS;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerState_C*>              K2Node_Select_Default;                             // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerScores_C_UpdateSemiSortedLists) == 0x000008, "Wrong alignment on WB_PlayerScores_C_UpdateSemiSortedLists");
static_assert(sizeof(WB_PlayerScores_C_UpdateSemiSortedLists) == 0x000058, "Wrong size on WB_PlayerScores_C_UpdateSemiSortedLists");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CurrentPS) == 0x000000, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CurrentPS' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, Temp_bool_Variable) == 0x000008, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, K2Node_Select_Default) == 0x000020, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, K2Node_DynamicCast_AsBP_Player_State) == 0x000048, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_UpdateSemiSortedLists, CallFunc_Array_Contains_ReturnValue) == 0x000052, "Member 'WB_PlayerScores_C_UpdateSemiSortedLists::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.InitLists
// 0x0040 (0x0040 - 0x0000)
struct WB_PlayerScores_C_InitLists final
{
public:
	class ABP_PlayerState_C*                      CurrentPS;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScores_C_InitLists) == 0x000008, "Wrong alignment on WB_PlayerScores_C_InitLists");
static_assert(sizeof(WB_PlayerScores_C_InitLists) == 0x000040, "Wrong size on WB_PlayerScores_C_InitLists");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CurrentPS) == 0x000000, "Member 'WB_PlayerScores_C_InitLists::CurrentPS' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_PlayerScores_C_InitLists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WB_PlayerScores_C_InitLists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_PlayerScores_C_InitLists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_PlayerScores_C_InitLists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_PlayerScores_C_InitLists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, K2Node_DynamicCast_AsBP_Player_State) == 0x000028, "Member 'WB_PlayerScores_C_InitLists::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_PlayerScores_C_InitLists::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'WB_PlayerScores_C_InitLists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_Array_AddUnique_ReturnValue) == 0x000034, "Member 'WB_PlayerScores_C_InitLists::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WB_PlayerScores_C_InitLists::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InitLists, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00003C, "Member 'WB_PlayerScores_C_InitLists::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.FindPos
// 0x0050 (0x0050 - 0x0000)
struct WB_PlayerScores_C_FindPos final
{
public:
	TArray<class ABP_PlayerState_C*>              SortedArray;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_PlayerState_C*                      PlayerState;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Position;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScores_C_FindPos) == 0x000008, "Wrong alignment on WB_PlayerScores_C_FindPos");
static_assert(sizeof(WB_PlayerScores_C_FindPos) == 0x000050, "Wrong size on WB_PlayerScores_C_FindPos");
static_assert(offsetof(WB_PlayerScores_C_FindPos, SortedArray) == 0x000000, "Member 'WB_PlayerScores_C_FindPos::SortedArray' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, PlayerState) == 0x000010, "Member 'WB_PlayerScores_C_FindPos::PlayerState' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, Position) == 0x000018, "Member 'WB_PlayerScores_C_FindPos::Position' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'WB_PlayerScores_C_FindPos::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WB_PlayerScores_C_FindPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WB_PlayerScores_C_FindPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'WB_PlayerScores_C_FindPos::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000045, "Member 'WB_PlayerScores_C_FindPos::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_FindPos, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WB_PlayerScores_C_FindPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.InsertionSort
// 0x0058 (0x0058 - 0x0000)
struct WB_PlayerScores_C_InsertionSort final
{
public:
	TArray<class ABP_PlayerState_C*>              PlayersState;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_PlayerState_C*>              SortedPlayersState;                                // 0x0010(0x0010)(Parm, OutParm)
	TArray<class ABP_PlayerState_C*>              TempSortedArray;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindPos_Position;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScores_C_InsertionSort) == 0x000008, "Wrong alignment on WB_PlayerScores_C_InsertionSort");
static_assert(sizeof(WB_PlayerScores_C_InsertionSort) == 0x000058, "Wrong size on WB_PlayerScores_C_InsertionSort");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, PlayersState) == 0x000000, "Member 'WB_PlayerScores_C_InsertionSort::PlayersState' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, SortedPlayersState) == 0x000010, "Member 'WB_PlayerScores_C_InsertionSort::SortedPlayersState' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, TempSortedArray) == 0x000020, "Member 'WB_PlayerScores_C_InsertionSort::TempSortedArray' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_PlayerScores_C_InsertionSort::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WB_PlayerScores_C_InsertionSort::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WB_PlayerScores_C_InsertionSort::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_PlayerScores_C_InsertionSort::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WB_PlayerScores_C_InsertionSort::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WB_PlayerScores_C_InsertionSort::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_InsertionSort, CallFunc_FindPos_Position) == 0x000050, "Member 'WB_PlayerScores_C_InsertionSort::CallFunc_FindPos_Position' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.SortPlayerArray
// 0x0058 (0x0058 - 0x0000)
struct WB_PlayerScores_C_SortPlayerArray final
{
public:
	TArray<class ABP_PlayerState_C*>              Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_PlayerState_C*>              Output;                                            // 0x0010(0x0010)(Parm, OutParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerScores_C_SortPlayerArray) == 0x000008, "Wrong alignment on WB_PlayerScores_C_SortPlayerArray");
static_assert(sizeof(WB_PlayerScores_C_SortPlayerArray) == 0x000058, "Wrong size on WB_PlayerScores_C_SortPlayerArray");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, Input) == 0x000000, "Member 'WB_PlayerScores_C_SortPlayerArray::Input' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, Output) == 0x000010, "Member 'WB_PlayerScores_C_SortPlayerArray::Output' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, Temp_int_Variable) == 0x000030, "Member 'WB_PlayerScores_C_SortPlayerArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_SortPlayerArray, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000052, "Member 'WB_PlayerScores_C_SortPlayerArray::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_PlayerScores.WB_PlayerScores_C.ExecuteUbergraph_WB_PlayerScores
// 0x01A8 (0x01A8 - 0x0000)
struct WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeNames                                CallFunc_GetCurrentGameMode_CurrentGameMode;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0060(0x0088)()
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x00F0(0x0088)()
	TArray<class ABP_PlayerState_C*>              CallFunc_InsertionSort_SortedPlayersState;         // 0x0178(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerState_C*>              CallFunc_InsertionSort_SortedPlayersState_1;       // 0x0188(0x0010)(ReferenceParm)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeNames                                CallFunc_GetCurrentGameMode_CurrentGameMode_1;     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores) == 0x000008, "Wrong alignment on WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores");
static_assert(sizeof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores) == 0x0001A8, "Wrong size on WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, EntryPoint) == 0x000000, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_GetCurrentGameMode_CurrentGameMode) == 0x000004, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_GetCurrentGameMode_CurrentGameMode' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_DynamicCast_AsBP_Base_GS) == 0x000028, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000040, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_DynamicCast_AsBP_Player_State) == 0x000050, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_IsVisible_ReturnValue) == 0x000059, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_MakeStruct_SlateBrush) == 0x000060, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x0000E8, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_MakeStruct_SlateBrush_1) == 0x0000F0, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_InsertionSort_SortedPlayersState) == 0x000178, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_InsertionSort_SortedPlayersState' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_InsertionSort_SortedPlayersState_1) == 0x000188, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_InsertionSort_SortedPlayersState_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000198, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, CallFunc_GetCurrentGameMode_CurrentGameMode_1) == 0x0001A0, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::CallFunc_GetCurrentGameMode_CurrentGameMode_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001A1, "Member 'WB_PlayerScores_C_ExecuteUbergraph_WB_PlayerScores::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}

