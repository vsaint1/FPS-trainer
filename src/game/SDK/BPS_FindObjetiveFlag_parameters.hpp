#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS_FindObjetiveFlag

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPS_FindObjetiveFlag.BPS_FindObjetiveFlag_C.FindClosestFlag
// 0x0080 (0x0080 - 0x0000)
struct BPS_FindObjetiveFlag_C_FindClosestFlag final
{
public:
	TArray<class ABP_ConquestCapturePoint_C*>     CapturePoints;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APawn*                                  SelfPawn;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ConquestCapturePoint_C*             Flag;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Pawn;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDistance;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ConquestCapturePoint_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ConquestCapturePoint_C*             CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS_FindObjetiveFlag_C_FindClosestFlag) == 0x000008, "Wrong alignment on BPS_FindObjetiveFlag_C_FindClosestFlag");
static_assert(sizeof(BPS_FindObjetiveFlag_C_FindClosestFlag) == 0x000080, "Wrong size on BPS_FindObjetiveFlag_C_FindClosestFlag");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CapturePoints) == 0x000000, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CapturePoints' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, SelfPawn) == 0x000010, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::SelfPawn' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, Flag) == 0x000018, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::Flag' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, Pawn) == 0x000020, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::Pawn' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, MinDistance) == 0x000028, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::MinDistance' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Array_Get_Item) == 0x000040, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000050, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000055, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00005D, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005E, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_GetDistanceTo_ReturnValue) == 0x000060, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Array_LastIndex_ReturnValue) == 0x00006C, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000070, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_FindClosestFlag, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BPS_FindObjetiveFlag_C_FindClosestFlag::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BPS_FindObjetiveFlag.BPS_FindObjetiveFlag_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BPS_FindObjetiveFlag_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS_FindObjetiveFlag_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BPS_FindObjetiveFlag_C_ReceiveActivationAI");
static_assert(sizeof(BPS_FindObjetiveFlag_C_ReceiveActivationAI) == 0x000010, "Wrong size on BPS_FindObjetiveFlag_C_ReceiveActivationAI");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BPS_FindObjetiveFlag_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BPS_FindObjetiveFlag_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BPS_FindObjetiveFlag.BPS_FindObjetiveFlag_C.ExecuteUbergraph_BPS_FindObjetiveFlag
// 0x0040 (0x0040 - 0x0000)
struct BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Conquest_GS_C*                      K2Node_DynamicCast_AsBP_Conquest_GS;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ConquestCapturePoint_C*             CallFunc_FindClosestFlag_Flag;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag) == 0x000008, "Wrong alignment on BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag");
static_assert(sizeof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag) == 0x000040, "Wrong size on BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, EntryPoint) == 0x000000, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, K2Node_Event_OwnerController) == 0x000008, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, K2Node_DynamicCast_AsBP_Conquest_GS) == 0x000020, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::K2Node_DynamicCast_AsBP_Conquest_GS' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000029, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, CallFunc_FindClosestFlag_Flag) == 0x000030, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::CallFunc_FindClosestFlag_Flag' has a wrong offset!");
static_assert(offsetof(BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BPS_FindObjetiveFlag_C_ExecuteUbergraph_BPS_FindObjetiveFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

