#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Base_AI_Character

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct BP_Base_AI_Character_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Base_AI_Character_C_OnLanded) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_OnLanded");
static_assert(sizeof(BP_Base_AI_Character_C_OnLanded) == 0x000088, "Wrong size on BP_Base_AI_Character_C_OnLanded");
static_assert(offsetof(BP_Base_AI_Character_C_OnLanded, Hit) == 0x000000, "Member 'BP_Base_AI_Character_C_OnLanded::Hit' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_ReceivePossessed");
static_assert(sizeof(BP_Base_AI_Character_C_ReceivePossessed) == 0x000008, "Wrong size on BP_Base_AI_Character_C_ReceivePossessed");
static_assert(offsetof(BP_Base_AI_Character_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_Base_AI_Character_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.Bot Handle Death
// 0x0078 (0x0078 - 0x0000)
struct BP_Base_AI_Character_C_Bot_Handle_Death final
{
public:
	class ABP_PlayerCharacter_C*                  DeadActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewLocalVar_0;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_AI_Character_C_Bot_Handle_Death) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_Bot_Handle_Death");
static_assert(sizeof(BP_Base_AI_Character_C_Bot_Handle_Death) == 0x000078, "Wrong size on BP_Base_AI_Character_C_Bot_Handle_Death");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, DeadActor) == 0x000000, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, Instigator_0) == 0x000008, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, DamageCauser) == 0x000010, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, NewLocalVar_0) == 0x000018, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_AsBP_Player_Character) == 0x000020, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_AsI_Player_State) == 0x000030, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_AsI_Player_State_1) == 0x000048, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, CallFunc_GetTeam_Team) == 0x00005C, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_AsBP_Base_GS) == 0x000068, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_Bot_Handle_Death, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_Base_AI_Character_C_Bot_Handle_Death::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.AI_Melee
// 0x0158 (0x0158 - 0x0000)
struct BP_Base_AI_Character_C_AI_Melee final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_AI_Melee) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_AI_Melee");
static_assert(sizeof(BP_Base_AI_Character_C_AI_Melee) == 0x000158, "Wrong size on BP_Base_AI_Character_C_AI_Melee");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_Base_AI_Character_C_AI_Melee::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_CapsuleTraceSingle_OutHit) == 0x00004C, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x0000D4, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D5, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D6, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_Time) == 0x0000D8, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_Distance) == 0x0000DC, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_Location) == 0x0000E0, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_ImpactPoint) == 0x0000EC, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_Normal) == 0x0000F8, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_ImpactNormal) == 0x000104, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_ElementIndex) == 0x000134, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_FaceIndex) == 0x000138, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_TraceStart) == 0x00013C, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_BreakHitResult_TraceEnd) == 0x000148, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_AI_Melee, CallFunc_ApplyDamage_ReturnValue) == 0x000154, "Member 'BP_Base_AI_Character_C_AI_Melee::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.BotShoot
// 0x01D8 (0x01D8 - 0x0000)
struct BP_Base_AI_Character_C_BotShoot final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInRadians_ReturnValue; // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealthComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_AI_Character_C_BotShoot) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_BotShoot");
static_assert(sizeof(BP_Base_AI_Character_C_BotShoot) == 0x0001D8, "Wrong size on BP_Base_AI_Character_C_BotShoot");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_Base_AI_Character_C_BotShoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Base_AI_Character_C_BotShoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, Temp_object_Variable) == 0x000018, "Member 'BP_Base_AI_Character_C_BotShoot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_GetBlackboard_ReturnValue) == 0x000038, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_GetValueAsObject_ReturnValue) == 0x000040, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, K2Node_DynamicCast_AsBP_Player_Character) == 0x000050, "Member 'BP_Base_AI_Character_C_BotShoot::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Base_AI_Character_C_BotShoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x00006C, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_RandomUnitVectorInConeInRadians_ReturnValue) == 0x000078, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_RandomUnitVectorInConeInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_IsValid_ReturnValue_1) == 0x000084, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_LineTraceMulti_OutHits) == 0x0000A0, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_LineTraceMulti_ReturnValue) == 0x0000B0, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_bBlockingHit) == 0x000141, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_bInitialOverlap) == 0x000142, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_Location) == 0x00014C, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_Normal) == 0x000164, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_IsValid_ReturnValue_2) == 0x0001C4, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_GetComponentByClass_ReturnValue) == 0x0001C8, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_BotShoot, CallFunc_IsValid_ReturnValue_3) == 0x0001D0, "Member 'BP_Base_AI_Character_C_BotShoot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(sizeof(BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000008, "Wrong size on BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(offsetof(BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C, NotifyName) == 0x000000, "Member 'BP_Base_AI_Character_C_OnNotifyEnd_7FBA1C9746B94ECF9D3A979E174C941C::NotifyName' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(sizeof(BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000008, "Wrong size on BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(offsetof(BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C, NotifyName) == 0x000000, "Member 'BP_Base_AI_Character_C_OnNotifyBegin_7FBA1C9746B94ECF9D3A979E174C941C::NotifyName' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(sizeof(BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000008, "Wrong size on BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(offsetof(BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C, NotifyName) == 0x000000, "Member 'BP_Base_AI_Character_C_OnInterrupted_7FBA1C9746B94ECF9D3A979E174C941C::NotifyName' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(sizeof(BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000008, "Wrong size on BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(offsetof(BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C, NotifyName) == 0x000000, "Member 'BP_Base_AI_Character_C_OnBlendOut_7FBA1C9746B94ECF9D3A979E174C941C::NotifyName' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(sizeof(BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C) == 0x000008, "Wrong size on BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C");
static_assert(offsetof(BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C, NotifyName) == 0x000000, "Member 'BP_Base_AI_Character_C_OnCompleted_7FBA1C9746B94ECF9D3A979E174C941C::NotifyName' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.SetAiming
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_AI_Character_C_SetAiming final
{
public:
	bool                                          bAiming_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_AI_Character_C_SetAiming) == 0x000001, "Wrong alignment on BP_Base_AI_Character_C_SetAiming");
static_assert(sizeof(BP_Base_AI_Character_C_SetAiming) == 0x000001, "Wrong size on BP_Base_AI_Character_C_SetAiming");
static_assert(offsetof(BP_Base_AI_Character_C_SetAiming, bAiming_0) == 0x000000, "Member 'BP_Base_AI_Character_C_SetAiming::bAiming_0' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.ShowHitMarker
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_AI_Character_C_ShowHitMarker final
{
public:
	bool                                          bIsVehicle;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_AI_Character_C_ShowHitMarker) == 0x000001, "Wrong alignment on BP_Base_AI_Character_C_ShowHitMarker");
static_assert(sizeof(BP_Base_AI_Character_C_ShowHitMarker) == 0x000001, "Wrong size on BP_Base_AI_Character_C_ShowHitMarker");
static_assert(offsetof(BP_Base_AI_Character_C_ShowHitMarker, bIsVehicle) == 0x000000, "Member 'BP_Base_AI_Character_C_ShowHitMarker::bIsVehicle' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.ExecuteUbergraph_BP_Base_AI_Character
// 0x0288 (0x0288 - 0x0000)
struct BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_2;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToShoot_CanShoot;                      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerTag_C*                        K2Node_DynamicCast_AsWB_Player_Tag;                // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0134(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_Event_Dead_Actor;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Instigator_Controller;                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DmgType;                              // 0x01E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDesiredRotation_ReturnValue;           // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bAiming;                        // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x2];                                      // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewHP;                                // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVehicle;                           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character");
static_assert(sizeof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character) == 0x000288, "Wrong size on BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, EntryPoint) == 0x000000, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CustomEvent_NotifyName_3) == 0x000004, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CustomEvent_NotifyName_2) == 0x00001C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CustomEvent_NotifyName_1) == 0x000034, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CustomEvent_NotifyName) == 0x00004C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, Temp_name_Variable) == 0x000064, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000070, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000078, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BreakRotator_Roll) == 0x000084, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BreakRotator_Pitch) == 0x000088, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BreakRotator_Yaw) == 0x00008C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, Temp_int_Variable) == 0x00009C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, Temp_class_Variable) == 0x0000A0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, Temp_class_Variable_1) == 0x0000A8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, Temp_class_Variable_2) == 0x0000B0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, Temp_class_Variable_3) == 0x0000B8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_HasAuthority_ReturnValue) == 0x0000C0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000C4, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_Damage) == 0x0000D8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_DamageType) == 0x0000E0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_InstigatedBy) == 0x0000E8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_DamageCauser_2) == 0x0000F0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_DamageCauser_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue_1) == 0x0000F9, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_K2_GetPawn_ReturnValue) == 0x000100, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00010C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000118, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_TryToShoot_CanShoot) == 0x000119, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_TryToShoot_CanShoot' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000120, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_DynamicCast_AsWB_Player_Tag) == 0x000128, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_DynamicCast_AsWB_Player_Tag' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_Hit) == 0x000134, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001BC, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_NewController) == 0x0001C0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CustomEvent_NotifyName_4) == 0x0001C8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D1, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_Dead_Actor) == 0x0001D8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_Dead_Actor' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_Instigator_Controller) == 0x0001E0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_Instigator_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_DmgType) == 0x0001E8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_DmgType' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_DamageCauser_1) == 0x0001F0, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BooleanAND_ReturnValue_2) == 0x0001F8, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_GetAIController_ReturnValue) == 0x000200, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue_3) == 0x000208, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_GetController_ReturnValue) == 0x000210, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_GetDesiredRotation_ReturnValue) == 0x000218, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_GetDesiredRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_GetAIController_ReturnValue_1) == 0x000228, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BreakRotator_Roll_1) == 0x000230, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BreakRotator_Pitch_1) == 0x000234, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BreakRotator_Yaw_1) == 0x000238, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue_4) == 0x00023C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00023D, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_BooleanAND_ReturnValue_3) == 0x00023E, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00023F, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue_5) == 0x000240, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_DamageCauser) == 0x000248, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000250, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_IsValid_ReturnValue_6) == 0x000258, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CustomEvent_bAiming) == 0x000259, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CustomEvent_bAiming' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_NewHP) == 0x00025C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_NewHP' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_CreateDelegate_OutputDelegate_5) == 0x000260, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000270, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Event_bIsVehicle) == 0x000278, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Event_bIsVehicle' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00027C, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character, K2Node_Select_Default) == 0x000280, "Member 'BP_Base_AI_Character_C_ExecuteUbergraph_BP_Base_AI_Character::K2Node_Select_Default' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_Base_AI_Character_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_ReceiveAnyDamage");
static_assert(sizeof(BP_Base_AI_Character_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_Base_AI_Character_C_ReceiveAnyDamage");
static_assert(offsetof(BP_Base_AI_Character_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_Base_AI_Character_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_Base_AI_Character_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_Base_AI_Character_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_Base_AI_Character_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.HandleDeath
// 0x0020 (0x0020 - 0x0000)
struct BP_Base_AI_Character_C_HandleDeath final
{
public:
	class ABP_PlayerCharacter_C*                  Dead_Actor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Instigator_Controller;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_HandleDeath) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_HandleDeath");
static_assert(sizeof(BP_Base_AI_Character_C_HandleDeath) == 0x000020, "Wrong size on BP_Base_AI_Character_C_HandleDeath");
static_assert(offsetof(BP_Base_AI_Character_C_HandleDeath, Dead_Actor) == 0x000000, "Member 'BP_Base_AI_Character_C_HandleDeath::Dead_Actor' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_HandleDeath, Instigator_Controller) == 0x000008, "Member 'BP_Base_AI_Character_C_HandleDeath::Instigator_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_HandleDeath, DmgType) == 0x000010, "Member 'BP_Base_AI_Character_C_HandleDeath::DmgType' has a wrong offset!");
static_assert(offsetof(BP_Base_AI_Character_C_HandleDeath, DamageCauser) == 0x000018, "Member 'BP_Base_AI_Character_C_HandleDeath::DamageCauser' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.Client_DamageDirection
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_AI_Character_C_Client_DamageDirection final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_Client_DamageDirection) == 0x000008, "Wrong alignment on BP_Base_AI_Character_C_Client_DamageDirection");
static_assert(sizeof(BP_Base_AI_Character_C_Client_DamageDirection) == 0x000008, "Wrong size on BP_Base_AI_Character_C_Client_DamageDirection");
static_assert(offsetof(BP_Base_AI_Character_C_Client_DamageDirection, DamageCauser) == 0x000000, "Member 'BP_Base_AI_Character_C_Client_DamageDirection::DamageCauser' has a wrong offset!");

// Function BP_Base_AI_Character.BP_Base_AI_Character_C.UpdateUI_Health
// 0x0004 (0x0004 - 0x0000)
struct BP_Base_AI_Character_C_UpdateUI_Health final
{
public:
	float                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_AI_Character_C_UpdateUI_Health) == 0x000004, "Wrong alignment on BP_Base_AI_Character_C_UpdateUI_Health");
static_assert(sizeof(BP_Base_AI_Character_C_UpdateUI_Health) == 0x000004, "Wrong size on BP_Base_AI_Character_C_UpdateUI_Health");
static_assert(offsetof(BP_Base_AI_Character_C_UpdateUI_Health, NewHP) == 0x000000, "Member 'BP_Base_AI_Character_C_UpdateUI_Health::NewHP' has a wrong offset!");

}

