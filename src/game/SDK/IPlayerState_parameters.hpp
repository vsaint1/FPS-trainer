#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IPlayerState

#include "Basic.hpp"

#include "ERewardReasons_structs.hpp"


namespace SDK::Params
{

// Function iPlayerState.iPlayerState_C.AddAssist
// 0x0004 (0x0004 - 0x0000)
struct IPlayerState_C_AddAssist final
{
public:
	float                                         DamageDone;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IPlayerState_C_AddAssist) == 0x000004, "Wrong alignment on IPlayerState_C_AddAssist");
static_assert(sizeof(IPlayerState_C_AddAssist) == 0x000004, "Wrong size on IPlayerState_C_AddAssist");
static_assert(offsetof(IPlayerState_C_AddAssist, DamageDone) == 0x000000, "Member 'IPlayerState_C_AddAssist::DamageDone' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.GetKills
// 0x0004 (0x0004 - 0x0000)
struct IPlayerState_C_GetKills final
{
public:
	int32                                         Kills;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IPlayerState_C_GetKills) == 0x000004, "Wrong alignment on IPlayerState_C_GetKills");
static_assert(sizeof(IPlayerState_C_GetKills) == 0x000004, "Wrong size on IPlayerState_C_GetKills");
static_assert(offsetof(IPlayerState_C_GetKills, Kills) == 0x000000, "Member 'IPlayerState_C_GetKills::Kills' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.SetIsPlayerReady
// 0x0001 (0x0001 - 0x0000)
struct IPlayerState_C_SetIsPlayerReady final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IPlayerState_C_SetIsPlayerReady) == 0x000001, "Wrong alignment on IPlayerState_C_SetIsPlayerReady");
static_assert(sizeof(IPlayerState_C_SetIsPlayerReady) == 0x000001, "Wrong size on IPlayerState_C_SetIsPlayerReady");
static_assert(offsetof(IPlayerState_C_SetIsPlayerReady, bReady) == 0x000000, "Member 'IPlayerState_C_SetIsPlayerReady::bReady' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.IsPlayerReady
// 0x0001 (0x0001 - 0x0000)
struct IPlayerState_C_IsPlayerReady final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IPlayerState_C_IsPlayerReady) == 0x000001, "Wrong alignment on IPlayerState_C_IsPlayerReady");
static_assert(sizeof(IPlayerState_C_IsPlayerReady) == 0x000001, "Wrong size on IPlayerState_C_IsPlayerReady");
static_assert(offsetof(IPlayerState_C_IsPlayerReady, bReady) == 0x000000, "Member 'IPlayerState_C_IsPlayerReady::bReady' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.GetName
// 0x0018 (0x0018 - 0x0000)
struct IPlayerState_C_GetName final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(IPlayerState_C_GetName) == 0x000008, "Wrong alignment on IPlayerState_C_GetName");
static_assert(sizeof(IPlayerState_C_GetName) == 0x000018, "Wrong size on IPlayerState_C_GetName");
static_assert(offsetof(IPlayerState_C_GetName, PlayerName) == 0x000000, "Member 'IPlayerState_C_GetName::PlayerName' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.GetTeam
// 0x0004 (0x0004 - 0x0000)
struct IPlayerState_C_GetTeam final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IPlayerState_C_GetTeam) == 0x000004, "Wrong alignment on IPlayerState_C_GetTeam");
static_assert(sizeof(IPlayerState_C_GetTeam) == 0x000004, "Wrong size on IPlayerState_C_GetTeam");
static_assert(offsetof(IPlayerState_C_GetTeam, Team) == 0x000000, "Member 'IPlayerState_C_GetTeam::Team' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.SetTeam
// 0x0004 (0x0004 - 0x0000)
struct IPlayerState_C_SetTeam final
{
public:
	int32                                         NewTeam;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IPlayerState_C_SetTeam) == 0x000004, "Wrong alignment on IPlayerState_C_SetTeam");
static_assert(sizeof(IPlayerState_C_SetTeam) == 0x000004, "Wrong size on IPlayerState_C_SetTeam");
static_assert(offsetof(IPlayerState_C_SetTeam, NewTeam) == 0x000000, "Member 'IPlayerState_C_SetTeam::NewTeam' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.AddScoreToPlayer
// 0x0008 (0x0008 - 0x0000)
struct IPlayerState_C_AddScoreToPlayer final
{
public:
	float                                         ScoreToAdd;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                ScoreReason;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IPlayerState_C_AddScoreToPlayer) == 0x000004, "Wrong alignment on IPlayerState_C_AddScoreToPlayer");
static_assert(sizeof(IPlayerState_C_AddScoreToPlayer) == 0x000008, "Wrong size on IPlayerState_C_AddScoreToPlayer");
static_assert(offsetof(IPlayerState_C_AddScoreToPlayer, ScoreToAdd) == 0x000000, "Member 'IPlayerState_C_AddScoreToPlayer::ScoreToAdd' has a wrong offset!");
static_assert(offsetof(IPlayerState_C_AddScoreToPlayer, ScoreReason) == 0x000004, "Member 'IPlayerState_C_AddScoreToPlayer::ScoreReason' has a wrong offset!");

// Function iPlayerState.iPlayerState_C.AddKill
// 0x0002 (0x0002 - 0x0000)
struct IPlayerState_C_AddKill final
{
public:
	bool                                          TeamKill;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Headshot;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IPlayerState_C_AddKill) == 0x000001, "Wrong alignment on IPlayerState_C_AddKill");
static_assert(sizeof(IPlayerState_C_AddKill) == 0x000002, "Wrong size on IPlayerState_C_AddKill");
static_assert(offsetof(IPlayerState_C_AddKill, TeamKill) == 0x000000, "Member 'IPlayerState_C_AddKill::TeamKill' has a wrong offset!");
static_assert(offsetof(IPlayerState_C_AddKill, Headshot) == 0x000001, "Member 'IPlayerState_C_AddKill::Headshot' has a wrong offset!");

}

