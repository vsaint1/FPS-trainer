#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState

#include "Basic.hpp"

#include "ERewardReasons_structs.hpp"
#include "EGameModeNames_structs.hpp"
#include "SteamCore_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState.BP_PlayerState_C.GetKills
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_GetKills final
{
public:
	int32                                         Kills_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_GetKills) == 0x000004, "Wrong alignment on BP_PlayerState_C_GetKills");
static_assert(sizeof(BP_PlayerState_C_GetKills) == 0x000004, "Wrong size on BP_PlayerState_C_GetKills");
static_assert(offsetof(BP_PlayerState_C_GetKills, Kills_0) == 0x000000, "Member 'BP_PlayerState_C_GetKills::Kills_0' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.IsPlayerReady
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_C_IsPlayerReady final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_IsPlayerReady) == 0x000001, "Wrong alignment on BP_PlayerState_C_IsPlayerReady");
static_assert(sizeof(BP_PlayerState_C_IsPlayerReady) == 0x000001, "Wrong size on BP_PlayerState_C_IsPlayerReady");
static_assert(offsetof(BP_PlayerState_C_IsPlayerReady, bReady) == 0x000000, "Member 'BP_PlayerState_C_IsPlayerReady::bReady' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetName
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerState_C_GetName final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0018)()
};
static_assert(alignof(BP_PlayerState_C_GetName) == 0x000008, "Wrong alignment on BP_PlayerState_C_GetName");
static_assert(sizeof(BP_PlayerState_C_GetName) == 0x000058, "Wrong size on BP_PlayerState_C_GetName");
static_assert(offsetof(BP_PlayerState_C_GetName, PlayerName) == 0x000000, "Member 'BP_PlayerState_C_GetName::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetName, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_PlayerState_C_GetName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetName, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'BP_PlayerState_C_GetName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_GetName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'BP_PlayerState_C_GetName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.GetTeam
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_GetTeam final
{
public:
	int32                                         Team_0;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_GetTeam) == 0x000004, "Wrong alignment on BP_PlayerState_C_GetTeam");
static_assert(sizeof(BP_PlayerState_C_GetTeam) == 0x000004, "Wrong size on BP_PlayerState_C_GetTeam");
static_assert(offsetof(BP_PlayerState_C_GetTeam, Team_0) == 0x000000, "Member 'BP_PlayerState_C_GetTeam::Team_0' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.SetBotName
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerState_C_SetBotName final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_SetBotName) == 0x000008, "Wrong alignment on BP_PlayerState_C_SetBotName");
static_assert(sizeof(BP_PlayerState_C_SetBotName) == 0x000040, "Wrong size on BP_PlayerState_C_SetBotName");
static_assert(offsetof(BP_PlayerState_C_SetBotName, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_SetBotName::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetBotName, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_PlayerState_C_SetBotName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetBotName, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_PlayerState_C_SetBotName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetBotName, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_PlayerState_C_SetBotName::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetBotName, CallFunc_RandomInteger_ReturnValue) == 0x00002C, "Member 'BP_PlayerState_C_SetBotName::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_SetBotName, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_PlayerState_C_SetBotName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.PlayScoreSound
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerState_C_PlayScoreSound final
{
public:
	ERewardReasons                                Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_PlayScoreSound) == 0x000001, "Wrong alignment on BP_PlayerState_C_PlayScoreSound");
static_assert(sizeof(BP_PlayerState_C_PlayScoreSound) == 0x000002, "Wrong size on BP_PlayerState_C_PlayScoreSound");
static_assert(offsetof(BP_PlayerState_C_PlayScoreSound, Selection) == 0x000000, "Member 'BP_PlayerState_C_PlayScoreSound::Selection' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_PlayScoreSound, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PlayerState_C_PlayScoreSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.OnDeathmatch
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_OnDeathmatch final
{
public:
	bool                                          Input;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTeamKill;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameModeNames                                CallFunc_GetCurrentGameMode_CurrentGameMode;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_OnDeathmatch) == 0x000001, "Wrong alignment on BP_PlayerState_C_OnDeathmatch");
static_assert(sizeof(BP_PlayerState_C_OnDeathmatch) == 0x000004, "Wrong size on BP_PlayerState_C_OnDeathmatch");
static_assert(offsetof(BP_PlayerState_C_OnDeathmatch, Input) == 0x000000, "Member 'BP_PlayerState_C_OnDeathmatch::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnDeathmatch, bTeamKill) == 0x000001, "Member 'BP_PlayerState_C_OnDeathmatch::bTeamKill' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnDeathmatch, CallFunc_GetCurrentGameMode_CurrentGameMode) == 0x000002, "Member 'BP_PlayerState_C_OnDeathmatch::CallFunc_GetCurrentGameMode_CurrentGameMode' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_OnDeathmatch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_PlayerState_C_OnDeathmatch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_PlayerState_C_UserConstructionScript");
static_assert(sizeof(BP_PlayerState_C_UserConstructionScript) == 0x000010, "Wrong size on BP_PlayerState_C_UserConstructionScript");
static_assert(offsetof(BP_PlayerState_C_UserConstructionScript, CallFunc_GetPlayerName_ReturnValue) == 0x000000, "Member 'BP_PlayerState_C_UserConstructionScript::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Client_ShowScore
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_Client_ShowScore final
{
public:
	float                                         Score_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                Text;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Client_ShowScore) == 0x000004, "Wrong alignment on BP_PlayerState_C_Client_ShowScore");
static_assert(sizeof(BP_PlayerState_C_Client_ShowScore) == 0x000008, "Wrong size on BP_PlayerState_C_Client_ShowScore");
static_assert(offsetof(BP_PlayerState_C_Client_ShowScore, Score_0) == 0x000000, "Member 'BP_PlayerState_C_Client_ShowScore::Score_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_Client_ShowScore, Text) == 0x000004, "Member 'BP_PlayerState_C_Client_ShowScore::Text' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.Streak
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_Streak final
{
public:
	int32                                         Number_of_kills;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_Streak) == 0x000004, "Wrong alignment on BP_PlayerState_C_Streak");
static_assert(sizeof(BP_PlayerState_C_Streak) == 0x000004, "Wrong size on BP_PlayerState_C_Streak");
static_assert(offsetof(BP_PlayerState_C_Streak, Number_of_kills) == 0x000000, "Member 'BP_PlayerState_C_Streak::Number_of_kills' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.AddKill
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerState_C_AddKill final
{
public:
	bool                                          TeamKill;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Headshot;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_AddKill) == 0x000001, "Wrong alignment on BP_PlayerState_C_AddKill");
static_assert(sizeof(BP_PlayerState_C_AddKill) == 0x000002, "Wrong size on BP_PlayerState_C_AddKill");
static_assert(offsetof(BP_PlayerState_C_AddKill, TeamKill) == 0x000000, "Member 'BP_PlayerState_C_AddKill::TeamKill' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_AddKill, Headshot) == 0x000001, "Member 'BP_PlayerState_C_AddKill::Headshot' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.AddScore
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerState_C_AddScore final
{
public:
	bool                                          TeamKill;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Headshot;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_AddScore) == 0x000001, "Wrong alignment on BP_PlayerState_C_AddScore");
static_assert(sizeof(BP_PlayerState_C_AddScore) == 0x000002, "Wrong size on BP_PlayerState_C_AddScore");
static_assert(offsetof(BP_PlayerState_C_AddScore, TeamKill) == 0x000000, "Member 'BP_PlayerState_C_AddScore::TeamKill' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_AddScore, Headshot) == 0x000001, "Member 'BP_PlayerState_C_AddScore::Headshot' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.AddScoreToPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_C_AddScoreToPlayer final
{
public:
	float                                         ScoreToAdd;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                ScoreReason;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_AddScoreToPlayer) == 0x000004, "Wrong alignment on BP_PlayerState_C_AddScoreToPlayer");
static_assert(sizeof(BP_PlayerState_C_AddScoreToPlayer) == 0x000008, "Wrong size on BP_PlayerState_C_AddScoreToPlayer");
static_assert(offsetof(BP_PlayerState_C_AddScoreToPlayer, ScoreToAdd) == 0x000000, "Member 'BP_PlayerState_C_AddScoreToPlayer::ScoreToAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_AddScoreToPlayer, ScoreReason) == 0x000004, "Member 'BP_PlayerState_C_AddScoreToPlayer::ScoreReason' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.ServerSetTeam
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_ServerSetTeam final
{
public:
	int32                                         NewTeam;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_ServerSetTeam) == 0x000004, "Wrong alignment on BP_PlayerState_C_ServerSetTeam");
static_assert(sizeof(BP_PlayerState_C_ServerSetTeam) == 0x000004, "Wrong size on BP_PlayerState_C_ServerSetTeam");
static_assert(offsetof(BP_PlayerState_C_ServerSetTeam, NewTeam) == 0x000000, "Member 'BP_PlayerState_C_ServerSetTeam::NewTeam' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.SetTeam
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_SetTeam final
{
public:
	int32                                         NewTeam;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_SetTeam) == 0x000004, "Wrong alignment on BP_PlayerState_C_SetTeam");
static_assert(sizeof(BP_PlayerState_C_SetTeam) == 0x000004, "Wrong size on BP_PlayerState_C_SetTeam");
static_assert(offsetof(BP_PlayerState_C_SetTeam, NewTeam) == 0x000000, "Member 'BP_PlayerState_C_SetTeam::NewTeam' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.SetIsPlayerReady
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_C_SetIsPlayerReady final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_C_SetIsPlayerReady) == 0x000001, "Wrong alignment on BP_PlayerState_C_SetIsPlayerReady");
static_assert(sizeof(BP_PlayerState_C_SetIsPlayerReady) == 0x000001, "Wrong size on BP_PlayerState_C_SetIsPlayerReady");
static_assert(offsetof(BP_PlayerState_C_SetIsPlayerReady, bReady) == 0x000000, "Member 'BP_PlayerState_C_SetIsPlayerReady::bReady' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.AddAssist
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_C_AddAssist final
{
public:
	float                                         DamageDone;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_AddAssist) == 0x000004, "Wrong alignment on BP_PlayerState_C_AddAssist");
static_assert(sizeof(BP_PlayerState_C_AddAssist) == 0x000004, "Wrong size on BP_PlayerState_C_AddAssist");
static_assert(offsetof(BP_PlayerState_C_AddAssist, DamageDone) == 0x000000, "Member 'BP_PlayerState_C_AddAssist::DamageDone' has a wrong offset!");

// Function BP_PlayerState.BP_PlayerState_C.ExecuteUbergraph_BP_PlayerState
// 0x0178 (0x0178 - 0x0000)
struct BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Score;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                K2Node_CustomEvent_Text;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	int32                                         K2Node_CustomEvent_Number_of_kills;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_TeamKill;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Headshot;                             // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_TeamKill;                       // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Headshot;                       // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                K2Node_Select_Default_1;                           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	float                                         K2Node_Event_ScoreToAdd;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardReasons                                K2Node_Event_ScoreReason;                          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewTeam;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewTeam;                              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver_1;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameOver_bGameOver_2;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Base_GM_C*                          K2Node_DynamicCast_AsBP_Base_GM;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bReady;                               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DamageDone;                           // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameOver_bGameOver_3;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0138(0x0018)()
	struct FHostPingData                          CallFunc_GetHostPingData_ReturnValue;              // 0x0150(0x0010)(HasGetValueTypeHash)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPingFromHostData_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState) == 0x000008, "Wrong alignment on BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState");
static_assert(sizeof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState) == 0x000178, "Wrong size on BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, EntryPoint) == 0x000000, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_byte_Variable) == 0x000004, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_byte_Variable_1) == 0x000005, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Variable) == 0x000008, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_ByteByte_ReturnValue) == 0x000014, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Score) == 0x00001C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Score' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Text) == 0x000020, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Number_of_kills) == 0x000058, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Number_of_kills' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Player_State) == 0x000078, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable) == 0x000090, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_TeamKill) == 0x000091, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_TeamKill' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_Headshot) == 0x000092, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_Headshot' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable_1) == 0x00009C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_TeamKill) == 0x00009D, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_TeamKill' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_Headshot) == 0x00009E, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_Headshot' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Select_Default) == 0x0000A0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Select_Default_1) == 0x0000A4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_text_Variable) == 0x0000B0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_ScoreToAdd) == 0x0000C8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_ScoreToAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_ScoreReason) == 0x0000CC, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_ScoreReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_CustomEvent_NewTeam) == 0x0000D4, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_CustomEvent_NewTeam' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_NewTeam) == 0x0000D8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_NewTeam' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetGameState_ReturnValue_1) == 0x0000E0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Base_GS) == 0x0000E8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F1, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsGameOver_bGameOver) == 0x0000F2, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsGameOver_bGameOver' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsGameOver_bGameOver_1) == 0x0000F3, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsGameOver_bGameOver_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetGameMode_ReturnValue) == 0x0000F8, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsGameOver_bGameOver_2) == 0x000100, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsGameOver_bGameOver_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Base_GM) == 0x000108, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Base_GM' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_bReady) == 0x000111, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_bReady' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Event_DamageDone) == 0x000114, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Event_DamageDone' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_Add_IntInt_ReturnValue_3) == 0x000118, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_IsGameOver_bGameOver_3) == 0x00011C, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_IsGameOver_bGameOver_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, Temp_bool_Variable_2) == 0x00011D, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetPlayerController_ReturnValue) == 0x000120, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000128, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_Select_Default_2) == 0x000138, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetHostPingData_ReturnValue) == 0x000150, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetHostPingData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_AsI_UI) == 0x000160, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, K2Node_DynamicCast_bSuccess_4) == 0x000170, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState, CallFunc_GetPingFromHostData_ReturnValue) == 0x000174, "Member 'BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState::CallFunc_GetPingFromHostData_ReturnValue' has a wrong offset!");

}

