#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS_FindObjetiveFlag

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPS_FindObjetiveFlag.BPS_FindObjetiveFlag_C
// 0x0048 (0x00E0 - 0x0098)
class UBPS_FindObjetiveFlag_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 Objectivekey;                                      // 0x00A0(0x0028)(Edit, BlueprintVisible)
	TArray<class ABP_ConquestCapturePoint_C*>     PosibleFlagsToCapture;                             // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_ConquestCapturePoint_C*             PossibleFlag;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void FindClosestFlag(TArray<class ABP_ConquestCapturePoint_C*>& CapturePoints, class APawn* SelfPawn, class ABP_ConquestCapturePoint_C** Flag);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BPS_FindObjetiveFlag(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS_FindObjetiveFlag_C">();
	}
	static class UBPS_FindObjetiveFlag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPS_FindObjetiveFlag_C>();
	}
};
static_assert(alignof(UBPS_FindObjetiveFlag_C) == 0x000008, "Wrong alignment on UBPS_FindObjetiveFlag_C");
static_assert(sizeof(UBPS_FindObjetiveFlag_C) == 0x0000E0, "Wrong size on UBPS_FindObjetiveFlag_C");
static_assert(offsetof(UBPS_FindObjetiveFlag_C, UberGraphFrame) == 0x000098, "Member 'UBPS_FindObjetiveFlag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPS_FindObjetiveFlag_C, Objectivekey) == 0x0000A0, "Member 'UBPS_FindObjetiveFlag_C::Objectivekey' has a wrong offset!");
static_assert(offsetof(UBPS_FindObjetiveFlag_C, PosibleFlagsToCapture) == 0x0000C8, "Member 'UBPS_FindObjetiveFlag_C::PosibleFlagsToCapture' has a wrong offset!");
static_assert(offsetof(UBPS_FindObjetiveFlag_C, PossibleFlag) == 0x0000D8, "Member 'UBPS_FindObjetiveFlag_C::PossibleFlag' has a wrong offset!");

}

