#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PickupAmmo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PickupAmmo.BP_PickupAmmo_C
// 0x0028 (0x0248 - 0x0220)
class ABP_PickupAmmo_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bActive;                                           // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CheckVelocityTimerHandle;                          // 0x0240(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void PickupMagazines(class AActor* Actor);
	void CheckForOverlappingActors();
	void ReceiveBeginPlay();
	void BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void InitMag();
	void SimCheck();
	void ExecuteUbergraph_BP_PickupAmmo(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PickupAmmo_C">();
	}
	static class ABP_PickupAmmo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PickupAmmo_C>();
	}
};
static_assert(alignof(ABP_PickupAmmo_C) == 0x000008, "Wrong alignment on ABP_PickupAmmo_C");
static_assert(sizeof(ABP_PickupAmmo_C) == 0x000248, "Wrong size on ABP_PickupAmmo_C");
static_assert(offsetof(ABP_PickupAmmo_C, UberGraphFrame) == 0x000220, "Member 'ABP_PickupAmmo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PickupAmmo_C, Sphere) == 0x000228, "Member 'ABP_PickupAmmo_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_PickupAmmo_C, StaticMesh) == 0x000230, "Member 'ABP_PickupAmmo_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_PickupAmmo_C, bActive) == 0x000238, "Member 'ABP_PickupAmmo_C::bActive' has a wrong offset!");
static_assert(offsetof(ABP_PickupAmmo_C, CheckVelocityTimerHandle) == 0x000240, "Member 'ABP_PickupAmmo_C::CheckVelocityTimerHandle' has a wrong offset!");

}

