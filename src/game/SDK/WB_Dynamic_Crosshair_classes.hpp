#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Dynamic_Crosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Dynamic_Crosshair.WB_Dynamic_Crosshair_C
// 0x0050 (0x02B0 - 0x0260)
class UWB_Dynamic_Crosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CookGrenadeAnim;                                   // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CrosshairBottom;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairLeft;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairRight;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairTop;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  PawnRef;                                           // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         CurrentPosition;                                   // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetPosition;                                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpread;                                         // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IncreaseSpeed;                                     // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecreaseSpeed;                                     // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxOpacity;                                        // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ShouldHideCrosshair(class ABP_PlayerCharacter_C* Pawn, bool* Hide);
	void SetColorAndVisibility();
	ESlateVisibility GetCrosshairVisibility();
	void Construct();
	void UpdateCrosshair();
	void ExecuteUbergraph_WB_Dynamic_Crosshair(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Dynamic_Crosshair_C">();
	}
	static class UWB_Dynamic_Crosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Dynamic_Crosshair_C>();
	}
};
static_assert(alignof(UWB_Dynamic_Crosshair_C) == 0x000008, "Wrong alignment on UWB_Dynamic_Crosshair_C");
static_assert(sizeof(UWB_Dynamic_Crosshair_C) == 0x0002B0, "Wrong size on UWB_Dynamic_Crosshair_C");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, UberGraphFrame) == 0x000260, "Member 'UWB_Dynamic_Crosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, CookGrenadeAnim) == 0x000268, "Member 'UWB_Dynamic_Crosshair_C::CookGrenadeAnim' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, CrosshairBottom) == 0x000270, "Member 'UWB_Dynamic_Crosshair_C::CrosshairBottom' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, CrosshairLeft) == 0x000278, "Member 'UWB_Dynamic_Crosshair_C::CrosshairLeft' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, CrosshairRight) == 0x000280, "Member 'UWB_Dynamic_Crosshair_C::CrosshairRight' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, CrosshairTop) == 0x000288, "Member 'UWB_Dynamic_Crosshair_C::CrosshairTop' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, PawnRef) == 0x000290, "Member 'UWB_Dynamic_Crosshair_C::PawnRef' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, CurrentPosition) == 0x000298, "Member 'UWB_Dynamic_Crosshair_C::CurrentPosition' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, TargetPosition) == 0x00029C, "Member 'UWB_Dynamic_Crosshair_C::TargetPosition' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, MaxSpread) == 0x0002A0, "Member 'UWB_Dynamic_Crosshair_C::MaxSpread' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, IncreaseSpeed) == 0x0002A4, "Member 'UWB_Dynamic_Crosshair_C::IncreaseSpeed' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, DecreaseSpeed) == 0x0002A8, "Member 'UWB_Dynamic_Crosshair_C::DecreaseSpeed' has a wrong offset!");
static_assert(offsetof(UWB_Dynamic_Crosshair_C, MaxOpacity) == 0x0002AC, "Member 'UWB_Dynamic_Crosshair_C::MaxOpacity' has a wrong offset!");

}

