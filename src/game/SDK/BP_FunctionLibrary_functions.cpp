#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FunctionLibrary

#include "Basic.hpp"

#include "BP_FunctionLibrary_classes.hpp"
#include "BP_FunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetCurrentGameMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGameModeNames                          CurrentGameMode                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::GetCurrentGameMode(class UObject* __WorldContext, EGameModeNames* CurrentGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FunctionLibrary_C", "GetCurrentGameMode");

	Params::BP_FunctionLibrary_C_GetCurrentGameMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CurrentGameMode != nullptr)
		*CurrentGameMode = Parms.CurrentGameMode;
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetMagazineInfoPerType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAmmoMagazines>           Magazine                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EAmmoType                               AmmoType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAmmoMagazines                   Array_Element                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::GetMagazineInfoPerType(TArray<struct FAmmoMagazines>& Magazine, EAmmoType AmmoType, class UObject* __WorldContext, struct FAmmoMagazines* Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FunctionLibrary_C", "GetMagazineInfoPerType");

	Params::BP_FunctionLibrary_C_GetMagazineInfoPerType Parms{};

	Parms.Magazine = std::move(Magazine);
	Parms.AmmoType = AmmoType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Magazine = std::move(Parms.Magazine);

	if (Array_Element != nullptr)
		*Array_Element = std::move(Parms.Array_Element);
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetPlayerNameFromPlayerState
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             PlayerName                                             (Parm, OutParm)

void UBP_FunctionLibrary_C::GetPlayerNameFromPlayerState(class APlayerState* Object, class UObject* __WorldContext, class FText* PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FunctionLibrary_C", "GetPlayerNameFromPlayerState");

	Params::BP_FunctionLibrary_C_GetPlayerNameFromPlayerState Parms{};

	Parms.Object = Object;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerName != nullptr)
		*PlayerName = std::move(Parms.PlayerName);
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.IsGameOver
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bGameOver                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FunctionLibrary_C::IsGameOver(class UObject* __WorldContext, bool* bGameOver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FunctionLibrary_C", "IsGameOver");

	Params::BP_FunctionLibrary_C_IsGameOver Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bGameOver != nullptr)
		*bGameOver = Parms.bGameOver;
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetPlayerTeamFromPlayerState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APlayerState*                     Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::GetPlayerTeamFromPlayerState(class APlayerState* Object, class UObject* __WorldContext, int32* Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FunctionLibrary_C", "GetPlayerTeamFromPlayerState");

	Params::BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState Parms{};

	Parms.Object = Object;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Team != nullptr)
		*Team = Parms.Team;
}

}

