#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ELethalEquipment_structs.hpp"
#include "AmmoMagazines_structs.hpp"
#include "EWeaponNames_structs.hpp"
#include "Engine_structs.hpp"
#include "EPlayerClass_structs.hpp"
#include "EAmmoType_structs.hpp"
#include "EFiringMode_structs.hpp"
#include "InputCore_structs.hpp"
#include "EEquipedWeapon_structs.hpp"
#include "ECharacterMovementType_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_ReceiveTick");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerCharacter_C_ReceiveTick");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceivePossessed");
static_assert(sizeof(BP_PlayerCharacter_C_ReceivePossessed) == 0x000008, "Wrong size on BP_PlayerCharacter_C_ReceivePossessed");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Update Magazines
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Update_Magazines final
{
public:
	TArray<struct FAmmoMagazines>                 Magazines_0;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerCharacter_C_Update_Magazines) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Update_Magazines");
static_assert(sizeof(BP_PlayerCharacter_C_Update_Magazines) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Update_Magazines");
static_assert(offsetof(BP_PlayerCharacter_C_Update_Magazines, Magazines_0) == 0x000000, "Member 'BP_PlayerCharacter_C_Update_Magazines::Magazines_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_EquipWeapons
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Server_EquipWeapons final
{
public:
	class UClass*                                 Primary_Weapon;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SecondaryWeapon_0;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_EquipWeapons) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_EquipWeapons");
static_assert(sizeof(BP_PlayerCharacter_C_Server_EquipWeapons) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Server_EquipWeapons");
static_assert(offsetof(BP_PlayerCharacter_C_Server_EquipWeapons, Primary_Weapon) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_EquipWeapons::Primary_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_EquipWeapons, SecondaryWeapon_0) == 0x000008, "Member 'BP_PlayerCharacter_C_Server_EquipWeapons::SecondaryWeapon_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SendInfoToKillFeed
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_C_SendInfoToKillFeed final
{
public:
	const class AController*                      KillerPC;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  DeadActor;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Assist;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadshot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SendInfoToKillFeed) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_SendInfoToKillFeed");
static_assert(sizeof(BP_PlayerCharacter_C_SendInfoToKillFeed) == 0x000028, "Wrong size on BP_PlayerCharacter_C_SendInfoToKillFeed");
static_assert(offsetof(BP_PlayerCharacter_C_SendInfoToKillFeed, KillerPC) == 0x000000, "Member 'BP_PlayerCharacter_C_SendInfoToKillFeed::KillerPC' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SendInfoToKillFeed, DeadActor) == 0x000008, "Member 'BP_PlayerCharacter_C_SendInfoToKillFeed::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SendInfoToKillFeed, DamageType) == 0x000010, "Member 'BP_PlayerCharacter_C_SendInfoToKillFeed::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SendInfoToKillFeed, Assist) == 0x000018, "Member 'BP_PlayerCharacter_C_SendInfoToKillFeed::Assist' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SendInfoToKillFeed, bHeadshot) == 0x000020, "Member 'BP_PlayerCharacter_C_SendInfoToKillFeed::bHeadshot' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerCharacter_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_OnLanded) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnLanded");
static_assert(sizeof(BP_PlayerCharacter_C_OnLanded) == 0x000088, "Wrong size on BP_PlayerCharacter_C_OnLanded");
static_assert(offsetof(BP_PlayerCharacter_C_OnLanded, Hit) == 0x000000, "Member 'BP_PlayerCharacter_C_OnLanded::Hit' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnWalkingOffLedge
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_C_OnWalkingOffLedge final
{
public:
	struct FVector                                PreviousFloorImpactNormal;                         // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousFloorContactNormal;                        // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousLocation;                                  // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDelta;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnWalkingOffLedge) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnWalkingOffLedge");
static_assert(sizeof(BP_PlayerCharacter_C_OnWalkingOffLedge) == 0x000028, "Wrong size on BP_PlayerCharacter_C_OnWalkingOffLedge");
static_assert(offsetof(BP_PlayerCharacter_C_OnWalkingOffLedge, PreviousFloorImpactNormal) == 0x000000, "Member 'BP_PlayerCharacter_C_OnWalkingOffLedge::PreviousFloorImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnWalkingOffLedge, PreviousFloorContactNormal) == 0x00000C, "Member 'BP_PlayerCharacter_C_OnWalkingOffLedge::PreviousFloorContactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnWalkingOffLedge, PreviousLocation) == 0x000018, "Member 'BP_PlayerCharacter_C_OnWalkingOffLedge::PreviousLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnWalkingOffLedge, TimeDelta) == 0x000024, "Member 'BP_PlayerCharacter_C_OnWalkingOffLedge::TimeDelta' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_ShowHitMarker
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_Client_ShowHitMarker final
{
public:
	bool                                          bIsVehicle;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_ShowHitMarker) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Client_ShowHitMarker");
static_assert(sizeof(BP_PlayerCharacter_C_Client_ShowHitMarker) == 0x000001, "Wrong size on BP_PlayerCharacter_C_Client_ShowHitMarker");
static_assert(offsetof(BP_PlayerCharacter_C_Client_ShowHitMarker, bIsVehicle) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_ShowHitMarker::bIsVehicle' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_EquipLethal
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Server_EquipLethal final
{
public:
	class UClass*                                 UtilityClass;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_EquipLethal) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_EquipLethal");
static_assert(sizeof(BP_PlayerCharacter_C_Server_EquipLethal) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Server_EquipLethal");
static_assert(offsetof(BP_PlayerCharacter_C_Server_EquipLethal, UtilityClass) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_EquipLethal::UtilityClass' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ShowHitMarker
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_ShowHitMarker final
{
public:
	bool                                          bIsVehicle;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ShowHitMarker) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ShowHitMarker");
static_assert(sizeof(BP_PlayerCharacter_C_ShowHitMarker) == 0x000001, "Wrong size on BP_PlayerCharacter_C_ShowHitMarker");
static_assert(offsetof(BP_PlayerCharacter_C_ShowHitMarker, bIsVehicle) == 0x000000, "Member 'BP_PlayerCharacter_C_ShowHitMarker::bIsVehicle' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetCurrentWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_SetCurrentWeapon final
{
public:
	class ABP_BaseWeapon_C*                       NewCurrentWeapon;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetCurrentWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_SetCurrentWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_SetCurrentWeapon) == 0x000008, "Wrong size on BP_PlayerCharacter_C_SetCurrentWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_SetCurrentWeapon, NewCurrentWeapon) == 0x000000, "Member 'BP_PlayerCharacter_C_SetCurrentWeapon::NewCurrentWeapon' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ClientChecklethal
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_ClientChecklethal final
{
public:
	ELethalEquipment                              A;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ClientChecklethal) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ClientChecklethal");
static_assert(sizeof(BP_PlayerCharacter_C_ClientChecklethal) == 0x000001, "Wrong size on BP_PlayerCharacter_C_ClientChecklethal");
static_assert(offsetof(BP_PlayerCharacter_C_ClientChecklethal, A) == 0x000000, "Member 'BP_PlayerCharacter_C_ClientChecklethal::A' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ExecuteUbergraph_BP_PlayerCharacter
// 0x2AD0 (0x2AD0 - 0x0000)
struct BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELethalEquipment                              K2Node_CustomEvent_A;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_92;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_91;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_90;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_89;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_88;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_87;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_86;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_85;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x00E0(0x0018)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_84;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_83;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_82;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_81;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_80;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_2;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x0178(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x0190(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x01A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x01C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x01D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x01F0(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MovementRecoil_Spread;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0238(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0250(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x0260(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x0278(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x02A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x02C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x02D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x02F0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x030C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_79;                  // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_78;                  // 0x0324(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x032C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_77;                  // 0x033C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x0344(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_76;                  // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x035C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_75;                  // 0x036C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x0374(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_3;                              // 0x0384(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x0390(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x03A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x03C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x03D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x03F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0408(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0420(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x0438(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0450(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0468(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0480(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_74;                  // 0x049C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x04A4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_73;                  // 0x04B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x04BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_72;                  // 0x04CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x04D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_71;                  // 0x04E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x04EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_70;                  // 0x04FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x0504(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_4;                              // 0x0514(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x051C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_69;                  // 0x052C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_68;                  // 0x0534(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x053C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_67;                  // 0x054C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x0554(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_66;                  // 0x0564(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x056C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_65;                  // 0x057C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x0584(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_5;                              // 0x0594(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x059C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_64;                  // 0x05AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_63;                  // 0x05B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x05BC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_62;                  // 0x05CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x05D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_61;                  // 0x05E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x05EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_60;                  // 0x05FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x0604(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_6;                              // 0x0614(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_59;                  // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_35;           // 0x0628(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_58;                  // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_36;           // 0x0640(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_57;                  // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_37;           // 0x0658(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_56;                  // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_38;           // 0x0670(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_55;                  // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_39;           // 0x0688(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_7;                              // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_40;           // 0x06A0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_54;                  // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_53;                  // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_41;           // 0x06C0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_52;                  // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_42;           // 0x06D8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_51;                  // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_43;           // 0x06F0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_50;                  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_44;           // 0x0708(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_8;                              // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_723[0x5];                                      // 0x0723(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0728(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0740(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A[0x2];                                      // 0x075A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_45;           // 0x075C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_49;                  // 0x076C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_48;                  // 0x0774(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_46;           // 0x077C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_47;                  // 0x078C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_47;           // 0x0794(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_46;                  // 0x07A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_48;           // 0x07AC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_45;                  // 0x07BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_49;           // 0x07C4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_9;                              // 0x07D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x07DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAmmo_Success;                          // 0x07DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7DE[0x2];                                      // 0x07DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_HasAmmo_Ammo;                             // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasAmmo_MagazinesIndex;                   // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasAmmo_NewQuantity;                      // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x07ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAmmo_Success_1;                        // 0x07EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7EF[0x1];                                      // 0x07EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_HasAmmo_Ammo_1;                           // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasAmmo_MagazinesIndex_1;                 // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HasAmmo_NewQuantity_1;                    // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x07FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7FE[0x2];                                      // 0x07FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_50;           // 0x0800(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_44;                  // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_43;                  // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_51;           // 0x0820(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_42;                  // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_52;           // 0x0838(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_41;                  // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_53;           // 0x0850(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_40;                  // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_54;           // 0x0868(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_10;                             // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0882(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0883(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_884[0x4];                                      // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0888(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1[0x7];                                      // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x08A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C2[0x6];                                      // 0x08C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x08C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x08E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x08F8(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_55;           // 0x0910(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_56;           // 0x0920(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_57;           // 0x0930(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0940(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x3];                                      // 0x0949(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_39;                  // 0x094C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_58;           // 0x0954(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_38;                  // 0x0964(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_59;           // 0x096C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_37;                  // 0x097C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_60;           // 0x0984(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_36;                  // 0x0994(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_61;           // 0x099C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_35;                  // 0x09AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_62;           // 0x09B4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_11;                             // 0x09C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_63;           // 0x09CC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_34;                  // 0x09DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_33;                  // 0x09E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_64;           // 0x09EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_32;                  // 0x09FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_65;           // 0x0A04(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_31;                  // 0x0A14(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_66;           // 0x0A1C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_30;                  // 0x0A2C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_67;           // 0x0A34(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_12;                             // 0x0A44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0A4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0A4E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0A4F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFiringMode                                   Temp_byte_Variable;                                // 0x0A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A52[0x6];                                      // 0x0A52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0A58(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0A70(0x0018)(HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_7;                            // 0x0A90(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA9[0x3];                                      // 0x0AA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x0AAC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_68;           // 0x0AB4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x0AC4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_69;           // 0x0ACC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x0ADC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_70;           // 0x0AE4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x0AF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_71;           // 0x0AFC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x0B0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_72;           // 0x0B14(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_13;                             // 0x0B24(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x0B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0B2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0B2E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2F[0x1];                                      // 0x0B2F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_73;           // 0x0B38(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_74;           // 0x0B50(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_75;           // 0x0B68(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_76;           // 0x0B80(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_77;           // 0x0B98(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_14;                             // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0BB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x0BB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterMovementType                        Temp_byte_Variable_1;                              // 0x0BB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB5[0x3];                                      // 0x0BB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        Temp_byte_Variable_2;                              // 0x0BC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC5[0x3];                                      // 0x0BC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        Temp_byte_Variable_3;                              // 0x0BD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD5[0x3];                                      // 0x0BD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_7;                             // 0x0BD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0BDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        Temp_byte_Variable_4;                              // 0x0BE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE5[0x3];                                      // 0x0BE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_10;                            // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0BF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterMovementType                        Temp_byte_Variable_5;                              // 0x0BF5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        Temp_byte_Variable_6;                              // 0x0BF6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0BF7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterMovementType                        Temp_byte_Variable_7;                              // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        Temp_byte_Variable_8;                              // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0BFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x0BFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_78;           // 0x0BFC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x0C0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x0C14(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_79;           // 0x0C1C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x0C2C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_80;           // 0x0C34(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x0C44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_81;           // 0x0C4C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0C5C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_82;           // 0x0C64(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_15;                             // 0x0C74(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x0C7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7D[0x3];                                      // 0x0C7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_83;           // 0x0C88(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_84;           // 0x0CA0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_85;           // 0x0CB8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_86;           // 0x0CD0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_87;           // 0x0CE8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_16;                             // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D01[0x3];                                      // 0x0D01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0D04(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_88;           // 0x0D0C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0D1C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_89;           // 0x0D24(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0D34(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_90;           // 0x0D3C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0D4C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_91;           // 0x0D54(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0D64(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_92;           // 0x0D6C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_17;                             // 0x0D7C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_93;           // 0x0D84(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0D94(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0D9C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_94;           // 0x0DA4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0DB4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_95;           // 0x0DBC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0DCC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_96;           // 0x0DD4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0DE4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_97;           // 0x0DEC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_18;                             // 0x0DFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x0E04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E05[0x3];                                      // 0x0E05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_98;           // 0x0E08(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0E18(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x0E21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x0E22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x0E23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E24[0x4];                                      // 0x0E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0E30(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PickupWeapon_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E71[0x3];                                      // 0x0E71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_99;           // 0x0E74(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_93;                  // 0x0E84(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_100;          // 0x0E8C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_94;                  // 0x0E9C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_101;          // 0x0EA4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_19;                             // 0x0EB4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_105;                 // 0x0EBC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC4[0x4];                                      // 0x0EC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x0ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED1[0x7];                                      // 0x0ED1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x0EE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x0EE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0EE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_102;          // 0x0EE4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_106;                 // 0x0EF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_103;          // 0x0EFC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_104;          // 0x0F0C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0F1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0F1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0F1E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0F1F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0F21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F22[0x2];                                      // 0x0F22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_107;                 // 0x0F24(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0F2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0F2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0F2E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0F2F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0F31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0F32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0F33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_105;          // 0x0F34(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_20;                             // 0x0F44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_108;                 // 0x0F4C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_95;                  // 0x0F54(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element;     // 0x0F5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0F69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0F6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0F6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0F6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0F6E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0F6F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F71[0x3];                                      // 0x0F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_106;          // 0x0F74(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0F84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F85[0x3];                                      // 0x0F85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_109;                 // 0x0F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_107;          // 0x0F90(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA4[0x4];                                      // 0x0FA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0FB0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF1[0x7];                                      // 0x0FF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0FF8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x1008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_108;          // 0x1038(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x1051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x1052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1053[0x1];                                     // 0x1053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x1054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1059[0x3];                                     // 0x1059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x105C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1064[0x4];                                     // 0x1064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseWeapon_C*                       K2Node_Event_NewWeapon;                            // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_96;                  // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x1079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x107A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_107B[0x5];                                     // 0x107B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x1080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x1088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1089[0x7];                                     // 0x1089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x1090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x1098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1099[0x7];                                     // 0x1099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x10A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A9[0x3];                                     // 0x10A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_109;          // 0x10AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_10BC[0x4];                                     // 0x10BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemToSpawn;                    // 0x10C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x10C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C9[0x7];                                     // 0x10C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x10D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D9[0x3];                                     // 0x10D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x10DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x10E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x10F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x1100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x110C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110D[0x3];                                     // 0x110D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x1110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x111C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111D[0x3];                                     // 0x111D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x1120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x112C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112D[0x3];                                     // 0x112D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x1130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x113C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113D[0x3];                                     // 0x113D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x1140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x114C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114D[0x3];                                     // 0x114D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x1150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x115C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115D[0x3];                                     // 0x115D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x1160(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x1190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_97;                  // 0x11A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_110;          // 0x11A8(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6; // 0x11B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x11C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C1[0x7];                                     // 0x11C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x11C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x11D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasNoAbilityCooldown_bNoAbilityCooldown;  // 0x11D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D2[0x6];                                     // 0x11D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x11D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x11E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x11E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11EA[0x2];                                     // 0x11EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x11EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Interactable_1;                 // 0x11F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character_1;                    // 0x11F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive;                // 0x1200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x1210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1211[0x7];                                     // 0x1211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x1218(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x1221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1222[0x2];                                     // 0x1222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Interactable;                   // 0x1228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x1230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_1;              // 0x1238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x1248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x1249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_124A[0x6];                                     // 0x124A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_2;              // 0x1250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x1260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1261[0x7];                                     // 0x1261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_3;              // 0x1268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x1278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToInteract_bFailure;                   // 0x1279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_127A[0x2];                                     // 0x127A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInteractTime_InteractTime;             // 0x127C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x1280(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x1288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToShoot_CanShoot;                      // 0x1289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x128A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x128B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x128C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x128D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_128E[0x2];                                     // 0x128E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_98;                  // 0x1294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_111;          // 0x129C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x12AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12AD[0x3];                                     // 0x12AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_21;                             // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x12B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x12C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C1[0x7];                                     // 0x12C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x12C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShooting;                      // 0x12D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D1[0xF];                                     // 0x12D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x12E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UForceFeedbackComponent*                CallFunc_AddComponent_ReturnValue;                 // 0x1310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x1318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1319[0x7];                                     // 0x1319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_99;                  // 0x1328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_1;                       // 0x1330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1341[0x3];                                     // 0x1341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x1344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x1348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x134C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x1350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_110;                 // 0x1354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x135C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135D[0x3];                                     // 0x135D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_112;          // 0x1360(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x1370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bRunning;                       // 0x1371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x1372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x1373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x1374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1375[0x3];                                     // 0x1375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7; // 0x1378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x1380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1381[0x3];                                     // 0x1381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_111;                 // 0x1384(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_24;               // 0x138C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bAim;                           // 0x138D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_25;               // 0x138E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ShowPrimary;                    // 0x138F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_26;               // 0x1390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_27;               // 0x1391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1392[0x2];                                     // 0x1392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_113;          // 0x1394(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CanJump_ReturnValue;                      // 0x13A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A5[0x3];                                     // 0x13A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8; // 0x13A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x13B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x13B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B9[0x7];                                     // 0x13B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x13C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_CustomEvent_Intigator;                      // 0x13C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_112;                 // 0x13D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFlying_ReturnValue;                     // 0x13D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_28;               // 0x13D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13DA[0x2];                                     // 0x13DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x13DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRight;                         // 0x13E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsLeaning;                     // 0x13E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E2[0x2];                                     // 0x13E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_114;          // 0x13E4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_13F4[0x4];                                     // 0x13F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x13F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x1400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x1409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x140A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x140B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_115;          // 0x140C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x141C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141D[0x3];                                     // 0x141D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x1420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1429[0x3];                                     // 0x1429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_113;                 // 0x142C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1434[0x4];                                     // 0x1434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9; // 0x1438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x1440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1441[0x7];                                     // 0x1441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_10; // 0x1448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_116;          // 0x1450(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x1460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_29;               // 0x1461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1462[0x2];                                     // 0x1462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_114;                 // 0x1464(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEquipedWeapon                                K2Node_CustomEvent_NewWeapon;                      // 0x146C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146D[0x3];                                     // 0x146D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_11; // 0x1470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_117;          // 0x1478(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x1488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_30;               // 0x1489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Primary_1;                      // 0x148A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_QuickChange_1;                  // 0x148B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_148C[0x4];                                     // 0x148C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_2;                       // 0x1490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x14A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A1[0x3];                                     // 0x14A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewMultiplier;                  // 0x14A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x14A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A9[0x7];                                     // 0x14A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_12; // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x14B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_31;               // 0x14B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Primary;                        // 0x14BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_QuickChange;                    // 0x14BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x14BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x14BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14BE[0x2];                                     // 0x14BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_WeaponClass;                    // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Ammo;                           // 0x14C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x14CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x14CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14CE[0x2];                                     // 0x14CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_13; // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x14D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D9[0x3];                                     // 0x14D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x14DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x14E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_32;               // 0x14E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14E5[0x3];                                     // 0x14E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x14E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x14EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_33;               // 0x14F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_34;               // 0x14F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_35;               // 0x14F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_36;               // 0x14F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x14F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x14F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_37;               // 0x14F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14F7[0x1];                                     // 0x14F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseWeapon_C*                       K2Node_Select_Default_2;                           // 0x14F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoType                                     K2Node_Event_AmmoType;                             // 0x1500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1501[0x7];                                     // 0x1501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_WeaponClass;                          // 0x1508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentAmmo;                          // 0x1510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x1514(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151C[0x4];                                     // 0x151C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_14; // 0x1520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x1528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1529[0x3];                                     // 0x1529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_115;                 // 0x152C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1534[0x4];                                     // 0x1534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_15; // 0x1538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x1540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1541[0x3];                                     // 0x1541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_118;          // 0x1544(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_38;               // 0x1554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_39;               // 0x1555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x1556(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x1557(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_116;                 // 0x1558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element_1;   // 0x1560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_119;          // 0x156C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x157C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_157D[0x3];                                     // 0x157D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_117;                 // 0x1580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseWeapon_C*                       K2Node_Select_Default_3;                           // 0x1588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x1590(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x1598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1599[0x7];                                     // 0x1599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x15A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x15A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A9[0x3];                                     // 0x15A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_23;                             // 0x15AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x15B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingPrimary_bUsingPrimary;             // 0x15B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B6[0x2];                                     // 0x15B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_100;                 // 0x15B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_120;          // 0x15C0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_118;                 // 0x15D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_40;               // 0x15D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D9[0x7];                                     // 0x15D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_16; // 0x15E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_121;          // 0x15E8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x15F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15F9[0x7];                                     // 0x15F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_17; // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x1608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x1609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_41;               // 0x160A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_160B[0x1];                                     // 0x160B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_119;                 // 0x160C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_35;                // 0x1614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_42;               // 0x1615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_36;                // 0x1616(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1617[0x1];                                     // 0x1617(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_122;          // 0x1618(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_18; // 0x1628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x1630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1631[0x7];                                     // 0x1631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x1638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue_1;           // 0x1640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_19; // 0x1648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x1650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bUsingLethal;                   // 0x1651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1652[0x2];                                     // 0x1652(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_24;                             // 0x1654(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_120;                 // 0x165C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_43;               // 0x1664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1665[0x3];                                     // 0x1665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_20; // 0x1668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_123;          // 0x1670(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x1680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1681[0x7];                                     // 0x1681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x1688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x1690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x1698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x16A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x16A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A9[0x3];                                     // 0x16A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x16AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_124;          // 0x16B0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_121;                 // 0x16C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_44;               // 0x16C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_37;                // 0x16C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_38;                // 0x16CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_39;                // 0x16CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_40;                // 0x16CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16CD[0x3];                                     // 0x16CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_3;                       // 0x16D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x16E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E1[0x7];                                     // 0x16E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_4;                       // 0x16E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x16F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F9[0x7];                                     // 0x16F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_5;                       // 0x1700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1711[0x7];                                     // 0x1711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_6;                       // 0x1718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1729[0x7];                                     // 0x1729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_7;                       // 0x1730(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x1740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1741[0x3];                                     // 0x1741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x1744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x1748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x174C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x1750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x1754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x1758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x175C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x1760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x1764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x1768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        K2Node_Select_Default_8;                           // 0x176C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterMovementType                        K2Node_Select_Default_9;                           // 0x176D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176E[0x2];                                     // 0x176E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage_1;                             // 0x1770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1774[0x4];                                     // 0x1774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType_2;                         // 0x1778(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy_2;                       // 0x1780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_2;                       // 0x1788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_CustomEvent_Dead_Actor;                     // 0x1790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Instigator_Controller;          // 0x1798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_CustomEvent_DmgType_1;                      // 0x17A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser_1;                 // 0x17A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x17B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x17B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B9[0x7];                                     // 0x17B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x17C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_KillerName;                     // 0x17C8(0x0018)()
	float                                         K2Node_CustomEvent_KillerHP;                       // 0x17E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  K2Node_CustomEvent_KillerClass;                    // 0x17E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E5[0x3];                                     // 0x17E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DmgType;                        // 0x17E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewHP_3;                        // 0x17F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F4[0x4];                                     // 0x17F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_10;                          // 0x17F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x1804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x1808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1809[0x7];                                     // 0x1809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Instigator;                     // 0x1810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181C[0x4];                                     // 0x181C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x1820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1829[0x7];                                     // 0x1829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x1830(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_101;                 // 0x1840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1848[0x8];                                     // 0x1848(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x1850(0x0560)()
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_21; // 0x1DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x1DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_45;               // 0x1DB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_75;                   // 0x1DBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DBB[0x5];                                     // 0x1DBB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x1DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_76;                   // 0x1DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD1[0x7];                                     // 0x1DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue_2;           // 0x1DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x1DE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_125;          // 0x1DEC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1DFC[0x4];                                     // 0x1DFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_KillerPawn;                     // 0x1E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Controller;                     // 0x1E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x1E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E14[0x4];                                     // 0x1E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType_1;                         // 0x1E18(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x1E20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x1E2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x1E38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x1E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x1E48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E54[0x4];                                     // 0x1E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x1E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x1E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x1E68(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DamageReceived;                       // 0x1EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EF4[0x4];                                     // 0x1EF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x1EF8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x1F00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x1F0C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1F94[0x4];                                     // 0x1F94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x1FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x1FA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FAA[0x2];                                     // 0x1FAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x1FAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x1FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x1FB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x1FC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x1FCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x1FD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE4[0x4];                                     // 0x1FE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x1FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x1FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x1FF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x2000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x2008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x200C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x2010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x2014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x2020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x202C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202D[0x3];                                     // 0x202D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDT_BaseDamage_C*                 K2Node_DynamicCast_AsDT_Base_Damage;               // 0x2030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x2038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2039[0x3];                                     // 0x2039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x203C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_41;                // 0x2048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2049[0x3];                                     // 0x2049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x204C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_122;                 // 0x2058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_126;          // 0x2060(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x2070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_77;                   // 0x207C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207D[0x3];                                     // 0x207D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x2080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewHP_2;                        // 0x208C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_46;               // 0x2090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2091[0x3];                                     // 0x2091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_102;                 // 0x2094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_47;               // 0x209C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209D[0x3];                                     // 0x209D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_127;          // 0x20A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_48;               // 0x20B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B1[0x7];                                     // 0x20B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x20B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x20C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue_1;                // 0x20C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewHP_1;                        // 0x20CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_HPHealed;                       // 0x20D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x20D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D5[0x3];                                     // 0x20D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x20D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x20DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x20E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20E1[0x3];                                     // 0x20E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x20E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20E8[0x8];                                     // 0x20E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4_1;                       // 0x20F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings_1;           // 0x2100(0x0560)()
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_128;          // 0x2660(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_123;                 // 0x2670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_42;                // 0x2678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_43;                // 0x2679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_267A[0x2];                                     // 0x267A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewHP;                          // 0x267C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_44;                // 0x2680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x2681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2682[0x6];                                     // 0x2682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x2688(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerTag_C*                        K2Node_DynamicCast_AsWB_Player_Tag;                // 0x2690(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x2698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2699[0x7];                                     // 0x2699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x26A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_129;          // 0x26A8(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_8;                       // 0x26B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x26C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C9[0x7];                                     // 0x26C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_9;                       // 0x26D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x26E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26E1[0x7];                                     // 0x26E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_10;                      // 0x26E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x26F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26F9[0x7];                                     // 0x26F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_11;                      // 0x2700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x2710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2711[0x3];                                     // 0x2711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x2714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_12;                      // 0x2718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x2728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2729[0x7];                                     // 0x2729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x2730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_124;                 // 0x2738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAmmoMagazines>                 K2Node_CustomEvent_Magazines;                      // 0x2740(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 K2Node_CustomEvent_Primary_Weapon;                 // 0x2750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_SecondaryWeapon;                // 0x2758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AController*                      K2Node_CustomEvent_KillerPC;                       // 0x2760(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_CustomEvent_DeadActor;                      // 0x2768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_CustomEvent_DamageType;                     // 0x2770(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Assist;                         // 0x2778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadshot;                      // 0x2780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2781[0x7];                                     // 0x2781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_22; // 0x2788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_78;                   // 0x2790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_79;                   // 0x2791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2792[0x2];                                     // 0x2792(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x2794(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_281C[0x4];                                     // 0x281C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_5;              // 0x2820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x2828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x282C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x2830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x2834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x2838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x283C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283D[0x3];                                     // 0x283D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x2840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue_2;                // 0x2844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x2848(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_PreviousFloorImpactNormal;            // 0x2850(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_PreviousFloorContactNormal;           // 0x285C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_PreviousLocation;                     // 0x2868(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TimeDelta;                            // 0x2874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerTag_C*                        K2Node_DynamicCast_AsWB_Player_Tag_1;              // 0x2878(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x2880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2881[0x7];                                     // 0x2881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_4;     // 0x2888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_5;     // 0x2890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x2898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GM_C*                          K2Node_DynamicCast_AsBP_Base_GM;                   // 0x28A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x28A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A9[0x7];                                     // 0x28A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x28B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x28B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_23; // 0x28C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_130;          // 0x28C8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_80;                   // 0x28D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D9[0x7];                                     // 0x28D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_24; // 0x28E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x28E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_81;                   // 0x28E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsVehicle;                     // 0x28EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28EB[0x1];                                     // 0x28EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_103;                 // 0x28EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_45;                // 0x28F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_49;               // 0x28F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_46;                // 0x28F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_47;                // 0x28F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x28F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x2900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2901[0x7];                                     // 0x2901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x2908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseWeapon_C*                       K2Node_Select_Default_11;                          // 0x2910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_1;        // 0x2918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x2920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2921[0x3];                                     // 0x2921(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x2924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x2928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2929[0x7];                                     // 0x2929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x2930(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerTag_C*                        K2Node_DynamicCast_AsWB_Player_Tag_2;              // 0x2938(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x2940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x2941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2942[0x6];                                     // 0x2942(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_UtilityClass;                   // 0x2948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x2950(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x2980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x2981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2982[0x6];                                     // 0x2982(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x2988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseLethalEquipment_C*              CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x2990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x2998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2999[0x3];                                     // 0x2999(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element_2;   // 0x299C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseWeapon_C*                       K2Node_Select_Default_12;                          // 0x29A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element_3;   // 0x29B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVehicle;                           // 0x29BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29BD[0x3];                                     // 0x29BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseWeapon_C*                       K2Node_CustomEvent_NewCurrentWeapon;               // 0x29C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_131;          // 0x29C8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x29D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x29DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x29E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x29E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x29E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x29EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_104;                 // 0x29F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_13;                      // 0x29F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x2A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A09[0x7];                                     // 0x2A09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_14;                      // 0x2A10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x2A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A21[0x7];                                     // 0x2A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_15;                      // 0x2A28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x2A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A39[0x7];                                     // 0x2A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_16;                      // 0x2A40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x2A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A51[0x7];                                     // 0x2A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_17;                      // 0x2A58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x2A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A69[0x7];                                     // 0x2A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_18;                      // 0x2A70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x2A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_50;               // 0x2A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A82[0xE];                                     // 0x2A82(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x2A90(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x2AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PickupAmmo_C*                       CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x2AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter");
static_assert(sizeof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter) == 0x002AD0, "Wrong size on BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, EntryPoint) == 0x000000, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_A) == 0x000004, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_A' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_92) == 0x000008, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_92' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_91) == 0x000020, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_91' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_90) == 0x000038, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_90' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable) == 0x000050, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_89) == 0x000068, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_89' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_88) == 0x000070, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_88' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_4) == 0x000078, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_87) == 0x000088, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_87' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_5) == 0x000090, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_86) == 0x0000A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_86' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_85) == 0x0000B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_85' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_1) == 0x0000D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable) == 0x0000D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable) == 0x0000DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_24) == 0x0000E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_84) == 0x0000F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_84' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_8) == 0x000100, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_83) == 0x000110, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_83' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_9) == 0x000118, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_82) == 0x000128, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_82' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_10) == 0x000130, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_81) == 0x000140, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_81' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_11) == 0x000148, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_80) == 0x000158, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_80' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_12) == 0x000160, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_2) == 0x000170, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_23) == 0x000178, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_22) == 0x000190, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable) == 0x0001A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_21) == 0x0001C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_20) == 0x0001D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_1) == 0x0001F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_13) == 0x000208, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_14) == 0x000218, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue) == 0x000228, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MovementRecoil_Spread) == 0x00022C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MovementRecoil_Spread' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000231, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000238, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000240, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_SwitchEnum_CmpSuccess) == 0x000248, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000250, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_3) == 0x000258, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000259, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00025A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_4) == 0x00025B, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00025C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_19) == 0x000260, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_18) == 0x000278, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_2) == 0x000290, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_17) == 0x0002A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_16) == 0x0002C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_15) == 0x0002D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_3) == 0x0002F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_5) == 0x000308, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_6) == 0x000309, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_15) == 0x00030C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_79) == 0x00031C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_79' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_78) == 0x000324, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_78' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_16) == 0x00032C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_77) == 0x00033C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_77' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_17) == 0x000344, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_76) == 0x000354, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_76' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_18) == 0x00035C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_75) == 0x00036C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_75' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_19) == 0x000374, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_3) == 0x000384, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_14) == 0x000390, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_13) == 0x0003A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_4) == 0x0003C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_12) == 0x0003D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_11) == 0x0003F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_5) == 0x000408, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_10) == 0x000420, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_9) == 0x000438, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_8) == 0x000450, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_7) == 0x000468, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_6) == 0x000480, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_7) == 0x000498, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_74) == 0x00049C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_74' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_20) == 0x0004A4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_73) == 0x0004B4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_73' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_21) == 0x0004BC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_72) == 0x0004CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_72' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_22) == 0x0004D4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_71) == 0x0004E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_71' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_23) == 0x0004EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_70) == 0x0004FC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_70' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_24) == 0x000504, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_4) == 0x000514, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_25) == 0x00051C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_69) == 0x00052C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_69' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_68) == 0x000534, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_68' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_26) == 0x00053C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_67) == 0x00054C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_67' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_27) == 0x000554, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_66) == 0x000564, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_66' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_28) == 0x00056C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_65) == 0x00057C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_65' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_29) == 0x000584, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_5) == 0x000594, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_30) == 0x00059C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_64) == 0x0005AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_64' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_63) == 0x0005B4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_63' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_31) == 0x0005BC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_62) == 0x0005CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_62' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_32) == 0x0005D4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_61) == 0x0005E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_61' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_33) == 0x0005EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_60) == 0x0005FC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_60' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_34) == 0x000604, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_6) == 0x000614, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_8) == 0x00061C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_59) == 0x000620, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_59' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_35) == 0x000628, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_58) == 0x000638, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_58' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_36) == 0x000640, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_57) == 0x000650, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_57' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_37) == 0x000658, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_56) == 0x000668, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_56' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_38) == 0x000670, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_55) == 0x000680, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_55' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_39) == 0x000688, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_7) == 0x000698, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_40) == 0x0006A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_54) == 0x0006B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_54' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_53) == 0x0006B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_53' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_41) == 0x0006C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_52) == 0x0006D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_52' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_42) == 0x0006D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_51) == 0x0006E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_51' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_43) == 0x0006F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_50) == 0x000700, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_44) == 0x000708, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_8) == 0x000718, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_9) == 0x000720, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000721, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000722, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputKeyEvent_Key_1) == 0x000728, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputKeyEvent_Key) == 0x000740, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_10) == 0x000758, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_11) == 0x000759, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_45) == 0x00075C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_49) == 0x00076C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_48) == 0x000774, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_46) == 0x00077C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_47) == 0x00078C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_47) == 0x000794, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_46) == 0x0007A4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_48) == 0x0007AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_45) == 0x0007BC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_49) == 0x0007C4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_9) == 0x0007D4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_12) == 0x0007DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_Success) == 0x0007DD, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_Ammo) == 0x0007E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_Ammo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_MagazinesIndex) == 0x0007E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_MagazinesIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_NewQuantity) == 0x0007E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_NewQuantity' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_13) == 0x0007EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_14) == 0x0007ED, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_Success_1) == 0x0007EE, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_Success_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_Ammo_1) == 0x0007F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_Ammo_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_MagazinesIndex_1) == 0x0007F4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_MagazinesIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasAmmo_NewQuantity_1) == 0x0007F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasAmmo_NewQuantity_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_15) == 0x0007FC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_16) == 0x0007FD, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_50) == 0x000800, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_44) == 0x000810, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_43) == 0x000818, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_51) == 0x000820, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_51' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_42) == 0x000830, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_52) == 0x000838, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_52' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_41) == 0x000848, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_53) == 0x000850, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_53' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_40) == 0x000860, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_54) == 0x000868, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_54' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_10) == 0x000878, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_17) == 0x000880, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_18) == 0x000881, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_19) == 0x000882, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_20) == 0x000883, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_5) == 0x000888, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_21) == 0x0008A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_4) == 0x0008A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_22) == 0x0008C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_23) == 0x0008C1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_3) == 0x0008C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_2) == 0x0008E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_6) == 0x0008F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_55) == 0x000910, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_55' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_56) == 0x000920, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_56' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_57) == 0x000930, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_57' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000940, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_24) == 0x000948, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_39) == 0x00094C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_58) == 0x000954, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_58' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_38) == 0x000964, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_59) == 0x00096C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_59' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_37) == 0x00097C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_60) == 0x000984, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_60' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_36) == 0x000994, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_61) == 0x00099C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_61' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_35) == 0x0009AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_62) == 0x0009B4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_62' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_11) == 0x0009C4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_63) == 0x0009CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_63' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_34) == 0x0009DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_33) == 0x0009E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_64) == 0x0009EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_64' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_32) == 0x0009FC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_65) == 0x000A04, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_65' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_31) == 0x000A14, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_66) == 0x000A1C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_66' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_30) == 0x000A2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_67) == 0x000A34, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_67' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_12) == 0x000A44, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_25) == 0x000A4C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_26) == 0x000A4D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_27) == 0x000A4E, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_28) == 0x000A4F, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_29) == 0x000A50, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable) == 0x000A51, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key_1) == 0x000A58, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key) == 0x000A70, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default) == 0x000A88, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_struct_Variable_7) == 0x000A90, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_30) == 0x000AA8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_29) == 0x000AAC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_68) == 0x000AB4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_68' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_28) == 0x000AC4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_69) == 0x000ACC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_69' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_27) == 0x000ADC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_70) == 0x000AE4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_70' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_26) == 0x000AF4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_71) == 0x000AFC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_71' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_25) == 0x000B0C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_72) == 0x000B14, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_72' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_13) == 0x000B24, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_31) == 0x000B2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_32) == 0x000B2D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_33) == 0x000B2E, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_24) == 0x000B30, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_73) == 0x000B38, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_73' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_23) == 0x000B48, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_74) == 0x000B50, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_74' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_22) == 0x000B60, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_75) == 0x000B68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_75' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_21) == 0x000B78, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_76) == 0x000B80, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_76' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_20) == 0x000B90, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_77) == 0x000B98, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_77' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_14) == 0x000BA8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_34) == 0x000BB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_35) == 0x000BB1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_36) == 0x000BB2, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_1) == 0x000BB3, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_37) == 0x000BB4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_1) == 0x000BB8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_2) == 0x000BBC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_3) == 0x000BC0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_2) == 0x000BC4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_4) == 0x000BC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_5) == 0x000BCC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_6) == 0x000BD0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_3) == 0x000BD4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_7) == 0x000BD8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_8) == 0x000BDC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_9) == 0x000BE0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_4) == 0x000BE4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_10) == 0x000BE8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_11) == 0x000BEC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_12) == 0x000BF0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_1) == 0x000BF4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_5) == 0x000BF5, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_6) == 0x000BF6, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_2) == 0x000BF7, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_7) == 0x000BF8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable_8) == 0x000BF9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_3) == 0x000BFA, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_38) == 0x000BFB, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_78) == 0x000BFC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_78' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_19) == 0x000C0C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_18) == 0x000C14, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_79) == 0x000C1C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_79' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_17) == 0x000C2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_80) == 0x000C34, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_80' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_16) == 0x000C44, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_81) == 0x000C4C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_81' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_15) == 0x000C5C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_82) == 0x000C64, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_82' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_15) == 0x000C74, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_39) == 0x000C7C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_14) == 0x000C80, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_83) == 0x000C88, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_83' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_13) == 0x000C98, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_84) == 0x000CA0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_84' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_12) == 0x000CB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_85) == 0x000CB8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_85' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_11) == 0x000CC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_86) == 0x000CD0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_86' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_10) == 0x000CE0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_87) == 0x000CE8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_87' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_16) == 0x000CF8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_40) == 0x000D00, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_9) == 0x000D04, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_88) == 0x000D0C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_88' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_8) == 0x000D1C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_89) == 0x000D24, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_89' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_7) == 0x000D34, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_90) == 0x000D3C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_90' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_6) == 0x000D4C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_91) == 0x000D54, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_91' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_5) == 0x000D64, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_92) == 0x000D6C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_92' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_17) == 0x000D7C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_93) == 0x000D84, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_93' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_4) == 0x000D94, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_3) == 0x000D9C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_94) == 0x000DA4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_94' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_2) == 0x000DB4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_95) == 0x000DBC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_95' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_1) == 0x000DCC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_96) == 0x000DD4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_96' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName) == 0x000DE4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_97) == 0x000DEC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_97' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_18) == 0x000DFC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_41) == 0x000E04, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_98) == 0x000E08, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_98' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000E18, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_42) == 0x000E20, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_43) == 0x000E21, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_44) == 0x000E22, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_45) == 0x000E23, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetObjectClass_ReturnValue) == 0x000E28, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000E30, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000E60, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000E68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000E70, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_99) == 0x000E74, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_99' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_93) == 0x000E84, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_93' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_100) == 0x000E8C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_100' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_94) == 0x000E9C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_94' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_101) == 0x000EA4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_101' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_19) == 0x000EB4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_105) == 0x000EBC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_105' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000EC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_46) == 0x000ED0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000ED8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_47) == 0x000EE0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_48) == 0x000EE1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_49) == 0x000EE2, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsDedicatedServer_ReturnValue) == 0x000EE3, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_102) == 0x000EE4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_102' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_106) == 0x000EF4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_106' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_103) == 0x000EFC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_103' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_104) == 0x000F0C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_104' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x000F1C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x000F1D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_4) == 0x000F1E, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000F1F, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_5) == 0x000F20, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_1) == 0x000F21, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_107) == 0x000F24, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_107' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_2) == 0x000F2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_6) == 0x000F2D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_7) == 0x000F2E, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_8) == 0x000F2F, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_3) == 0x000F30, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_9) == 0x000F31, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_4) == 0x000F32, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_5) == 0x000F33, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_105) == 0x000F34, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_105' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_20) == 0x000F44, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_108) == 0x000F4C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_108' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_95) == 0x000F54, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_95' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetMagazineInfoPerType_Array_Element) == 0x000F5C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetMagazineInfoPerType_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_10) == 0x000F68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000F69, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_11) == 0x000F6A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_12) == 0x000F6B, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_6) == 0x000F6C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_7) == 0x000F6D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_13) == 0x000F6E, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_8) == 0x000F6F, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_9) == 0x000F70, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_106) == 0x000F74, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_106' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_10) == 0x000F84, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_109) == 0x000F88, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_109' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_107) == 0x000F90, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_107' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000FA0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x000FA8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_FormatArgumentData) == 0x000FB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000FF0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeArray_Array) == 0x000FF8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Format_ReturnValue) == 0x001008, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_TextToString_ReturnValue) == 0x001020, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_StringToName_ReturnValue) == 0x001030, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_108) == 0x001038, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_108' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x001048, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_14) == 0x001050, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_50) == 0x001051, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_15) == 0x001052, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_int_Loop_Counter_Variable) == 0x001054, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_16) == 0x001058, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x00105C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_int_Array_Index_Variable) == 0x001060, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_NewWeapon) == 0x001068, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_NewWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_96) == 0x001070, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_96' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_17) == 0x001078, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_11) == 0x001079, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_51) == 0x00107A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x001080, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_52) == 0x001088, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x001090, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_53) == 0x001098, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x0010A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_54) == 0x0010A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_109) == 0x0010AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_109' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_ItemToSpawn) == 0x0010C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_ItemToSpawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_18) == 0x0010C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue) == 0x0010D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_12) == 0x0010D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x0010DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x0010E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x0010F4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetForwardVector_ReturnValue) == 0x001100, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00110C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x001110, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_19) == 0x00111C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x001120, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_13) == 0x00112C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetUpVector_ReturnValue) == 0x001130, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_14) == 0x00113C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x001140, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_15) == 0x00114C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_VectorVector_ReturnValue_1) == 0x001150, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_16) == 0x00115C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeTransform_ReturnValue) == 0x001160, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x001190, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x001198, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_97) == 0x0011A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_97' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_110) == 0x0011A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_110' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6) == 0x0011B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_55) == 0x0011C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerPawn_ReturnValue) == 0x0011C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0011D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasNoAbilityCooldown_bNoAbilityCooldown) == 0x0011D1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasNoAbilityCooldown_bNoAbilityCooldown' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI) == 0x0011D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess) == 0x0011E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_4) == 0x0011E9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_1) == 0x0011EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Interactable_1) == 0x0011F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Character_1) == 0x0011F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_Interactive) == 0x001200, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_Interactive' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_1) == 0x001210, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x001218, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x001220, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_56) == 0x001221, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_int_Variable) == 0x001224, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Interactable) == 0x001228, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Character) == 0x001230, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_Interactive_1) == 0x001238, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_Interactive_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_2) == 0x001248, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_57) == 0x001249, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_Interactive_2) == 0x001250, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_Interactive_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_3) == 0x001260, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_Interactive_3) == 0x001268, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_Interactive_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_4) == 0x001278, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_TryToInteract_bFailure) == 0x001279, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_TryToInteract_bFailure' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetInteractTime_InteractTime) == 0x00127C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetInteractTime_InteractTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimer_ReturnValue) == 0x001280, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x001288, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_TryToShoot_CanShoot) == 0x001289, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_TryToShoot_CanShoot' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_20) == 0x00128A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00128B, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanOR_ReturnValue) == 0x00128C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_17) == 0x00128D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x001290, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_98) == 0x001294, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_98' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_111) == 0x00129C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_111' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_5) == 0x0012AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_21) == 0x0012B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0012B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0012C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue_1) == 0x0012C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bShooting) == 0x0012D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bShooting' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetTransform_ReturnValue) == 0x0012E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_AddComponent_ReturnValue) == 0x001310, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_21) == 0x001318, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x001320, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_99) == 0x001328, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_99' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_1) == 0x001330, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_5) == 0x001340, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputAxisEvent_AxisValue_5) == 0x001344, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputAxisEvent_AxisValue_4) == 0x001348, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputAxisEvent_AxisValue_3) == 0x00134C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputAxisEvent_AxisValue_2) == 0x001350, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_110) == 0x001354, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_110' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_22) == 0x00135C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_112) == 0x001360, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_112' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_23) == 0x001370, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bRunning) == 0x001371, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bRunning' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_18) == 0x001372, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_19) == 0x001373, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_20) == 0x001374, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7) == 0x001378, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_58) == 0x001380, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_111) == 0x001384, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_111' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_24) == 0x00138C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bAim) == 0x00138D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bAim' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_25) == 0x00138E, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_ShowPrimary) == 0x00138F, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_ShowPrimary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_26) == 0x001390, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_27) == 0x001391, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_113) == 0x001394, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_113' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CanJump_ReturnValue) == 0x0013A4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CanJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8) == 0x0013A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue_2) == 0x0013B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_59) == 0x0013B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DamagedActor) == 0x0013C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Intigator) == 0x0013C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Intigator' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_112) == 0x0013D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_112' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsFlying_ReturnValue) == 0x0013D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_28) == 0x0013D9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0013DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bRight) == 0x0013E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bRight' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bIsLeaning) == 0x0013E1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bIsLeaning' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_114) == 0x0013E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_114' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0013F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_StartCameraShake_ReturnValue) == 0x001400, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_21) == 0x001408, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_22) == 0x001409, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_23) == 0x00140A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_24) == 0x00140B, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_115) == 0x00140C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_115' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_25) == 0x00141C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x001420, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_26) == 0x001428, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_113) == 0x00142C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_113' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9) == 0x001438, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_60) == 0x001440, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_10) == 0x001448, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_116) == 0x001450, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_116' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_61) == 0x001460, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_29) == 0x001461, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_114) == 0x001464, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_114' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewWeapon) == 0x00146C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_11) == 0x001470, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_117) == 0x001478, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_117' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_62) == 0x001488, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_30) == 0x001489, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Primary_1) == 0x00148A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Primary_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_QuickChange_1) == 0x00148B, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_QuickChange_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_2) == 0x001490, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_6) == 0x0014A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewMultiplier) == 0x0014A4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewMultiplier' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_63) == 0x0014A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_12) == 0x0014B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_64) == 0x0014B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_31) == 0x0014B9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Primary) == 0x0014BA, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Primary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_QuickChange) == 0x0014BB, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_QuickChange' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_27) == 0x0014BC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_28) == 0x0014BD, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_WeaponClass) == 0x0014C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Ammo) == 0x0014C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Ammo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_29) == 0x0014CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_65) == 0x0014CD, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_13) == 0x0014D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_66) == 0x0014D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0014DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0014E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_32) == 0x0014E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0014E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Lerp_ReturnValue) == 0x0014EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_33) == 0x0014F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_34) == 0x0014F1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_35) == 0x0014F2, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_36) == 0x0014F3, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_30) == 0x0014F4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0014F5, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_37) == 0x0014F6, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_2) == 0x0014F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_AmmoType) == 0x001500, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_AmmoType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_WeaponClass) == 0x001508, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_CurrentAmmo) == 0x001510, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_CurrentAmmo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_22) == 0x001514, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_14) == 0x001520, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_67) == 0x001528, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_115) == 0x00152C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_115' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_15) == 0x001538, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_68) == 0x001540, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_118) == 0x001544, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_118' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_38) == 0x001554, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_39) == 0x001555, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_31) == 0x001556, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_32) == 0x001557, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_116) == 0x001558, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_116' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetMagazineInfoPerType_Array_Element_1) == 0x001560, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetMagazineInfoPerType_Array_Element_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_119) == 0x00156C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_119' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00157C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_117) == 0x001580, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_117' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_3) == 0x001588, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x001590, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_33) == 0x001598, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x0015A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x0015A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_23) == 0x0015AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_34) == 0x0015B4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsUsingPrimary_bUsingPrimary) == 0x0015B5, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsUsingPrimary_bUsingPrimary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_100) == 0x0015B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_100' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_120) == 0x0015C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_120' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_118) == 0x0015D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_118' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_40) == 0x0015D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_16) == 0x0015E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_121) == 0x0015E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_121' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_69) == 0x0015F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_17) == 0x001600, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x001608, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_70) == 0x001609, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_41) == 0x00160A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_119) == 0x00160C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_119' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_35) == 0x001614, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_42) == 0x001615, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_36) == 0x001616, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_122) == 0x001618, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_122' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_18) == 0x001628, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_71) == 0x001630, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x001638, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_StartCameraShake_ReturnValue_1) == 0x001640, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_StartCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_19) == 0x001648, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_72) == 0x001650, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bUsingLethal) == 0x001651, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bUsingLethal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_name_Variable_24) == 0x001654, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_120) == 0x00165C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_120' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_43) == 0x001664, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_20) == 0x001668, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_123) == 0x001670, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_123' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_73) == 0x001680, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue_1) == 0x001688, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue_2) == 0x001690, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue_3) == 0x001698, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0016A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0016A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_ApplyDamage_ReturnValue) == 0x0016AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_124) == 0x0016B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_124' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_121) == 0x0016C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_121' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_44) == 0x0016C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_37) == 0x0016C9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_38) == 0x0016CA, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_39) == 0x0016CB, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_40) == 0x0016CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_3) == 0x0016D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_7) == 0x0016E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_4) == 0x0016E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_8) == 0x0016F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_5) == 0x001700, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_9) == 0x001710, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_6) == 0x001718, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_10) == 0x001728, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_7) == 0x001730, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_11) == 0x001740, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputAxisEvent_AxisValue_1) == 0x001744, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputAxisEvent_AxisValue) == 0x001748, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_4) == 0x00174C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_5) == 0x001750, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x001754, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x001758, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_6) == 0x00175C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_7) == 0x001760, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x001764, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x001768, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_8) == 0x00176C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_9) == 0x00176D, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Damage_1) == 0x001770, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageType_2) == 0x001778, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageType_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_InstigatedBy_2) == 0x001780, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_InstigatedBy_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageCauser_2) == 0x001788, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageCauser_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Dead_Actor) == 0x001790, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Dead_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Instigator_Controller) == 0x001798, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Instigator_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DmgType_1) == 0x0017A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DmgType_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DamageCauser_1) == 0x0017A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x0017B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_74) == 0x0017B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue_3) == 0x0017C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_KillerName) == 0x0017C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_KillerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_KillerHP) == 0x0017E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_KillerHP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_KillerClass) == 0x0017E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_KillerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DmgType) == 0x0017E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DmgType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewHP_3) == 0x0017F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewHP_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_10) == 0x0017F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x001800, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x001804, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Less_FloatFloat_ReturnValue) == 0x001808, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Instigator) == 0x001810, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_SelectFloat_ReturnValue) == 0x001818, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsBP_Player_Character) == 0x001820, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_12) == 0x001828, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_Vector4) == 0x001830, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_101) == 0x001840, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_101' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_PostProcessSettings) == 0x001850, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_21) == 0x001DB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x001DB8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_45) == 0x001DB9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_75) == 0x001DBA, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DamageCauser) == 0x001DC0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x001DC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_76) == 0x001DD0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_StartCameraShake_ReturnValue_2) == 0x001DD8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_StartCameraShake_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x001DE0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_125) == 0x001DEC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_125' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_KillerPawn) == 0x001E00, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_KillerPawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Controller) == 0x001E08, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Damage) == 0x001E10, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageType_1) == 0x001E18, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitLocation) == 0x001E20, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitNormal) == 0x001E2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitComponent) == 0x001E38, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_BoneName) == 0x001E40, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_ShotFromDirection) == 0x001E48, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_InstigatedBy_1) == 0x001E58, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageCauser_1) == 0x001E60, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitInfo_1) == 0x001E68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageReceived) == 0x001EF0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageReceived' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageType) == 0x001EF8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Origin) == 0x001F00, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitInfo) == 0x001F0C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_InstigatedBy) == 0x001F98, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DamageCauser) == 0x001FA0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x001FA8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x001FA9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Time) == 0x001FAC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Distance) == 0x001FB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Location) == 0x001FB4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x001FC0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Normal) == 0x001FCC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x001FD8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_PhysMat) == 0x001FE8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitActor) == 0x001FF0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitComponent) == 0x001FF8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x002000, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitItem) == 0x002008, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_ElementIndex) == 0x00200C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x002010, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_TraceStart) == 0x002014, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x002020, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00202C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsDT_Base_Damage) == 0x002030, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsDT_Base_Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_13) == 0x002038, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00203C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_41) == 0x002048, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00204C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_122) == 0x002058, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_122' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_126) == 0x002060, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_126' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Normal_ReturnValue) == 0x002070, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_77) == 0x00207C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x002080, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewHP_2) == 0x00208C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewHP_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_46) == 0x002090, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_102) == 0x002094, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_102' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_47) == 0x00209C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_127) == 0x0020A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_127' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_48) == 0x0020B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimer_ReturnValue_2) == 0x0020B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue_4) == 0x0020C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_ApplyDamage_ReturnValue_1) == 0x0020C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_ApplyDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewHP_1) == 0x0020CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewHP_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_HPHealed) == 0x0020D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_HPHealed' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0020D4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0020D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0020DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0020E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_SelectFloat_ReturnValue_1) == 0x0020E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_Vector4_1) == 0x0020F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_Vector4_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_PostProcessSettings_1) == 0x002100, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_PostProcessSettings_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_128) == 0x002660, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_128' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_123) == 0x002670, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_123' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_42) == 0x002678, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_43) == 0x002679, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewHP) == 0x00267C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewHP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_44) == 0x002680, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsGameOver_bGameOver) == 0x002681, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsGameOver_bGameOver' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetUserWidgetObject_ReturnValue) == 0x002688, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsWB_Player_Tag) == 0x002690, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsWB_Player_Tag' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_14) == 0x002698, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue_4) == 0x0026A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_129) == 0x0026A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_129' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_8) == 0x0026B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_15) == 0x0026C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_9) == 0x0026D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_16) == 0x0026E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_10) == 0x0026E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_17) == 0x0026F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_11) == 0x002700, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_18) == 0x002710, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DeltaSeconds) == 0x002714, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_12) == 0x002718, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_19) == 0x002728, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_NewController) == 0x002730, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_124) == 0x002738, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_124' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Magazines) == 0x002740, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Magazines' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Primary_Weapon) == 0x002750, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Primary_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_SecondaryWeapon) == 0x002758, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_SecondaryWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_KillerPC) == 0x002760, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_KillerPC' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DeadActor) == 0x002768, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DeadActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_DamageType) == 0x002770, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Assist) == 0x002778, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Assist' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bHeadshot) == 0x002780, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bHeadshot' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_22) == 0x002788, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_78) == 0x002790, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_79) == 0x002791, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Hit) == 0x002794, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue_5) == 0x002820, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakVector_X) == 0x002828, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakVector_Y) == 0x00282C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakVector_Z) == 0x002830, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Abs_ReturnValue) == 0x002834, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x002838, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00283C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x002840, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_ApplyDamage_ReturnValue_2) == 0x002844, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_ApplyDamage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x002848, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_PreviousFloorImpactNormal) == 0x002850, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_PreviousFloorImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_PreviousFloorContactNormal) == 0x00285C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_PreviousFloorContactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_PreviousLocation) == 0x002868, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_PreviousLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_TimeDelta) == 0x002874, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_TimeDelta' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsWB_Player_Tag_1) == 0x002878, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsWB_Player_Tag_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_20) == 0x002880, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue_4) == 0x002888, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue_5) == 0x002890, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameMode_ReturnValue) == 0x002898, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsBP_Base_GM) == 0x0028A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsBP_Base_GM' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_21) == 0x0028A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimer_ReturnValue_3) == 0x0028B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue_5) == 0x0028B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_23) == 0x0028C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_130) == 0x0028C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_130' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_80) == 0x0028D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_80' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_24) == 0x0028E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x0028E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue_81) == 0x0028E9, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue_81' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bIsVehicle) == 0x0028EA, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bIsVehicle' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_103) == 0x0028EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_103' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_45) == 0x0028F4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_49) == 0x0028F5, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_46) == 0x0028F6, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue_47) == 0x0028F7, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameState_ReturnValue) == 0x0028F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_6) == 0x002900, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Get_Item) == 0x002908, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_11) == 0x002910, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsBP_Player_Character_1) == 0x002918, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsBP_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_22) == 0x002920, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Length_ReturnValue) == 0x002924, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x002928, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x002930, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsWB_Player_Tag_2) == 0x002938, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsWB_Player_Tag_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_23) == 0x002940, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_AttachToComponent_ReturnValue) == 0x002941, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_UtilityClass) == 0x002948, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_UtilityClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetTransform_ReturnValue_1) == 0x002950, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x002980, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x002981, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x002988, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x002990, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_7) == 0x002998, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetMagazineInfoPerType_Array_Element_2) == 0x00299C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetMagazineInfoPerType_Array_Element_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_12) == 0x0029A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetMagazineInfoPerType_Array_Element_3) == 0x0029B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetMagazineInfoPerType_Array_Element_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_bIsVehicle) == 0x0029BC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_bIsVehicle' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewCurrentWeapon) == 0x0029C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewCurrentWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_131) == 0x0029C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_131' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0029D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0029DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0029E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Lerp_ReturnValue_1) == 0x0029E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0029E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Lerp_ReturnValue_2) == 0x0029EC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NotifyName_104) == 0x0029F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NotifyName_104' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_13) == 0x0029F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_24) == 0x002A08, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_14) == 0x002A10, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_25) == 0x002A20, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_15) == 0x002A28, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_26) == 0x002A38, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_16) == 0x002A40, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_27) == 0x002A50, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_17) == 0x002A58, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_28) == 0x002A68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsI_UI_18) == 0x002A70, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsI_UI_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_29) == 0x002A80, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_50) == 0x002A81, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x002A90, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x002AC0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x002AC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_IsDead final
{
public:
	bool                                          bIsDead;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsDead) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_IsDead");
static_assert(sizeof(BP_PlayerCharacter_C_IsDead) == 0x000001, "Wrong size on BP_PlayerCharacter_C_IsDead");
static_assert(offsetof(BP_PlayerCharacter_C_IsDead, bIsDead) == 0x000000, "Member 'BP_PlayerCharacter_C_IsDead::bIsDead' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetCurrentWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_GetCurrentWeapon final
{
public:
	class ABP_BaseWeapon_C*                       CurrentWeapon_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_GetCurrentWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GetCurrentWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_GetCurrentWeapon) == 0x000008, "Wrong size on BP_PlayerCharacter_C_GetCurrentWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_GetCurrentWeapon, CurrentWeapon_0) == 0x000000, "Member 'BP_PlayerCharacter_C_GetCurrentWeapon::CurrentWeapon_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsAiming
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_IsAiming final
{
public:
	bool                                          bAiming_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsAiming) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_IsAiming");
static_assert(sizeof(BP_PlayerCharacter_C_IsAiming) == 0x000001, "Wrong size on BP_PlayerCharacter_C_IsAiming");
static_assert(offsetof(BP_PlayerCharacter_C_IsAiming, bAiming_0) == 0x000000, "Member 'BP_PlayerCharacter_C_IsAiming::bAiming_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UsingTPP
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_UsingTPP final
{
public:
	bool                                          bUsingTPP_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UsingTPP) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_UsingTPP");
static_assert(sizeof(BP_PlayerCharacter_C_UsingTPP) == 0x000001, "Wrong size on BP_PlayerCharacter_C_UsingTPP");
static_assert(offsetof(BP_PlayerCharacter_C_UsingTPP, bUsingTPP_0) == 0x000000, "Member 'BP_PlayerCharacter_C_UsingTPP::bUsingTPP_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterNeedsExplosives
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerCharacter_C_CharacterNeedsExplosives final
{
public:
	bool                                          bNeedsExplosives;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element;     // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_CharacterNeedsExplosives) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_CharacterNeedsExplosives");
static_assert(sizeof(BP_PlayerCharacter_C_CharacterNeedsExplosives) == 0x000014, "Wrong size on BP_PlayerCharacter_C_CharacterNeedsExplosives");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterNeedsExplosives, bNeedsExplosives) == 0x000000, "Member 'BP_PlayerCharacter_C_CharacterNeedsExplosives::bNeedsExplosives' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterNeedsExplosives, CallFunc_GetMagazineInfoPerType_Array_Element) == 0x000004, "Member 'BP_PlayerCharacter_C_CharacterNeedsExplosives::CallFunc_GetMagazineInfoPerType_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterNeedsExplosives, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_CharacterNeedsExplosives::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterNeedsExplosives, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_PlayerCharacter_C_CharacterNeedsExplosives::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterdNeedsAmmo
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerCharacter_C_CharacterdNeedsAmmo final
{
public:
	bool                                          bNeedsAmmo;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element;     // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_CharacterdNeedsAmmo) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_CharacterdNeedsAmmo");
static_assert(sizeof(BP_PlayerCharacter_C_CharacterdNeedsAmmo) == 0x000014, "Wrong size on BP_PlayerCharacter_C_CharacterdNeedsAmmo");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterdNeedsAmmo, bNeedsAmmo) == 0x000000, "Member 'BP_PlayerCharacter_C_CharacterdNeedsAmmo::bNeedsAmmo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterdNeedsAmmo, CallFunc_GetMagazineInfoPerType_Array_Element) == 0x000004, "Member 'BP_PlayerCharacter_C_CharacterdNeedsAmmo::CallFunc_GetMagazineInfoPerType_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterdNeedsAmmo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_CharacterdNeedsAmmo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterdNeedsAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_PlayerCharacter_C_CharacterdNeedsAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsCharacterFullHP
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_IsCharacterFullHP final
{
public:
	bool                                          bIsFullHp;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsCharacterFullHP) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_IsCharacterFullHP");
static_assert(sizeof(BP_PlayerCharacter_C_IsCharacterFullHP) == 0x000002, "Wrong size on BP_PlayerCharacter_C_IsCharacterFullHP");
static_assert(offsetof(BP_PlayerCharacter_C_IsCharacterFullHP, bIsFullHp) == 0x000000, "Member 'BP_PlayerCharacter_C_IsCharacterFullHP::bIsFullHp' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsCharacterFullHP, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_IsCharacterFullHP::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CheckLethalEquipment
// 0x0024 (0x0024 - 0x0000)
struct BP_PlayerCharacter_C_CheckLethalEquipment final
{
public:
	ELethalEquipment                              A;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_CheckLethalEquipment) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_CheckLethalEquipment");
static_assert(sizeof(BP_PlayerCharacter_C_CheckLethalEquipment) == 0x000024, "Wrong size on BP_PlayerCharacter_C_CheckLethalEquipment");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, A) == 0x000000, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::A' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, Temp_int_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, Temp_int_Variable_1) == 0x00000C, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, Temp_bool_Variable) == 0x000010, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, K2Node_Select_Default) == 0x000014, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckLethalEquipment, K2Node_MakeStruct_AmmoMagazines) == 0x000018, "Member 'BP_PlayerCharacter_C_CheckLethalEquipment::K2Node_MakeStruct_AmmoMagazines' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnMoveBackWard
// 0x001C (0x001C - 0x0000)
struct BP_PlayerCharacter_C_OnMoveBackWard final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputValueBackWard;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputValue;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnMoveBackWard) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnMoveBackWard");
static_assert(sizeof(BP_PlayerCharacter_C_OnMoveBackWard) == 0x00001C, "Wrong size on BP_PlayerCharacter_C_OnMoveBackWard");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveBackWard, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_OnMoveBackWard::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveBackWard, InputValueBackWard) == 0x000004, "Member 'BP_PlayerCharacter_C_OnMoveBackWard::InputValueBackWard' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveBackWard, InputValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnMoveBackWard::InputValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveBackWard, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_OnMoveBackWard::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveBackWard, CallFunc_GetActorForwardVector_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_OnMoveBackWard::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetToggleSettings
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerCharacter_C_SetToggleSettings final
{
public:
	bool                                          ToggleSprinting;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ToggleCrouching;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ToggleADSing;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetToggleSettings) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetToggleSettings");
static_assert(sizeof(BP_PlayerCharacter_C_SetToggleSettings) == 0x000003, "Wrong size on BP_PlayerCharacter_C_SetToggleSettings");
static_assert(offsetof(BP_PlayerCharacter_C_SetToggleSettings, ToggleSprinting) == 0x000000, "Member 'BP_PlayerCharacter_C_SetToggleSettings::ToggleSprinting' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetToggleSettings, ToggleCrouching) == 0x000001, "Member 'BP_PlayerCharacter_C_SetToggleSettings::ToggleCrouching' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetToggleSettings, ToggleADSing) == 0x000002, "Member 'BP_PlayerCharacter_C_SetToggleSettings::ToggleADSing' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetMotionBlur
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_SetMotionBlur final
{
public:
	float                                         MotionBlur;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetMotionBlur) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetMotionBlur");
static_assert(sizeof(BP_PlayerCharacter_C_SetMotionBlur) == 0x000004, "Wrong size on BP_PlayerCharacter_C_SetMotionBlur");
static_assert(offsetof(BP_PlayerCharacter_C_SetMotionBlur, MotionBlur) == 0x000000, "Member 'BP_PlayerCharacter_C_SetMotionBlur::MotionBlur' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetCameraFOV
// 0x000C (0x000C - 0x0000)
struct BP_PlayerCharacter_C_SetCameraFOV final
{
public:
	float                                         DefaultFOV_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetCameraFOV) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetCameraFOV");
static_assert(sizeof(BP_PlayerCharacter_C_SetCameraFOV) == 0x00000C, "Wrong size on BP_PlayerCharacter_C_SetCameraFOV");
static_assert(offsetof(BP_PlayerCharacter_C_SetCameraFOV, DefaultFOV_0) == 0x000000, "Member 'BP_PlayerCharacter_C_SetCameraFOV::DefaultFOV_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetCameraFOV, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_SetCameraFOV::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetCameraFOV, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_PlayerCharacter_C_SetCameraFOV::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetCameraFOV, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_PlayerCharacter_C_SetCameraFOV::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetCameraFOV, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_SetCameraFOV::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TopOfLadder
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_TopOfLadder final
{
public:
	bool                                          AtLadderTop_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_TopOfLadder) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_TopOfLadder");
static_assert(sizeof(BP_PlayerCharacter_C_TopOfLadder) == 0x000001, "Wrong size on BP_PlayerCharacter_C_TopOfLadder");
static_assert(offsetof(BP_PlayerCharacter_C_TopOfLadder, AtLadderTop_) == 0x000000, "Member 'BP_PlayerCharacter_C_TopOfLadder::AtLadderTop_' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoveFPPWhenCrouching
// 0x00B4 (0x00B4 - 0x0000)
struct BP_PlayerCharacter_C_MoveFPPWhenCrouching final
{
public:
	bool                                          bPickA;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_MoveFPPWhenCrouching) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_MoveFPPWhenCrouching");
static_assert(sizeof(BP_PlayerCharacter_C_MoveFPPWhenCrouching) == 0x0000B4, "Wrong size on BP_PlayerCharacter_C_MoveFPPWhenCrouching");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, bPickA) == 0x000000, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::bPickA' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_BreakVector_X) == 0x000004, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_BreakVector_Y) == 0x000008, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_BreakVector_Z) == 0x00000C, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_SelectVector_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MoveFPPWhenCrouching, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00002C, "Member 'BP_PlayerCharacter_C_MoveFPPWhenCrouching::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ToggleOnLadder
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_ToggleOnLadder final
{
public:
	bool                                          OnLadder_;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ToggleOnLadder) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ToggleOnLadder");
static_assert(sizeof(BP_PlayerCharacter_C_ToggleOnLadder) == 0x000001, "Wrong size on BP_PlayerCharacter_C_ToggleOnLadder");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleOnLadder, OnLadder_) == 0x000000, "Member 'BP_PlayerCharacter_C_ToggleOnLadder::OnLadder_' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnMoveUpLadder
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerCharacter_C_OnMoveUpLadder final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputValue;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnMoveUpLadder) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnMoveUpLadder");
static_assert(sizeof(BP_PlayerCharacter_C_OnMoveUpLadder) == 0x000040, "Wrong size on BP_PlayerCharacter_C_OnMoveUpLadder");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, InputValue) == 0x000004, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::InputValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_GetActorUpVector_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Less_FloatFloat_ReturnValue) == 0x000025, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000039, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00003B, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00003C, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003D, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveUpLadder, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'BP_PlayerCharacter_C_OnMoveUpLadder::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateKillFeed
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerCharacter_C_UpdateKillFeed final
{
public:
	class AController*                            Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_GetPlayerWithMostDamageDone_PS;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerWithMostDamageDone_DamageDone;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateKillFeed) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_UpdateKillFeed");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateKillFeed) == 0x000048, "Wrong size on BP_PlayerCharacter_C_UpdateKillFeed");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, Instigator_0) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, DmgType) == 0x000008, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::DmgType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_Map_Remove_ReturnValue) == 0x000011, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000014, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_GetPlayerWithMostDamageDone_PS) == 0x000018, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_GetPlayerWithMostDamageDone_PS' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_GetPlayerWithMostDamageDone_DamageDone) == 0x000020, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_GetPlayerWithMostDamageDone_DamageDone' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, K2Node_DynamicCast_AsI_Player_State) == 0x000028, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x00003C, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateKillFeed, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_UpdateKillFeed::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetPlayerWithMostDamageDone
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerCharacter_C_GetPlayerWithMostDamageDone final
{
public:
	class APlayerState*                           PS;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageDone;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GetPlayerWithMostDamageDone");
static_assert(sizeof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone) == 0x000040, "Wrong size on BP_PlayerCharacter_C_GetPlayerWithMostDamageDone");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, PS) == 0x000000, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::PS' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, DamageDone) == 0x000008, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::DamageDone' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, CallFunc_Map_Values_Values) == 0x000020, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000030, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, CallFunc_MaxOfFloatArray_MaxValue) == 0x000034, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerWithMostDamageDone, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerCharacter_C_GetPlayerWithMostDamageDone::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddToAssistList
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerCharacter_C_AddToAssistList final
{
public:
	class AController*                            Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageDone;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageThreshold;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           PS;                                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0040(0x0010)(ReferenceParm)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddToAssistList) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_AddToAssistList");
static_assert(sizeof(BP_PlayerCharacter_C_AddToAssistList) == 0x000058, "Wrong size on BP_PlayerCharacter_C_AddToAssistList");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, Instigator_0) == 0x000000, "Member 'BP_PlayerCharacter_C_AddToAssistList::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, DamageDone) == 0x000008, "Member 'BP_PlayerCharacter_C_AddToAssistList::DamageDone' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, DamageThreshold) == 0x00000C, "Member 'BP_PlayerCharacter_C_AddToAssistList::DamageThreshold' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, Damage) == 0x000010, "Member 'BP_PlayerCharacter_C_AddToAssistList::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, PS) == 0x000018, "Member 'BP_PlayerCharacter_C_AddToAssistList::PS' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000022, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_Array_Find_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_Map_Contains_ReturnValue) == 0x00003C, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_Map_Values_Values) == 0x000040, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddToAssistList, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_AddToAssistList::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetShooting
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_SetShooting final
{
public:
	bool                                          Shooting;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetShooting) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetShooting");
static_assert(sizeof(BP_PlayerCharacter_C_SetShooting) == 0x000002, "Wrong size on BP_PlayerCharacter_C_SetShooting");
static_assert(offsetof(BP_PlayerCharacter_C_SetShooting, Shooting) == 0x000000, "Member 'BP_PlayerCharacter_C_SetShooting::Shooting' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetShooting, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_SetShooting::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsUsingPrimary
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_IsUsingPrimary final
{
public:
	bool                                          bUsingPrimary;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsUsingPrimary) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_IsUsingPrimary");
static_assert(sizeof(BP_PlayerCharacter_C_IsUsingPrimary) == 0x000002, "Wrong size on BP_PlayerCharacter_C_IsUsingPrimary");
static_assert(offsetof(BP_PlayerCharacter_C_IsUsingPrimary, bUsingPrimary) == 0x000000, "Member 'BP_PlayerCharacter_C_IsUsingPrimary::bUsingPrimary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsUsingPrimary, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_IsUsingPrimary::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.EquipMeleeWeapon
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCharacter_C_EquipMeleeWeapon final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponKnife_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_EquipMeleeWeapon) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_EquipMeleeWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_EquipMeleeWeapon) == 0x000050, "Wrong size on BP_PlayerCharacter_C_EquipMeleeWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_EquipMeleeWeapon, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_EquipMeleeWeapon::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipMeleeWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_EquipMeleeWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipMeleeWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_EquipMeleeWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipMeleeWeapon, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_EquipMeleeWeapon::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipMeleeWeapon, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000041, "Member 'BP_PlayerCharacter_C_EquipMeleeWeapon::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.StopCurrentWeaponReload
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_StopCurrentWeaponReload final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_StopCurrentWeaponReload) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_StopCurrentWeaponReload");
static_assert(sizeof(BP_PlayerCharacter_C_StopCurrentWeaponReload) == 0x000018, "Wrong size on BP_PlayerCharacter_C_StopCurrentWeaponReload");
static_assert(offsetof(BP_PlayerCharacter_C_StopCurrentWeaponReload, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_StopCurrentWeaponReload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_StopCurrentWeaponReload, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_StopCurrentWeaponReload::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_StopCurrentWeaponReload, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_PlayerCharacter_C_StopCurrentWeaponReload::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GivePointsTo Instigator
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCharacter_C_GivePointsTo_Instigator final
{
public:
	class AController*                            Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Points;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_GivePointsTo_Instigator) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GivePointsTo_Instigator");
static_assert(sizeof(BP_PlayerCharacter_C_GivePointsTo_Instigator) == 0x000030, "Wrong size on BP_PlayerCharacter_C_GivePointsTo_Instigator");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, Instigator_0) == 0x000000, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, Points) == 0x000008, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::Points' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x00000C, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, K2Node_DynamicCast_AsI_Player_State) == 0x000010, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x000024, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GivePointsTo_Instigator, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_PlayerCharacter_C_GivePointsTo_Instigator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateHUDTeamIcon
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerCharacter_C_UpdateHUDTeamIcon final
{
public:
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_GetTeamIcon_Icon;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateHUDTeamIcon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_UpdateHUDTeamIcon");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateHUDTeamIcon) == 0x000040, "Wrong size on BP_PlayerCharacter_C_UpdateHUDTeamIcon");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, K2Node_DynamicCast_AsI_UI) == 0x000008, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, K2Node_DynamicCast_AsBP_Base_GS) == 0x000028, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateHUDTeamIcon, CallFunc_GetTeamIcon_Icon) == 0x000038, "Member 'BP_PlayerCharacter_C_UpdateHUDTeamIcon::CallFunc_GetTeamIcon_Icon' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReduceExplosiveAmmo
// 0x003C (0x003C - 0x0000)
struct BP_PlayerCharacter_C_ReduceExplosiveAmmo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInfiniteExplosives_bInfiniteExplosives; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         CallFunc_Array_Get_Item;                           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReduceExplosiveAmmo) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_ReduceExplosiveAmmo");
static_assert(sizeof(BP_PlayerCharacter_C_ReduceExplosiveAmmo) == 0x00003C, "Wrong size on BP_PlayerCharacter_C_ReduceExplosiveAmmo");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_HasInfiniteExplosives_bInfiniteExplosives) == 0x00000C, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_HasInfiniteExplosives_bInfiniteExplosives' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_Clamp_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReduceExplosiveAmmo, K2Node_MakeStruct_AmmoMagazines) == 0x000030, "Member 'BP_PlayerCharacter_C_ReduceExplosiveAmmo::K2Node_MakeStruct_AmmoMagazines' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetPlayerHP
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_GetPlayerHP final
{
public:
	class ABP_BaseCharacter_C*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HP;                                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_GetPlayerHP) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GetPlayerHP");
static_assert(sizeof(BP_PlayerCharacter_C_GetPlayerHP) == 0x000020, "Wrong size on BP_PlayerCharacter_C_GetPlayerHP");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerHP, Character) == 0x000000, "Member 'BP_PlayerCharacter_C_GetPlayerHP::Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerHP, HP) == 0x000008, "Member 'BP_PlayerCharacter_C_GetPlayerHP::HP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerHP, K2Node_DynamicCast_AsBP_Player_Character) == 0x000010, "Member 'BP_PlayerCharacter_C_GetPlayerHP::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetPlayerHP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerCharacter_C_GetPlayerHP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SimulatePhysicsOnWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_SimulatePhysicsOnWeapon final
{
public:
	class ABP_BaseWeapon_C*                       Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulate;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_SimulatePhysicsOnWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon) == 0x000010, "Wrong size on BP_PlayerCharacter_C_SimulatePhysicsOnWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon, Weapon) == 0x000000, "Member 'BP_PlayerCharacter_C_SimulatePhysicsOnWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon, bSimulate) == 0x000008, "Member 'BP_PlayerCharacter_C_SimulatePhysicsOnWeapon::bSimulate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon, Temp_bool_Variable) == 0x000009, "Member 'BP_PlayerCharacter_C_SimulatePhysicsOnWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon, Temp_byte_Variable) == 0x00000A, "Member 'BP_PlayerCharacter_C_SimulatePhysicsOnWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon, Temp_byte_Variable_1) == 0x00000B, "Member 'BP_PlayerCharacter_C_SimulatePhysicsOnWeapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SimulatePhysicsOnWeapon, K2Node_Select_Default) == 0x00000C, "Member 'BP_PlayerCharacter_C_SimulatePhysicsOnWeapon::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AttachWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_AttachWeapon final
{
public:
	class ABP_BaseWeapon_C*                       WeaponCreated;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_AttachWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_AttachWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_AttachWeapon) == 0x000010, "Wrong size on BP_PlayerCharacter_C_AttachWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_AttachWeapon, WeaponCreated) == 0x000000, "Member 'BP_PlayerCharacter_C_AttachWeapon::WeaponCreated' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AttachWeapon, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_AttachWeapon::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AttachWeapon, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000009, "Member 'BP_PlayerCharacter_C_AttachWeapon::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ShowWeapon
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_ShowWeapon final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ShowWeapon) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ShowWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_ShowWeapon) == 0x000001, "Wrong size on BP_PlayerCharacter_C_ShowWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_ShowWeapon, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_ShowWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.EndInteract
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCharacter_C_EndInteract final
{
public:
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_EndInteract) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_EndInteract");
static_assert(sizeof(BP_PlayerCharacter_C_EndInteract) == 0x000030, "Wrong size on BP_PlayerCharacter_C_EndInteract");
static_assert(offsetof(BP_PlayerCharacter_C_EndInteract, K2Node_DynamicCast_AsI_UI) == 0x000000, "Member 'BP_PlayerCharacter_C_EndInteract::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EndInteract, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerCharacter_C_EndInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EndInteract, K2Node_DynamicCast_AsI_Interactive) == 0x000018, "Member 'BP_PlayerCharacter_C_EndInteract::K2Node_DynamicCast_AsI_Interactive' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EndInteract, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PlayerCharacter_C_EndInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.BeginInteract
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCharacter_C_BeginInteract final
{
public:
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInteractTime_InteractTime;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_BeginInteract) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_BeginInteract");
static_assert(sizeof(BP_PlayerCharacter_C_BeginInteract) == 0x000030, "Wrong size on BP_PlayerCharacter_C_BeginInteract");
static_assert(offsetof(BP_PlayerCharacter_C_BeginInteract, K2Node_DynamicCast_AsI_UI) == 0x000000, "Member 'BP_PlayerCharacter_C_BeginInteract::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BeginInteract, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerCharacter_C_BeginInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BeginInteract, K2Node_DynamicCast_AsI_Interactive) == 0x000018, "Member 'BP_PlayerCharacter_C_BeginInteract::K2Node_DynamicCast_AsI_Interactive' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BeginInteract, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PlayerCharacter_C_BeginInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BeginInteract, CallFunc_GetInteractTime_InteractTime) == 0x00002C, "Member 'BP_PlayerCharacter_C_BeginInteract::CallFunc_GetInteractTime_InteractTime' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddAmmoType
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerCharacter_C_AddAmmoType final
{
public:
	EAmmoType                                     AmmoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MagazineBullets;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoType                                     Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element;     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_Array_Get_Item;                           // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddAmmoType) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_AddAmmoType");
static_assert(sizeof(BP_PlayerCharacter_C_AddAmmoType) == 0x000070, "Wrong size on BP_PlayerCharacter_C_AddAmmoType");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, AmmoType) == 0x000000, "Member 'BP_PlayerCharacter_C_AddAmmoType::AmmoType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, MagazineBullets) == 0x000004, "Member 'BP_PlayerCharacter_C_AddAmmoType::MagazineBullets' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PlayerCharacter_C_AddAmmoType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerCharacter_C_AddAmmoType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, Temp_byte_Variable) == 0x000014, "Member 'BP_PlayerCharacter_C_AddAmmoType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, K2Node_DynamicCast_AsI_UI) == 0x000018, "Member 'BP_PlayerCharacter_C_AddAmmoType::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerCharacter_C_AddAmmoType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_GetMagazineInfoPerType_Array_Element) == 0x00002C, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_GetMagazineInfoPerType_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Less_IntInt_ReturnValue_1) == 0x000049, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, Temp_int_Variable) == 0x00004C, "Member 'BP_PlayerCharacter_C_AddAmmoType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, K2Node_Select_Default) == 0x000054, "Member 'BP_PlayerCharacter_C_AddAmmoType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, CallFunc_Clamp_ReturnValue) == 0x00005C, "Member 'BP_PlayerCharacter_C_AddAmmoType::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmoType, K2Node_MakeStruct_AmmoMagazines) == 0x000060, "Member 'BP_PlayerCharacter_C_AddAmmoType::K2Node_MakeStruct_AmmoMagazines' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PawnUnpossess
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_PawnUnpossess final
{
public:
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_PawnUnpossess) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_PawnUnpossess");
static_assert(sizeof(BP_PlayerCharacter_C_PawnUnpossess) == 0x000018, "Wrong size on BP_PlayerCharacter_C_PawnUnpossess");
static_assert(offsetof(BP_PlayerCharacter_C_PawnUnpossess, CallFunc_IsGameOver_bGameOver) == 0x000000, "Member 'BP_PlayerCharacter_C_PawnUnpossess::CallFunc_IsGameOver_bGameOver' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnUnpossess, CallFunc_GetAIController_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_PawnUnpossess::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnUnpossess, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_PawnUnpossess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnUnpossess, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PlayerCharacter_C_PawnUnpossess::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetMovementSpeedOnAiming
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_SetMovementSpeedOnAiming final
{
public:
	bool                                          bAiming_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetMovementSpeedOnAiming) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetMovementSpeedOnAiming");
static_assert(sizeof(BP_PlayerCharacter_C_SetMovementSpeedOnAiming) == 0x000008, "Wrong size on BP_PlayerCharacter_C_SetMovementSpeedOnAiming");
static_assert(offsetof(BP_PlayerCharacter_C_SetMovementSpeedOnAiming, bAiming_0) == 0x000000, "Member 'BP_PlayerCharacter_C_SetMovementSpeedOnAiming::bAiming_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetMovementSpeedOnAiming, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_SetMovementSpeedOnAiming::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Damage Player
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerCharacter_C_Damage_Player final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DmgType;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Instigator_0;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DmgCauser;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfInficted;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TakeDamage_bDead;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TakeDamage_DamageToDo;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Damage_Player) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Damage_Player");
static_assert(sizeof(BP_PlayerCharacter_C_Damage_Player) == 0x000078, "Wrong size on BP_PlayerCharacter_C_Damage_Player");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, Damage) == 0x000000, "Member 'BP_PlayerCharacter_C_Damage_Player::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, DmgType) == 0x000008, "Member 'BP_PlayerCharacter_C_Damage_Player::DmgType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, Instigator_0) == 0x000010, "Member 'BP_PlayerCharacter_C_Damage_Player::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, DmgCauser) == 0x000018, "Member 'BP_PlayerCharacter_C_Damage_Player::DmgCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, bSelfInficted) == 0x000020, "Member 'BP_PlayerCharacter_C_Damage_Player::bSelfInficted' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, K2Node_DynamicCast_AsI_Player_State) == 0x000028, "Member 'BP_PlayerCharacter_C_Damage_Player::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerCharacter_C_Damage_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x00003C, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, K2Node_DynamicCast_AsI_Player_State_1) == 0x000040, "Member 'BP_PlayerCharacter_C_Damage_Player::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PlayerCharacter_C_Damage_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x000054, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_TakeDamage_bDead) == 0x000069, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_TakeDamage_bDead' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_TakeDamage_DamageToDo) == 0x00006C, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_TakeDamage_DamageToDo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Damage_Player, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_PlayerCharacter_C_Damage_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.HealPlayer
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerCharacter_C_HealPlayer final
{
public:
	float                                         HealAmount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HPToHeal;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_HealPlayer) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_HealPlayer");
static_assert(sizeof(BP_PlayerCharacter_C_HealPlayer) == 0x000058, "Wrong size on BP_PlayerCharacter_C_HealPlayer");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, HealAmount) == 0x000000, "Member 'BP_PlayerCharacter_C_HealPlayer::HealAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, Instigator_0) == 0x000008, "Member 'BP_PlayerCharacter_C_HealPlayer::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, HPToHeal) == 0x000010, "Member 'BP_PlayerCharacter_C_HealPlayer::HPToHeal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, Temp_bool_Variable) == 0x000014, "Member 'BP_PlayerCharacter_C_HealPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000018, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, K2Node_DynamicCast_AsI_Player_State) == 0x000020, "Member 'BP_PlayerCharacter_C_HealPlayer::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerCharacter_C_HealPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x000034, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, K2Node_Select_Default) == 0x00004C, "Member 'BP_PlayerCharacter_C_HealPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HealPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_HealPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ResetOrientationAndMovementMode
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_ResetOrientationAndMovementMode final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ResetOrientationAndMovementMode) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_ResetOrientationAndMovementMode");
static_assert(sizeof(BP_PlayerCharacter_C_ResetOrientationAndMovementMode) == 0x000010, "Wrong size on BP_PlayerCharacter_C_ResetOrientationAndMovementMode");
static_assert(offsetof(BP_PlayerCharacter_C_ResetOrientationAndMovementMode, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_ResetOrientationAndMovementMode::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ResetOrientationAndMovementMode, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_ResetOrientationAndMovementMode::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DestroyPrimaryWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_DestroyPrimaryWeapon final
{
public:
	class ABP_PlayerCharacter_C*                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_DestroyPrimaryWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_DestroyPrimaryWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_DestroyPrimaryWeapon) == 0x000010, "Wrong size on BP_PlayerCharacter_C_DestroyPrimaryWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyPrimaryWeapon, Pawn) == 0x000000, "Member 'BP_PlayerCharacter_C_DestroyPrimaryWeapon::Pawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyPrimaryWeapon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_DestroyPrimaryWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyPrimaryWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_PlayerCharacter_C_DestroyPrimaryWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetName
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerCharacter_C_GetName final
{
public:
	class ABP_PlayerState_C*                      PlayerState_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0050(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
};
static_assert(alignof(BP_PlayerCharacter_C_GetName) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GetName");
static_assert(sizeof(BP_PlayerCharacter_C_GetName) == 0x000088, "Wrong size on BP_PlayerCharacter_C_GetName");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, PlayerState_0) == 0x000000, "Member 'BP_PlayerCharacter_C_GetName::PlayerState_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_GetName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, Temp_bool_Variable) == 0x000020, "Member 'BP_PlayerCharacter_C_GetName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, CallFunc_GetPlayerName_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_GetName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_GetName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000050, "Member 'BP_PlayerCharacter_C_GetName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, CallFunc_TextIsEmpty_ReturnValue) == 0x000068, "Member 'BP_PlayerCharacter_C_GetName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetName, K2Node_Select_Default) == 0x000070, "Member 'BP_PlayerCharacter_C_GetName::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateSpringArmPosition
// 0x013C (0x013C - 0x0000)
struct BP_PlayerCharacter_C_UpdateSpringArmPosition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateSpringArmPosition) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_UpdateSpringArmPosition");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateSpringArmPosition) == 0x00013C, "Wrong size on BP_PlayerCharacter_C_UpdateSpringArmPosition");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, Temp_float_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, K2Node_Select_Default) == 0x000008, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00002C, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSpringArmPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000B4, "Member 'BP_PlayerCharacter_C_UpdateSpringArmPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateArmsVisibility
// 0x0005 (0x0005 - 0x0000)
struct BP_PlayerCharacter_C_UpdateArmsVisibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateArmsVisibility) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_UpdateArmsVisibility");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateArmsVisibility) == 0x000005, "Wrong size on BP_PlayerCharacter_C_UpdateArmsVisibility");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateArmsVisibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateArmsVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateArmsVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_UpdateArmsVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateArmsVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_PlayerCharacter_C_UpdateArmsVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateArmsVisibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'BP_PlayerCharacter_C_UpdateArmsVisibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateArmsVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'BP_PlayerCharacter_C_UpdateArmsVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DestroyWeapons&AttachedActors
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_DestroyWeapons_AttachedActors final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_DestroyWeapons_AttachedActors) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_DestroyWeapons_AttachedActors");
static_assert(sizeof(BP_PlayerCharacter_C_DestroyWeapons_AttachedActors) == 0x000004, "Wrong size on BP_PlayerCharacter_C_DestroyWeapons_AttachedActors");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyWeapons_AttachedActors, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_DestroyWeapons_AttachedActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyWeapons_AttachedActors, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerCharacter_C_DestroyWeapons_AttachedActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyWeapons_AttachedActors, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_PlayerCharacter_C_DestroyWeapons_AttachedActors::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DestroyWeapons_AttachedActors, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_PlayerCharacter_C_DestroyWeapons_AttachedActors::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PawnDeath
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerCharacter_C_PawnDeath final
{
public:
	class FText                                   KillerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         KillerHealth;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  KillerClass;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_PawnDeath) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_PawnDeath");
static_assert(sizeof(BP_PlayerCharacter_C_PawnDeath) == 0x000060, "Wrong size on BP_PlayerCharacter_C_PawnDeath");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, KillerName) == 0x000000, "Member 'BP_PlayerCharacter_C_PawnDeath::KillerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, KillerHealth) == 0x000018, "Member 'BP_PlayerCharacter_C_PawnDeath::KillerHealth' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, KillerClass) == 0x00001C, "Member 'BP_PlayerCharacter_C_PawnDeath::KillerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, DamageType) == 0x000020, "Member 'BP_PlayerCharacter_C_PawnDeath::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000028, "Member 'BP_PlayerCharacter_C_PawnDeath::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerCharacter_C_PawnDeath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_PawnDeath::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000048, "Member 'BP_PlayerCharacter_C_PawnDeath::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PlayerCharacter_C_PawnDeath::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnDeath, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_PawnDeath::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ChangeFiringMode
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_ChangeFiringMode final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ChangeFiringMode) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ChangeFiringMode");
static_assert(sizeof(BP_PlayerCharacter_C_ChangeFiringMode) == 0x000020, "Wrong size on BP_PlayerCharacter_C_ChangeFiringMode");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_Not_PreBool_ReturnValue_2) == 0x000018, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ChangeFiringMode, CallFunc_BooleanAND_ReturnValue_2) == 0x00001B, "Member 'BP_PlayerCharacter_C_ChangeFiringMode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnAiming
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_OnAiming final
{
public:
	bool                                          bAiming_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnAiming) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_OnAiming");
static_assert(sizeof(BP_PlayerCharacter_C_OnAiming) == 0x000001, "Wrong size on BP_PlayerCharacter_C_OnAiming");
static_assert(offsetof(BP_PlayerCharacter_C_OnAiming, bAiming_0) == 0x000000, "Member 'BP_PlayerCharacter_C_OnAiming::bAiming_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnMoveRight
// 0x001C (0x001C - 0x0000)
struct BP_PlayerCharacter_C_OnMoveRight final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnMoveRight) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnMoveRight");
static_assert(sizeof(BP_PlayerCharacter_C_OnMoveRight) == 0x00001C, "Wrong size on BP_PlayerCharacter_C_OnMoveRight");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveRight, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_OnMoveRight::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveRight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_OnMoveRight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveRight, CallFunc_GetActorRightVector_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnMoveRight::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveRight, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_OnMoveRight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveRight, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_OnMoveRight::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnMoveForward
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCharacter_C_OnMoveForward final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputValue;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnMoveForward) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnMoveForward");
static_assert(sizeof(BP_PlayerCharacter_C_OnMoveForward) == 0x000030, "Wrong size on BP_PlayerCharacter_C_OnMoveForward");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_OnMoveForward::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, InputValue) == 0x000004, "Member 'BP_PlayerCharacter_C_OnMoveForward::InputValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_Less_FloatFloat_ReturnValue) == 0x000015, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_VSize_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000029, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00002B, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnMoveForward, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'BP_PlayerCharacter_C_OnMoveForward::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnLookUp
// 0x002C (0x002C - 0x0000)
struct BP_PlayerCharacter_C_OnLookUp final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnLookUp) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnLookUp");
static_assert(sizeof(BP_PlayerCharacter_C_OnLookUp) == 0x00002C, "Wrong size on BP_PlayerCharacter_C_OnLookUp");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_OnLookUp::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, Temp_float_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_OnLookUp::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00000D, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000E, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000F, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, Temp_bool_Variable) == 0x000010, "Member 'BP_PlayerCharacter_C_OnLookUp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, Temp_bool_Variable_1) == 0x000011, "Member 'BP_PlayerCharacter_C_OnLookUp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, K2Node_Select_Default) == 0x000014, "Member 'BP_PlayerCharacter_C_OnLookUp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, K2Node_Select_Default_1) == 0x000024, "Member 'BP_PlayerCharacter_C_OnLookUp::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnLookUp, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_PlayerCharacter_C_OnLookUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnTurn
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerCharacter_C_OnTurn final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnTurn) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnTurn");
static_assert(sizeof(BP_PlayerCharacter_C_OnTurn) == 0x000014, "Wrong size on BP_PlayerCharacter_C_OnTurn");
static_assert(offsetof(BP_PlayerCharacter_C_OnTurn, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_OnTurn::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnTurn, Temp_bool_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_OnTurn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnTurn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnTurn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnTurn, K2Node_Select_Default) == 0x00000C, "Member 'BP_PlayerCharacter_C_OnTurn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnTurn, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_OnTurn::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Spectate
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerCharacter_C_Spectate final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Controller_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PawnLocal;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            ControllerLocal;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SpectatorBase_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Spectate) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_Spectate");
static_assert(sizeof(BP_PlayerCharacter_C_Spectate) == 0x000080, "Wrong size on BP_PlayerCharacter_C_Spectate");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, Pawn) == 0x000000, "Member 'BP_PlayerCharacter_C_Spectate::Pawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, Controller_0) == 0x000008, "Member 'BP_PlayerCharacter_C_Spectate::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, PawnLocal) == 0x000010, "Member 'BP_PlayerCharacter_C_Spectate::PawnLocal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, ControllerLocal) == 0x000018, "Member 'BP_PlayerCharacter_C_Spectate::ControllerLocal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'BP_PlayerCharacter_C_Spectate::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerCharacter_C_Spectate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Spectate, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_PlayerCharacter_C_Spectate::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PawnInit
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerCharacter_C_PawnInit final
{
public:
	class AController*                            ControllerLocal;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseWeapon_C*                       Weapon;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Dynamic_Crosshair_C*                CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_PawnInit) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_PawnInit");
static_assert(sizeof(BP_PlayerCharacter_C_PawnInit) == 0x000070, "Wrong size on BP_PlayerCharacter_C_PawnInit");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, ControllerLocal) == 0x000000, "Member 'BP_PlayerCharacter_C_PawnInit::ControllerLocal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, Weapon) == 0x000008, "Member 'BP_PlayerCharacter_C_PawnInit::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000018, "Member 'BP_PlayerCharacter_C_PawnInit::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerCharacter_C_PawnInit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, K2Node_DynamicCast_AsI_UI) == 0x000028, "Member 'BP_PlayerCharacter_C_PawnInit::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PlayerCharacter_C_PawnInit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_GetPlayerController_ReturnValue_1) == 0x000040, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_Create_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_GetIsEnabled_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_K2_SetTimer_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PawnInit, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000068, "Member 'BP_PlayerCharacter_C_PawnInit::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnDead
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerCharacter_C_OnDead final
{
public:
	class ABP_PlayerCharacter_C*                  DeadActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatorControler;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetKillerInfo_Name;                       // 0x0070(0x0018)()
	EPlayerClass                                  CallFunc_GetKillerInfo_Class;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetKillerInfo_HP;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnDead) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnDead");
static_assert(sizeof(BP_PlayerCharacter_C_OnDead) == 0x0000A8, "Wrong size on BP_PlayerCharacter_C_OnDead");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, DeadActor) == 0x000000, "Member 'BP_PlayerCharacter_C_OnDead::DeadActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, InstigatorControler) == 0x000008, "Member 'BP_PlayerCharacter_C_OnDead::InstigatorControler' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, DmgType) == 0x000010, "Member 'BP_PlayerCharacter_C_OnDead::DmgType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, DamageCauser) == 0x000018, "Member 'BP_PlayerCharacter_C_OnDead::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, K2Node_DynamicCast_AsBP_Player_Character) == 0x000030, "Member 'BP_PlayerCharacter_C_OnDead::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerCharacter_C_OnDead::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, K2Node_DynamicCast_AsBP_Base_GS) == 0x000048, "Member 'BP_PlayerCharacter_C_OnDead::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_PlayerCharacter_C_OnDead::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000054, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetController_ReturnValue_1) == 0x000068, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetKillerInfo_Name) == 0x000070, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetKillerInfo_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetKillerInfo_Class) == 0x000088, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetKillerInfo_Class' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, CallFunc_GetKillerInfo_HP) == 0x00008C, "Member 'BP_PlayerCharacter_C_OnDead::CallFunc_GetKillerInfo_HP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, K2Node_DynamicCast_AsI_Player_State) == 0x000090, "Member 'BP_PlayerCharacter_C_OnDead::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDead, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_PlayerCharacter_C_OnDead::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnPossesedPawn
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_OnPossesedPawn final
{
public:
	class AController*                            Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            LocalControllerRef;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnPossesedPawn) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnPossesedPawn");
static_assert(sizeof(BP_PlayerCharacter_C_OnPossesedPawn) == 0x000020, "Wrong size on BP_PlayerCharacter_C_OnPossesedPawn");
static_assert(offsetof(BP_PlayerCharacter_C_OnPossesedPawn, Controller_0) == 0x000000, "Member 'BP_PlayerCharacter_C_OnPossesedPawn::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnPossesedPawn, LocalControllerRef) == 0x000008, "Member 'BP_PlayerCharacter_C_OnPossesedPawn::LocalControllerRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnPossesedPawn, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000010, "Member 'BP_PlayerCharacter_C_OnPossesedPawn::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnPossesedPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerCharacter_C_OnPossesedPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetKillerInfo
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerCharacter_C_GetKillerInfo final
{
public:
	class AController*                            Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0018)(Parm, OutParm)
	EPlayerClass                                  Class_0;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HP;                                                // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponNames                                  KillerWeaponName;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  InstigatorClass;                                   // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatorRef;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseCharacter_C*                    K2Node_DynamicCast_AsBP_Base_Character;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerHP_HP;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A8(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
};
static_assert(alignof(BP_PlayerCharacter_C_GetKillerInfo) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GetKillerInfo");
static_assert(sizeof(BP_PlayerCharacter_C_GetKillerInfo) == 0x0000E0, "Wrong size on BP_PlayerCharacter_C_GetKillerInfo");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, Instigator_0) == 0x000000, "Member 'BP_PlayerCharacter_C_GetKillerInfo::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, Name_0) == 0x000008, "Member 'BP_PlayerCharacter_C_GetKillerInfo::Name_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, Class_0) == 0x000020, "Member 'BP_PlayerCharacter_C_GetKillerInfo::Class_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, HP) == 0x000024, "Member 'BP_PlayerCharacter_C_GetKillerInfo::HP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, KillerWeaponName) == 0x000028, "Member 'BP_PlayerCharacter_C_GetKillerInfo::KillerWeaponName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, InstigatorClass) == 0x000029, "Member 'BP_PlayerCharacter_C_GetKillerInfo::InstigatorClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, InstigatorRef) == 0x000030, "Member 'BP_PlayerCharacter_C_GetKillerInfo::InstigatorRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000048, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_DynamicCast_AsBP_Base_Character) == 0x000058, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_DynamicCast_AsBP_Base_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_GetPlayerHP_HP) == 0x000064, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_GetPlayerHP_HP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, Temp_bool_Variable) == 0x000068, "Member 'BP_PlayerCharacter_C_GetKillerInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_DynamicCast_AsBP_Player_State) == 0x000070, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_GetPlayerName_ReturnValue) == 0x000080, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A8, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x0000C0, "Member 'BP_PlayerCharacter_C_GetKillerInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_GetKillerInfo, K2Node_Select_Default) == 0x0000C8, "Member 'BP_PlayerCharacter_C_GetKillerInfo::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Crouching
// 0x000C (0x000C - 0x0000)
struct BP_PlayerCharacter_C_Crouching final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Crouching) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_Crouching");
static_assert(sizeof(BP_PlayerCharacter_C_Crouching) == 0x00000C, "Wrong size on BP_PlayerCharacter_C_Crouching");
static_assert(offsetof(BP_PlayerCharacter_C_Crouching, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_Crouching::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Crouching, K2Node_Select_Default) == 0x000004, "Member 'BP_PlayerCharacter_C_Crouching::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Crouching, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_Crouching::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RefillAmmo
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCharacter_C_RefillAmmo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoMagazines                         CallFunc_GetMagazineInfoPerType_Array_Element;     // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_Array_Get_Item;                           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_RefillAmmo) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_RefillAmmo");
static_assert(sizeof(BP_PlayerCharacter_C_RefillAmmo) == 0x000050, "Wrong size on BP_PlayerCharacter_C_RefillAmmo");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_RefillAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_RefillAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, K2Node_DynamicCast_AsI_UI) == 0x000010, "Member 'BP_PlayerCharacter_C_RefillAmmo::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerCharacter_C_RefillAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_GetMagazineInfoPerType_Array_Element) == 0x000024, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_GetMagazineInfoPerType_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, K2Node_MakeStruct_AmmoMagazines) == 0x000040, "Member 'BP_PlayerCharacter_C_RefillAmmo::K2Node_MakeStruct_AmmoMagazines' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RefillAmmo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004D, "Member 'BP_PlayerCharacter_C_RefillAmmo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.On DamageTaken
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCharacter_C_On_DamageTaken final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatorController;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfInficted;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_On_DamageTaken) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_On_DamageTaken");
static_assert(sizeof(BP_PlayerCharacter_C_On_DamageTaken) == 0x000030, "Wrong size on BP_PlayerCharacter_C_On_DamageTaken");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, Damage) == 0x000000, "Member 'BP_PlayerCharacter_C_On_DamageTaken::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, DamageType) == 0x000008, "Member 'BP_PlayerCharacter_C_On_DamageTaken::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, InstigatorController) == 0x000010, "Member 'BP_PlayerCharacter_C_On_DamageTaken::InstigatorController' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, DamageCauser) == 0x000018, "Member 'BP_PlayerCharacter_C_On_DamageTaken::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, bSelfInficted) == 0x000020, "Member 'BP_PlayerCharacter_C_On_DamageTaken::bSelfInficted' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_PlayerCharacter_C_On_DamageTaken::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, CallFunc_IsGameOver_bGameOver) == 0x000022, "Member 'BP_PlayerCharacter_C_On_DamageTaken::CallFunc_IsGameOver_bGameOver' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_On_DamageTaken::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_On_DamageTaken, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_On_DamageTaken::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ApplySelectedPerk
// 0x0074 (0x0074 - 0x0000)
struct BP_PlayerCharacter_C_ApplySelectedPerk final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAmmoType                                     Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_Array_Get_Item;                           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines_1;                 // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ApplySelectedPerk) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_ApplySelectedPerk");
static_assert(sizeof(BP_PlayerCharacter_C_ApplySelectedPerk) == 0x000074, "Wrong size on BP_PlayerCharacter_C_ApplySelectedPerk");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_1) == 0x000004, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_2) == 0x000008, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_3) == 0x00000C, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_4) == 0x000010, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_5) == 0x000014, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_6) == 0x000018, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_7) == 0x00001C, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_8) == 0x000020, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, K2Node_MakeStruct_AmmoMagazines) == 0x000024, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::K2Node_MakeStruct_AmmoMagazines' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Variable_9) == 0x000034, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_byte_Variable) == 0x000039, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, K2Node_Select_Default) == 0x000050, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000054, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, K2Node_MakeStruct_AmmoMagazines_1) == 0x000060, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::K2Node_MakeStruct_AmmoMagazines_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ApplySelectedPerk, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_PlayerCharacter_C_ApplySelectedPerk::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CheckForInteractable
// 0x0268 (0x0268 - 0x0000)
struct BP_PlayerCharacter_C_CheckForInteractable final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI;                         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIUI_C>                K2Node_DynamicCast_AsI_UI_1;                       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_1;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_2;              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19F[0x1];                                      // 0x019F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_3;              // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescription_Description;               // 0x0238(0x0018)()
	TScriptInterface<class IIInteractive_C>       K2Node_DynamicCast_AsI_Interactive_4;              // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToInteract_bFailure;                   // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_CheckForInteractable) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_CheckForInteractable");
static_assert(sizeof(BP_PlayerCharacter_C_CheckForInteractable) == 0x000268, "Wrong size on BP_PlayerCharacter_C_CheckForInteractable");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_CheckForInteractable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, Temp_object_Variable) == 0x000008, "Member 'BP_PlayerCharacter_C_CheckForInteractable::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_UI) == 0x000018, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_UI' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_UI_1) == 0x000030, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_UI_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_Interactive) == 0x000048, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_Interactive' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005A, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_Interactive_1) == 0x000060, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_Interactive_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_Interactive_2) == 0x000078, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_Interactive_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000098, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_IsValid_ReturnValue_2) == 0x0000A1, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_GetCameraLocation_ReturnValue) == 0x0000A4, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000B0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000BC, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_VSize_ReturnValue) == 0x0000D4, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_GetCameraLocation_ReturnValue_1) == 0x0000D8, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E4, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_Select_Default) == 0x0000FC, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000108, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_LineTraceSingle_OutHit) == 0x000114, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_LineTraceSingle_ReturnValue) == 0x00019C, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_bBlockingHit) == 0x00019D, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_bInitialOverlap) == 0x00019E, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_Time) == 0x0001A0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_Distance) == 0x0001A4, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_Location) == 0x0001A8, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B4, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_ImpactNormal) == 0x0001CC, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_TraceStart) == 0x000204, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_BreakHitResult_TraceEnd) == 0x000210, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_DoesImplementInterface_ReturnValue) == 0x00021C, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_Interactive_3) == 0x000220, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_Interactive_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess_5) == 0x000230, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_GetDescription_Description) == 0x000238, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_GetDescription_Description' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_AsI_Interactive_4) == 0x000250, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_AsI_Interactive_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, K2Node_DynamicCast_bSuccess_6) == 0x000260, "Member 'BP_PlayerCharacter_C_CheckForInteractable::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_TryToInteract_bFailure) == 0x000261, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_TryToInteract_bFailure' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckForInteractable, CallFunc_IsValid_ReturnValue_3) == 0x000262, "Member 'BP_PlayerCharacter_C_CheckForInteractable::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CheckTarget
// 0x01D8 (0x01D8 - 0x0000)
struct BP_PlayerCharacter_C_CheckTarget final
{
public:
	class ABP_PlayerCharacter_C*                  TargetPawnRef;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerTag_C*                        K2Node_DynamicCast_AsWB_Player_Tag;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerTag_C*                        K2Node_DynamicCast_AsWB_Player_Tag_1;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x1];                                      // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_CheckTarget) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_CheckTarget");
static_assert(sizeof(BP_PlayerCharacter_C_CheckTarget) == 0x0001D8, "Wrong size on BP_PlayerCharacter_C_CheckTarget");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, TargetPawnRef) == 0x000000, "Member 'BP_PlayerCharacter_C_CheckTarget::TargetPawnRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000008, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_DynamicCast_AsWB_Player_Tag) == 0x000018, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_DynamicCast_AsWB_Player_Tag' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000028, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_DynamicCast_AsWB_Player_Tag_1) == 0x000030, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_DynamicCast_AsWB_Player_Tag_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x00003C, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetActorForwardVector_ReturnValue) == 0x000064, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetCameraRotation_ReturnValue) == 0x000070, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_GetCameraLocation_ReturnValue) == 0x00007C, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000088, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000AC, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_LineTraceSingle_OutHit) == 0x0000B8, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_LineTraceSingle_ReturnValue) == 0x000140, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000141, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000142, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_Location) == 0x00014C, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_Normal) == 0x000164, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_PlayerCharacter_C_CheckTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_DynamicCast_AsBP_Player_Character) == 0x0001C8, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CheckTarget, K2Node_DynamicCast_bSuccess_2) == 0x0001D0, "Member 'BP_PlayerCharacter_C_CheckTarget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLeanRotation
// 0x0140 (0x0140 - 0x0000)
struct BP_PlayerCharacter_C_SetLeanRotation final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetLeanRotation) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetLeanRotation");
static_assert(sizeof(BP_PlayerCharacter_C_SetLeanRotation) == 0x000140, "Wrong size on BP_PlayerCharacter_C_SetLeanRotation");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00000C, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_BreakVector_X) == 0x000094, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_BreakVector_Y) == 0x000098, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_BreakVector_Z) == 0x00009C, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000B0, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetLeanRotation, CallFunc_FInterpTo_ReturnValue) == 0x00013C, "Member 'BP_PlayerCharacter_C_SetLeanRotation::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AdjustCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_AdjustCamera final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AdjustCamera) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_AdjustCamera");
static_assert(sizeof(BP_PlayerCharacter_C_AdjustCamera) == 0x000018, "Wrong size on BP_PlayerCharacter_C_AdjustCamera");
static_assert(offsetof(BP_PlayerCharacter_C_AdjustCamera, Input) == 0x000000, "Member 'BP_PlayerCharacter_C_AdjustCamera::Input' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AdjustCamera, Temp_bool_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_AdjustCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AdjustCamera, CallFunc_DegSin_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_AdjustCamera::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AdjustCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_AdjustCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AdjustCamera, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BP_PlayerCharacter_C_AdjustCamera::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AdjustCamera, K2Node_Select_Default) == 0x000014, "Member 'BP_PlayerCharacter_C_AdjustCamera::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RegenHealth
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_RegenHealth final
{
public:
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_RegenHealth) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_RegenHealth");
static_assert(sizeof(BP_PlayerCharacter_C_RegenHealth) == 0x000018, "Wrong size on BP_PlayerCharacter_C_RegenHealth");
static_assert(offsetof(BP_PlayerCharacter_C_RegenHealth, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_RegenHealth::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RegenHealth, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_RegenHealth::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RegenHealth, CallFunc_ApplyDamage_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_RegenHealth::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ActivateRegenHealth
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_ActivateRegenHealth final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ActivateRegenHealth) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ActivateRegenHealth");
static_assert(sizeof(BP_PlayerCharacter_C_ActivateRegenHealth) == 0x000008, "Wrong size on BP_PlayerCharacter_C_ActivateRegenHealth");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateRegenHealth, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_ActivateRegenHealth::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.StartRegenTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_StartRegenTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_StartRegenTimer) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_StartRegenTimer");
static_assert(sizeof(BP_PlayerCharacter_C_StartRegenTimer) == 0x000010, "Wrong size on BP_PlayerCharacter_C_StartRegenTimer");
static_assert(offsetof(BP_PlayerCharacter_C_StartRegenTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_StartRegenTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_StartRegenTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_StartRegenTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetSpreadTarget
// 0x002C (0x002C - 0x0000)
struct BP_PlayerCharacter_C_SetSpreadTarget final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetSpreadTarget) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetSpreadTarget");
static_assert(sizeof(BP_PlayerCharacter_C_SetSpreadTarget) == 0x00002C, "Wrong size on BP_PlayerCharacter_C_SetSpreadTarget");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_VSize_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetSpreadTarget, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_SetSpreadTarget::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetMagazines
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerCharacter_C_SetMagazines final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewAmmoQuantity;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         K2Node_MakeStruct_AmmoMagazines;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetMagazines) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetMagazines");
static_assert(sizeof(BP_PlayerCharacter_C_SetMagazines) == 0x000014, "Wrong size on BP_PlayerCharacter_C_SetMagazines");
static_assert(offsetof(BP_PlayerCharacter_C_SetMagazines, Index_0) == 0x000000, "Member 'BP_PlayerCharacter_C_SetMagazines::Index_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetMagazines, NewAmmoQuantity) == 0x000004, "Member 'BP_PlayerCharacter_C_SetMagazines::NewAmmoQuantity' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetMagazines, K2Node_MakeStruct_AmmoMagazines) == 0x000008, "Member 'BP_PlayerCharacter_C_SetMagazines::K2Node_MakeStruct_AmmoMagazines' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddRecoilYaw
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_AddRecoilYaw final
{
public:
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddRecoilYaw) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_AddRecoilYaw");
static_assert(sizeof(BP_PlayerCharacter_C_AddRecoilYaw) == 0x000010, "Wrong size on BP_PlayerCharacter_C_AddRecoilYaw");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilYaw, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_AddRecoilYaw::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilYaw, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_AddRecoilYaw::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilYaw, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_AddRecoilYaw::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilYaw, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_AddRecoilYaw::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddRecoilPitch
// 0x000C (0x000C - 0x0000)
struct BP_PlayerCharacter_C_AddRecoilPitch final
{
public:
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddRecoilPitch) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_AddRecoilPitch");
static_assert(sizeof(BP_PlayerCharacter_C_AddRecoilPitch) == 0x00000C, "Wrong size on BP_PlayerCharacter_C_AddRecoilPitch");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilPitch, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_AddRecoilPitch::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilPitch, CallFunc_FInterpTo_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_AddRecoilPitch::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoilPitch, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_AddRecoilPitch::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.NoAmmo
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_NoAmmo final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_NoAmmo) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_NoAmmo");
static_assert(sizeof(BP_PlayerCharacter_C_NoAmmo) == 0x000010, "Wrong size on BP_PlayerCharacter_C_NoAmmo");
static_assert(offsetof(BP_PlayerCharacter_C_NoAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_NoAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_NoAmmo, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_NoAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_NoAmmo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000002, "Member 'BP_PlayerCharacter_C_NoAmmo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_NoAmmo, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_PlayerCharacter_C_NoAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_NoAmmo, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_NoAmmo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DirectionalDamageIndicator
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_DirectionalDamageIndicator final
{
public:
	struct FVector                                DmgCauserLocation;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_DirectionalDamageIndicator_C*       CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_DirectionalDamageIndicator) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_DirectionalDamageIndicator");
static_assert(sizeof(BP_PlayerCharacter_C_DirectionalDamageIndicator) == 0x000020, "Wrong size on BP_PlayerCharacter_C_DirectionalDamageIndicator");
static_assert(offsetof(BP_PlayerCharacter_C_DirectionalDamageIndicator, DmgCauserLocation) == 0x000000, "Member 'BP_PlayerCharacter_C_DirectionalDamageIndicator::DmgCauserLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DirectionalDamageIndicator, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_DirectionalDamageIndicator::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DirectionalDamageIndicator, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_DirectionalDamageIndicator::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_DirectionalDamageIndicator, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_DirectionalDamageIndicator::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MeleeAttack
// 0x0190 (0x0190 - 0x0000)
struct BP_PlayerCharacter_C_MeleeAttack final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF[0x1];                                       // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealthComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_MeleeAttack) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_MeleeAttack");
static_assert(sizeof(BP_PlayerCharacter_C_MeleeAttack) == 0x000190, "Wrong size on BP_PlayerCharacter_C_MeleeAttack");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_MeleeAttack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_PlayerCharacter_C_MeleeAttack::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000030, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_GetForwardVector_ReturnValue) == 0x000044, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, K2Node_Select_Default) == 0x000050, "Member 'BP_PlayerCharacter_C_MeleeAttack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00005C, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_CapsuleTraceSingle_OutHit) == 0x000074, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x0000FC, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_bBlockingHit) == 0x0000FD, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FE, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_Time) == 0x000100, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_Distance) == 0x000104, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_ImpactPoint) == 0x000114, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_Normal) == 0x000120, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_ImpactNormal) == 0x00012C, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_ElementIndex) == 0x00015C, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_FaceIndex) == 0x000160, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_TraceStart) == 0x000164, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_BreakHitResult_TraceEnd) == 0x000170, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_GetComponentByClass_ReturnValue) == 0x000180, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttack, CallFunc_IsValid_ReturnValue_1) == 0x000189, "Member 'BP_PlayerCharacter_C_MeleeAttack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TakeDamage
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerCharacter_C_TakeDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            ControllerInstigator;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDead_0;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageToDo;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeal;                                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DmgToDo;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team_1;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GM_C*                          K2Node_DynamicCast_AsBP_Base_GM;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_HandleFriendlyFireDamage_DamageToDo;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_TakeDamage) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_TakeDamage");
static_assert(sizeof(BP_PlayerCharacter_C_TakeDamage) == 0x000088, "Wrong size on BP_PlayerCharacter_C_TakeDamage");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, Damage) == 0x000000, "Member 'BP_PlayerCharacter_C_TakeDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, ControllerInstigator) == 0x000008, "Member 'BP_PlayerCharacter_C_TakeDamage::ControllerInstigator' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, bDead_0) == 0x000010, "Member 'BP_PlayerCharacter_C_TakeDamage::bDead_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, DamageToDo) == 0x000014, "Member 'BP_PlayerCharacter_C_TakeDamage::DamageToDo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, bHeal) == 0x000018, "Member 'BP_PlayerCharacter_C_TakeDamage::bHeal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, DmgToDo) == 0x00001C, "Member 'BP_PlayerCharacter_C_TakeDamage::DmgToDo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x000028, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_GetPlayerTeamFromPlayerState_Team_1) == 0x000030, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_GetPlayerTeamFromPlayerState_Team_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_K2_GetPawn_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000048, "Member 'BP_PlayerCharacter_C_TakeDamage::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PlayerCharacter_C_TakeDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000059, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_IsValid_ReturnValue) == 0x00005A, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_GetGameMode_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, K2Node_DynamicCast_AsBP_Base_GM) == 0x000068, "Member 'BP_PlayerCharacter_C_TakeDamage::K2Node_DynamicCast_AsBP_Base_GM' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_PlayerCharacter_C_TakeDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_HandleFriendlyFireDamage_DamageToDo) == 0x000074, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_HandleFriendlyFireDamage_DamageToDo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TakeDamage, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'BP_PlayerCharacter_C_TakeDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ResetRecoil
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_ResetRecoil final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ResetRecoil) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ResetRecoil");
static_assert(sizeof(BP_PlayerCharacter_C_ResetRecoil) == 0x000001, "Wrong size on BP_PlayerCharacter_C_ResetRecoil");
static_assert(offsetof(BP_PlayerCharacter_C_ResetRecoil, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_ResetRecoil::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetWeaponVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_SetWeaponVisibility final
{
public:
	class ABP_BaseWeapon_C*                       Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetWeaponVisibility) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_SetWeaponVisibility");
static_assert(sizeof(BP_PlayerCharacter_C_SetWeaponVisibility) == 0x000010, "Wrong size on BP_PlayerCharacter_C_SetWeaponVisibility");
static_assert(offsetof(BP_PlayerCharacter_C_SetWeaponVisibility, Weapon) == 0x000000, "Member 'BP_PlayerCharacter_C_SetWeaponVisibility::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetWeaponVisibility, bVisible) == 0x000008, "Member 'BP_PlayerCharacter_C_SetWeaponVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetWeaponVisibility, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PlayerCharacter_C_SetWeaponVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.EquipWeapon
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerCharacter_C_EquipWeapon final
{
public:
	class UClass*                                 WeaponToSpawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActualAmmo;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialValues;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPrimary;                                          // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseWeapon_C*                       WeaponCreated;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseWeapon_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_EquipWeapon) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_EquipWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_EquipWeapon) == 0x000060, "Wrong size on BP_PlayerCharacter_C_EquipWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, WeaponToSpawn) == 0x000000, "Member 'BP_PlayerCharacter_C_EquipWeapon::WeaponToSpawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, ActualAmmo) == 0x000008, "Member 'BP_PlayerCharacter_C_EquipWeapon::ActualAmmo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, bInitialValues) == 0x00000C, "Member 'BP_PlayerCharacter_C_EquipWeapon::bInitialValues' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, bPrimary) == 0x00000D, "Member 'BP_PlayerCharacter_C_EquipWeapon::bPrimary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, WeaponCreated) == 0x000010, "Member 'BP_PlayerCharacter_C_EquipWeapon::WeaponCreated' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_EquipWeapon::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_EquipWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_EquipWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_EquipWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.HasAmmo
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerCharacter_C_HasAmmo final
{
public:
	class ABP_BaseWeapon_C*                       Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ammo;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagazinesIndex;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewQuantity;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmmoType                                     AmmoType;                                          // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmmoToReduce;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_Array_Get_Item;                           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_HasAmmo) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_HasAmmo");
static_assert(sizeof(BP_PlayerCharacter_C_HasAmmo) == 0x000060, "Wrong size on BP_PlayerCharacter_C_HasAmmo");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, Weapon) == 0x000000, "Member 'BP_PlayerCharacter_C_HasAmmo::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, Success) == 0x000008, "Member 'BP_PlayerCharacter_C_HasAmmo::Success' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, Ammo) == 0x00000C, "Member 'BP_PlayerCharacter_C_HasAmmo::Ammo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, MagazinesIndex) == 0x000010, "Member 'BP_PlayerCharacter_C_HasAmmo::MagazinesIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, NewQuantity) == 0x000014, "Member 'BP_PlayerCharacter_C_HasAmmo::NewQuantity' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, Index_0) == 0x000018, "Member 'BP_PlayerCharacter_C_HasAmmo::Index_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, AmmoType) == 0x00001C, "Member 'BP_PlayerCharacter_C_HasAmmo::AmmoType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, AmmoToReduce) == 0x000020, "Member 'BP_PlayerCharacter_C_HasAmmo::AmmoToReduce' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_PlayerCharacter_C_HasAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_PlayerCharacter_C_HasAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000049, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Min_ReturnValue) == 0x00004C, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000054, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_Clamp_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HasAmmo, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'BP_PlayerCharacter_C_HasAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MovementRecoil
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerCharacter_C_MovementRecoil final
{
public:
	class ABP_BaseWeapon_C*                       Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spread;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue_1;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_MovementRecoil) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_MovementRecoil");
static_assert(sizeof(BP_PlayerCharacter_C_MovementRecoil) == 0x000078, "Wrong size on BP_PlayerCharacter_C_MovementRecoil");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, Weapon) == 0x000000, "Member 'BP_PlayerCharacter_C_MovementRecoil::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, Spread) == 0x000008, "Member 'BP_PlayerCharacter_C_MovementRecoil::Spread' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, Temp_bool_Variable) == 0x00000C, "Member 'BP_PlayerCharacter_C_MovementRecoil::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, Temp_bool_Variable_1) == 0x000014, "Member 'BP_PlayerCharacter_C_MovementRecoil::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_IsFalling_ReturnValue) == 0x00001C, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, K2Node_Select_Default) == 0x000024, "Member 'BP_PlayerCharacter_C_MovementRecoil::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, Temp_bool_Variable_2) == 0x00002C, "Member 'BP_PlayerCharacter_C_MovementRecoil::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, K2Node_Select_Default_1) == 0x000030, "Member 'BP_PlayerCharacter_C_MovementRecoil::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_GetVelocity_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_ClampVectorSize_ReturnValue) == 0x000044, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_ClampVectorSize_ReturnValue_1) == 0x000050, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_ClampVectorSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_VSize_ReturnValue) == 0x00005C, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_VSize_ReturnValue_1) == 0x000060, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, K2Node_Select_Default_2) == 0x000064, "Member 'BP_PlayerCharacter_C_MovementRecoil::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000070, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MovementRecoil, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_PlayerCharacter_C_MovementRecoil::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetPOV
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_SetPOV final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetPOV) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetPOV");
static_assert(sizeof(BP_PlayerCharacter_C_SetPOV) == 0x000008, "Wrong size on BP_PlayerCharacter_C_SetPOV");
static_assert(offsetof(BP_PlayerCharacter_C_SetPOV, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_SetPOV::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetPOV, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_SetPOV::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetPOV, CallFunc_FInterpTo_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_SetPOV::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddRecoil
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_C_AddRecoil final
{
public:
	float                                         RandomFloat;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddRecoil) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_AddRecoil");
static_assert(sizeof(BP_PlayerCharacter_C_AddRecoil) == 0x000028, "Wrong size on BP_PlayerCharacter_C_AddRecoil");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, RandomFloat) == 0x000000, "Member 'BP_PlayerCharacter_C_AddRecoil::RandomFloat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_RandomBool_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000018, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddRecoil, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_AddRecoil::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TryToShoot
// 0x0005 (0x0005 - 0x0000)
struct BP_PlayerCharacter_C_TryToShoot final
{
public:
	bool                                          CanShoot;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_TryToShoot) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_TryToShoot");
static_assert(sizeof(BP_PlayerCharacter_C_TryToShoot) == 0x000005, "Wrong size on BP_PlayerCharacter_C_TryToShoot");
static_assert(offsetof(BP_PlayerCharacter_C_TryToShoot, CanShoot) == 0x000000, "Member 'BP_PlayerCharacter_C_TryToShoot::CanShoot' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TryToShoot, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_TryToShoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TryToShoot, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_PlayerCharacter_C_TryToShoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TryToShoot, CallFunc_Greater_IntInt_ReturnValue) == 0x000003, "Member 'BP_PlayerCharacter_C_TryToShoot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TryToShoot, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_TryToShoot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_9752C47D4AD85EE376746DA75A9FBB0E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_9752C47D4AD85EE376746DA75A9FBB0E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_9752C47D4AD85EE376746DA75A9FBB0E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_9752C47D4AD85EE376746DA75A9FBB0E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_9752C47D4AD85EE376746DA75A9FBB0E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_886F889E4A58FB2FF43759BF3C63C7C4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_886F889E4A58FB2FF43759BF3C63C7C4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_886F889E4A58FB2FF43759BF3C63C7C4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_886F889E4A58FB2FF43759BF3C63C7C4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_886F889E4A58FB2FF43759BF3C63C7C4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1465F3DD1::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1465F3DD1::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1465F3DD1::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1465F3DD1::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1465F3DD1::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA15D430122::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA15D430122::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A01E8A264229EF2A821AFFA15D430122
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA15D430122::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A01E8A264229EF2A821AFFA15D430122
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA15D430122::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A01E8A264229EF2A821AFFA15D430122
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA15D430122::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1891936D2::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1891936D2::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A01E8A264229EF2A821AFFA1891936D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1891936D2::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A01E8A264229EF2A821AFFA1891936D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1891936D2::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A01E8A264229EF2A821AFFA1891936D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1891936D2::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_25E6DEF74F7276004536CD87BC214DFF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_25E6DEF74F7276004536CD87BC214DFF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_25E6DEF74F7276004536CD87BC214DFF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_25E6DEF74F7276004536CD87BC214DFF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_25E6DEF74F7276004536CD87BC214DFF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_25E6DEF74F7276004536CD87BC214DFF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_25E6DEF74F7276004536CD87BC214DFF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_25E6DEF74F7276004536CD87BC214DFF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_516817DE469539D911F4BB8B5B50E9BD::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_516817DE469539D911F4BB8B5B50E9BD::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_516817DE469539D911F4BB8B5B50E9BD
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_516817DE469539D911F4BB8B5B50E9BD::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_516817DE469539D911F4BB8B5B50E9BD
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_516817DE469539D911F4BB8B5B50E9BD::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_516817DE469539D911F4BB8B5B50E9BD
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_516817DE469539D911F4BB8B5B50E9BD::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A3FFF40A4AA3BA1A4B17F086EF25BA17::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A3FFF40A4AA3BA1A4B17F086EF25BA17::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A3FFF40A4AA3BA1A4B17F086EF25BA17::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A3FFF40A4AA3BA1A4B17F086EF25BA17::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A3FFF40A4AA3BA1A4B17F086EF25BA17::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Skill_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Skill_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_EED188944CC8D724E5A589AB172C1760
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_EED188944CC8D724E5A589AB172C1760::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_EED188944CC8D724E5A589AB172C1760
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_EED188944CC8D724E5A589AB172C1760::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_EED188944CC8D724E5A589AB172C1760
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_EED188944CC8D724E5A589AB172C1760::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_EED188944CC8D724E5A589AB172C1760
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_EED188944CC8D724E5A589AB172C1760::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_EED188944CC8D724E5A589AB172C1760
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_EED188944CC8D724E5A589AB172C1760::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Interact_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Interact_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Fire_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Fire_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Reload_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Run_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Run_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Run_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_472935974CD0378368D6318D7D0264C6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D7D0264C6::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_472935974CD0378368D6318D7D0264C6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D7D0264C6::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_472935974CD0378368D6318D7D0264C6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D7D0264C6::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_472935974CD0378368D6318D7D0264C6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D7D0264C6::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_472935974CD0378368D6318D7D0264C6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D7D0264C6::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Aim_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Aim_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Crouch_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Crouch_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_ToggleWeapon_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_MeleeAttack_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_MeleeAttack_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_ChangeFiringMode_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_LeanRight_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_LeanRight_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_LeanLeft_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_F716DF2F494792662716AB9E69095EBF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_F716DF2F494792662716AB9E69095EBF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_F716DF2F494792662716AB9E69095EBF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_F716DF2F494792662716AB9E69095EBF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_F716DF2F494792662716AB9E69095EBF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_F716DF2F494792662716AB9E69095EBF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_F716DF2F494792662716AB9E69095EBF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_F716DF2F494792662716AB9E69095EBF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_F716DF2F494792662716AB9E69095EBF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_F716DF2F494792662716AB9E69095EBF::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_F25EE13D4EB43E8DD1A4B5B9FF3A555B::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_F25EE13D4EB43E8DD1A4B5B9FF3A555B::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_F25EE13D4EB43E8DD1A4B5B9FF3A555B::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_F25EE13D4EB43E8DD1A4B5B9FF3A555B::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_F25EE13D4EB43E8DD1A4B5B9FF3A555B::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA152FA38E4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA152FA38E4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA152FA38E4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA152FA38E4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A01E8A264229EF2A821AFFA152FA38E4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA152FA38E4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_472935974CD0378368D6318DFECEF393
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318DFECEF393::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_472935974CD0378368D6318DFECEF393
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318DFECEF393::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_472935974CD0378368D6318DFECEF393
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318DFECEF393::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_472935974CD0378368D6318DFECEF393
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318DFECEF393::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_472935974CD0378368D6318DFECEF393
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318DFECEF393::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_22E17CC54118F3390990988E53AD25D3
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_22E17CC54118F3390990988E53AD25D3::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_22E17CC54118F3390990988E53AD25D3
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_22E17CC54118F3390990988E53AD25D3::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_22E17CC54118F3390990988E53AD25D3
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_22E17CC54118F3390990988E53AD25D3::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_22E17CC54118F3390990988E53AD25D3
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_22E17CC54118F3390990988E53AD25D3::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_22E17CC54118F3390990988E53AD25D3
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_22E17CC54118F3390990988E53AD25D3::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_472935974CD0378368D6318D1873FA0F
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D1873FA0F::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_472935974CD0378368D6318D1873FA0F
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D1873FA0F::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_472935974CD0378368D6318D1873FA0F
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D1873FA0F::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_472935974CD0378368D6318D1873FA0F
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D1873FA0F::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_472935974CD0378368D6318D1873FA0F
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D1873FA0F::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_D14D6E6D4983E19A47768DBD0387B163::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_D14D6E6D4983E19A47768DBD0387B163::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_D14D6E6D4983E19A47768DBD0387B163
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_D14D6E6D4983E19A47768DBD0387B163::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_D14D6E6D4983E19A47768DBD0387B163
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_D14D6E6D4983E19A47768DBD0387B163::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_D14D6E6D4983E19A47768DBD0387B163
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_D14D6E6D4983E19A47768DBD0387B163::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_PrimaryWeapon_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_SecondaryWeapon_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_HoldBreath_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_HoldBreath_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_HoldBreath_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D0CD6FF3A::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D0CD6FF3A::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_472935974CD0378368D6318D0CD6FF3A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D0CD6FF3A::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_472935974CD0378368D6318D0CD6FF3A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D0CD6FF3A::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_472935974CD0378368D6318D0CD6FF3A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D0CD6FF3A::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_21B8E5A941E7B31374776E9D1B84D16E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_21B8E5A941E7B31374776E9D1B84D16E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_21B8E5A941E7B31374776E9D1B84D16E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_21B8E5A941E7B31374776E9D1B84D16E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_21B8E5A941E7B31374776E9D1B84D16E
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_21B8E5A941E7B31374776E9D1B84D16E::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Lethal Equipment_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_Lethal Equipment_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_Lethal_Equipment_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_3E6ACAB8442176E02B0A7499F031F617::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_3E6ACAB8442176E02B0A7499F031F617::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_3E6ACAB8442176E02B0A7499F031F617
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_3E6ACAB8442176E02B0A7499F031F617::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_3E6ACAB8442176E02B0A7499F031F617
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_3E6ACAB8442176E02B0A7499F031F617::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_3E6ACAB8442176E02B0A7499F031F617
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_3E6ACAB8442176E02B0A7499F031F617::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_772EF67045F82873BA41DC8A43414685
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_772EF67045F82873BA41DC8A43414685::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_772EF67045F82873BA41DC8A43414685
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_772EF67045F82873BA41DC8A43414685::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_772EF67045F82873BA41DC8A43414685
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_772EF67045F82873BA41DC8A43414685::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_772EF67045F82873BA41DC8A43414685
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_772EF67045F82873BA41DC8A43414685::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_772EF67045F82873BA41DC8A43414685
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_772EF67045F82873BA41DC8A43414685::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A59671AB46B259F55C5258B0706FF1E0::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A59671AB46B259F55C5258B0706FF1E0::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A59671AB46B259F55C5258B0706FF1E0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A59671AB46B259F55C5258B0706FF1E0::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A59671AB46B259F55C5258B0706FF1E0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A59671AB46B259F55C5258B0706FF1E0::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A59671AB46B259F55C5258B0706FF1E0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A59671AB46B259F55C5258B0706FF1E0::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_472935974CD0378368D6318D17CAC3C9
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_472935974CD0378368D6318D17CAC3C9::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_472935974CD0378368D6318D17CAC3C9
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_472935974CD0378368D6318D17CAC3C9::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_472935974CD0378368D6318D17CAC3C9
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_472935974CD0378368D6318D17CAC3C9::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_472935974CD0378368D6318D17CAC3C9
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_472935974CD0378368D6318D17CAC3C9::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_472935974CD0378368D6318D17CAC3C9
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_472935974CD0378368D6318D17CAC3C9::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1BABE8BB4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1BABE8BB4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1BABE8BB4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1BABE8BB4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1BABE8BB4::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyEnd_A01E8A264229EF2A821AFFA1B4473178::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178");
static_assert(sizeof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178");
static_assert(offsetof(BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnNotifyBegin_A01E8A264229EF2A821AFFA1B4473178::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInterrupted_A01E8A264229EF2A821AFFA1B4473178
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178");
static_assert(sizeof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178");
static_assert(offsetof(BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnInterrupted_A01E8A264229EF2A821AFFA1B4473178::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnBlendOut_A01E8A264229EF2A821AFFA1B4473178
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178");
static_assert(sizeof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178");
static_assert(offsetof(BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnBlendOut_A01E8A264229EF2A821AFFA1B4473178::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCompleted_A01E8A264229EF2A821AFFA1B4473178
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178");
static_assert(sizeof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178");
static_assert(offsetof(BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178, NotifyName) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCompleted_A01E8A264229EF2A821AFFA1B4473178::NotifyName' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnWeaponInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnWeaponInteract final
{
public:
	class ABP_BaseWeapon_C*                       NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnWeaponInteract) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnWeaponInteract");
static_assert(sizeof(BP_PlayerCharacter_C_OnWeaponInteract) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnWeaponInteract");
static_assert(offsetof(BP_PlayerCharacter_C_OnWeaponInteract, NewWeapon) == 0x000000, "Member 'BP_PlayerCharacter_C_OnWeaponInteract::NewWeapon' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SpawnMedKit
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Server_SpawnMedKit final
{
public:
	class UClass*                                 ItemToSpawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SpawnMedKit) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_SpawnMedKit");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SpawnMedKit) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Server_SpawnMedKit");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SpawnMedKit, ItemToSpawn) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SpawnMedKit::ItemToSpawn' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_Interact
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Server_Interact final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_Interact) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_Interact");
static_assert(sizeof(BP_PlayerCharacter_C_Server_Interact) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Server_Interact");
static_assert(offsetof(BP_PlayerCharacter_C_Server_Interact, Interactable) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_Interact::Interactable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_Interact, Character) == 0x000008, "Member 'BP_PlayerCharacter_C_Server_Interact::Character' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_BeginInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Server_BeginInteract final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_BeginInteract) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_BeginInteract");
static_assert(sizeof(BP_PlayerCharacter_C_Server_BeginInteract) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Server_BeginInteract");
static_assert(offsetof(BP_PlayerCharacter_C_Server_BeginInteract, Interactable) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_BeginInteract::Interactable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_BeginInteract, Character) == 0x000008, "Member 'BP_PlayerCharacter_C_Server_BeginInteract::Character' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SetShooting
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_Server_SetShooting final
{
public:
	bool                                          bShooting_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SetShooting) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Server_SetShooting");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SetShooting) == 0x000001, "Wrong size on BP_PlayerCharacter_C_Server_SetShooting");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SetShooting, bShooting_0) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SetShooting::bShooting_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_157
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157");
static_assert(sizeof(BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157) == 0x000004, "Wrong size on BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157");
static_assert(offsetof(BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157, AxisValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157::AxisValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_172
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");
static_assert(sizeof(BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172) == 0x000004, "Wrong size on BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");
static_assert(offsetof(BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172, AxisValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172::AxisValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181");
static_assert(sizeof(BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181) == 0x000004, "Wrong size on BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181");
static_assert(offsetof(BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181, AxisValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181::AxisValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192");
static_assert(sizeof(BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192) == 0x000004, "Wrong size on BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192");
static_assert(offsetof(BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192, AxisValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192::AxisValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_Running
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_Server_Running final
{
public:
	bool                                          bRunning_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_Running) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Server_Running");
static_assert(sizeof(BP_PlayerCharacter_C_Server_Running) == 0x000001, "Wrong size on BP_PlayerCharacter_C_Server_Running");
static_assert(offsetof(BP_PlayerCharacter_C_Server_Running, bRunning_0) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_Running::bRunning_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SetAim
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_Server_SetAim final
{
public:
	bool                                          bAim;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SetAim) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Server_SetAim");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SetAim) == 0x000001, "Wrong size on BP_PlayerCharacter_C_Server_SetAim");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SetAim, bAim) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SetAim::bAim' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateWeaponVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_UpdateWeaponVisibility final
{
public:
	bool                                          ShowPrimary;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateWeaponVisibility) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_UpdateWeaponVisibility");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateWeaponVisibility) == 0x000001, "Wrong size on BP_PlayerCharacter_C_UpdateWeaponVisibility");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateWeaponVisibility, ShowPrimary) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateWeaponVisibility::ShowPrimary' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_ApplyMeleeDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Server_ApplyMeleeDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  Intigator;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_ApplyMeleeDamage) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_ApplyMeleeDamage");
static_assert(sizeof(BP_PlayerCharacter_C_Server_ApplyMeleeDamage) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Server_ApplyMeleeDamage");
static_assert(offsetof(BP_PlayerCharacter_C_Server_ApplyMeleeDamage, DamagedActor) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_ApplyMeleeDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_ApplyMeleeDamage, Intigator) == 0x000008, "Member 'BP_PlayerCharacter_C_Server_ApplyMeleeDamage::Intigator' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SetLeaning
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_Server_SetLeaning final
{
public:
	bool                                          bRight;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLeaning;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SetLeaning) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Server_SetLeaning");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SetLeaning) == 0x000002, "Wrong size on BP_PlayerCharacter_C_Server_SetLeaning");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SetLeaning, bRight) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SetLeaning::bRight' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SetLeaning, bIsLeaning) == 0x000001, "Member 'BP_PlayerCharacter_C_Server_SetLeaning::bIsLeaning' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SetWeaponEquiped
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_Server_SetWeaponEquiped final
{
public:
	EEquipedWeapon                                NewWeapon;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SetWeaponEquiped) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Server_SetWeaponEquiped");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SetWeaponEquiped) == 0x000001, "Wrong size on BP_PlayerCharacter_C_Server_SetWeaponEquiped");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SetWeaponEquiped, NewWeapon) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SetWeaponEquiped::NewWeapon' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ForcedWeaponChange
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_ForcedWeaponChange final
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          QuickChange;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ForcedWeaponChange) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ForcedWeaponChange");
static_assert(sizeof(BP_PlayerCharacter_C_ForcedWeaponChange) == 0x000002, "Wrong size on BP_PlayerCharacter_C_ForcedWeaponChange");
static_assert(offsetof(BP_PlayerCharacter_C_ForcedWeaponChange, Primary) == 0x000000, "Member 'BP_PlayerCharacter_C_ForcedWeaponChange::Primary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ForcedWeaponChange, QuickChange) == 0x000001, "Member 'BP_PlayerCharacter_C_ForcedWeaponChange::QuickChange' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_UpdateRunMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_Server_UpdateRunMultiplier final
{
public:
	float                                         NewMultiplier;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_UpdateRunMultiplier) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_Server_UpdateRunMultiplier");
static_assert(sizeof(BP_PlayerCharacter_C_Server_UpdateRunMultiplier) == 0x000004, "Wrong size on BP_PlayerCharacter_C_Server_UpdateRunMultiplier");
static_assert(offsetof(BP_PlayerCharacter_C_Server_UpdateRunMultiplier, NewMultiplier) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_UpdateRunMultiplier::NewMultiplier' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_ForceChangeWeapon
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_Client_ForceChangeWeapon final
{
public:
	bool                                          Primary;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          QuickChange;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_ForceChangeWeapon) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Client_ForceChangeWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_Client_ForceChangeWeapon) == 0x000002, "Wrong size on BP_PlayerCharacter_C_Client_ForceChangeWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_Client_ForceChangeWeapon, Primary) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_ForceChangeWeapon::Primary' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Client_ForceChangeWeapon, QuickChange) == 0x000001, "Member 'BP_PlayerCharacter_C_Client_ForceChangeWeapon::QuickChange' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_OnPickupWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Server_OnPickupWeapon final
{
public:
	class UClass*                                 WeaponClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ammo;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_OnPickupWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_OnPickupWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_Server_OnPickupWeapon) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Server_OnPickupWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_Server_OnPickupWeapon, WeaponClass) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_OnPickupWeapon::WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_OnPickupWeapon, Ammo) == 0x000008, "Member 'BP_PlayerCharacter_C_Server_OnPickupWeapon::Ammo' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddAmmo
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_AddAmmo final
{
public:
	EAmmoType                                     AmmoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddAmmo) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_AddAmmo");
static_assert(sizeof(BP_PlayerCharacter_C_AddAmmo) == 0x000001, "Wrong size on BP_PlayerCharacter_C_AddAmmo");
static_assert(offsetof(BP_PlayerCharacter_C_AddAmmo, AmmoType) == 0x000000, "Member 'BP_PlayerCharacter_C_AddAmmo::AmmoType' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnPickupWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_OnPickupWeapon final
{
public:
	class UClass*                                 WeaponClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentAmmo;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnPickupWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnPickupWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_OnPickupWeapon) == 0x000010, "Wrong size on BP_PlayerCharacter_C_OnPickupWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_OnPickupWeapon, WeaponClass) == 0x000000, "Member 'BP_PlayerCharacter_C_OnPickupWeapon::WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnPickupWeapon, CurrentAmmo) == 0x000008, "Member 'BP_PlayerCharacter_C_OnPickupWeapon::CurrentAmmo' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SetUsingLethal
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_Server_SetUsingLethal final
{
public:
	bool                                          bUsingLethal_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SetUsingLethal) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_Server_SetUsingLethal");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SetUsingLethal) == 0x000001, "Wrong size on BP_PlayerCharacter_C_Server_SetUsingLethal");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SetUsingLethal, bUsingLethal_0) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SetUsingLethal::bUsingLethal_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InpAxisEvt_MoveBackward_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InpAxisEvt_MoveLeft_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceiveAnyDamage");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_PlayerCharacter_C_ReceiveAnyDamage");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_PlayerCharacter_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_PlayerCharacter_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_PlayerCharacter_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.HandleDeath
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_HandleDeath final
{
public:
	class ABP_PlayerCharacter_C*                  Dead_Actor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Instigator_Controller;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_HandleDeath) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_HandleDeath");
static_assert(sizeof(BP_PlayerCharacter_C_HandleDeath) == 0x000020, "Wrong size on BP_PlayerCharacter_C_HandleDeath");
static_assert(offsetof(BP_PlayerCharacter_C_HandleDeath, Dead_Actor) == 0x000000, "Member 'BP_PlayerCharacter_C_HandleDeath::Dead_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HandleDeath, Instigator_Controller) == 0x000008, "Member 'BP_PlayerCharacter_C_HandleDeath::Instigator_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HandleDeath, DmgType) == 0x000010, "Member 'BP_PlayerCharacter_C_HandleDeath::DmgType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_HandleDeath, DamageCauser) == 0x000018, "Member 'BP_PlayerCharacter_C_HandleDeath::DamageCauser' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_OnPawnDeath
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_C_Client_OnPawnDeath final
{
public:
	class FText                                   KillerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         KillerHP;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  KillerClass;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DmgType;                                           // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_OnPawnDeath) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Client_OnPawnDeath");
static_assert(sizeof(BP_PlayerCharacter_C_Client_OnPawnDeath) == 0x000028, "Wrong size on BP_PlayerCharacter_C_Client_OnPawnDeath");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnPawnDeath, KillerName) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_OnPawnDeath::KillerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnPawnDeath, KillerHP) == 0x000018, "Member 'BP_PlayerCharacter_C_Client_OnPawnDeath::KillerHP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnPawnDeath, KillerClass) == 0x00001C, "Member 'BP_PlayerCharacter_C_Client_OnPawnDeath::KillerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnPawnDeath, DmgType) == 0x000020, "Member 'BP_PlayerCharacter_C_Client_OnPawnDeath::DmgType' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_OnTakeDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_Client_OnTakeDamage final
{
public:
	float                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_OnTakeDamage) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_Client_OnTakeDamage");
static_assert(sizeof(BP_PlayerCharacter_C_Client_OnTakeDamage) == 0x000004, "Wrong size on BP_PlayerCharacter_C_Client_OnTakeDamage");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnTakeDamage, NewHP) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_OnTakeDamage::NewHP' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_PlayImpactShake
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Client_PlayImpactShake final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_PlayImpactShake) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Client_PlayImpactShake");
static_assert(sizeof(BP_PlayerCharacter_C_Client_PlayImpactShake) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Client_PlayImpactShake");
static_assert(offsetof(BP_PlayerCharacter_C_Client_PlayImpactShake, Instigator_0) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_PlayImpactShake::Instigator_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_DamageDirection
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Client_DamageDirection final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_DamageDirection) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Client_DamageDirection");
static_assert(sizeof(BP_PlayerCharacter_C_Client_DamageDirection) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Client_DamageDirection");
static_assert(offsetof(BP_PlayerCharacter_C_Client_DamageDirection, DamageCauser) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_DamageDirection::DamageCauser' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_SpectateKiller
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_Server_SpectateKiller final
{
public:
	class APawn*                                  KillerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Controller_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_SpectateKiller) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Server_SpectateKiller");
static_assert(sizeof(BP_PlayerCharacter_C_Server_SpectateKiller) == 0x000010, "Wrong size on BP_PlayerCharacter_C_Server_SpectateKiller");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SpectateKiller, KillerPawn) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_SpectateKiller::KillerPawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Server_SpectateKiller, Controller_0) == 0x000008, "Member 'BP_PlayerCharacter_C_Server_SpectateKiller::Controller_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceivePointDamage
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerCharacter_C_ReceivePointDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0058(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceivePointDamage) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceivePointDamage");
static_assert(sizeof(BP_PlayerCharacter_C_ReceivePointDamage) == 0x0000E0, "Wrong size on BP_PlayerCharacter_C_ReceivePointDamage");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, Damage) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, HitNormal) == 0x00001C, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, HitComponent) == 0x000028, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, BoneName) == 0x000030, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, ShotFromDirection) == 0x000038, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, InstigatedBy) == 0x000048, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, DamageCauser) == 0x000050, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePointDamage, HitInfo) == 0x000058, "Member 'BP_PlayerCharacter_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveRadialDamage
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveRadialDamage final
{
public:
	float                                         DamageReceived;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x001C(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveRadialDamage) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceiveRadialDamage");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveRadialDamage) == 0x0000B8, "Wrong size on BP_PlayerCharacter_C_ReceiveRadialDamage");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveRadialDamage, DamageReceived) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveRadialDamage::DamageReceived' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveRadialDamage, DamageType) == 0x000008, "Member 'BP_PlayerCharacter_C_ReceiveRadialDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveRadialDamage, Origin) == 0x000010, "Member 'BP_PlayerCharacter_C_ReceiveRadialDamage::Origin' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveRadialDamage, HitInfo) == 0x00001C, "Member 'BP_PlayerCharacter_C_ReceiveRadialDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveRadialDamage, InstigatedBy) == 0x0000A8, "Member 'BP_PlayerCharacter_C_ReceiveRadialDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveRadialDamage, DamageCauser) == 0x0000B0, "Member 'BP_PlayerCharacter_C_ReceiveRadialDamage::DamageCauser' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Server_UpdateMaxHP
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_Server_UpdateMaxHP final
{
public:
	float                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Server_UpdateMaxHP) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_Server_UpdateMaxHP");
static_assert(sizeof(BP_PlayerCharacter_C_Server_UpdateMaxHP) == 0x000004, "Wrong size on BP_PlayerCharacter_C_Server_UpdateMaxHP");
static_assert(offsetof(BP_PlayerCharacter_C_Server_UpdateMaxHP, NewHP) == 0x000000, "Member 'BP_PlayerCharacter_C_Server_UpdateMaxHP::NewHP' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Client_OnHeal
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Client_OnHeal final
{
public:
	float                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HPHealed;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Client_OnHeal) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_Client_OnHeal");
static_assert(sizeof(BP_PlayerCharacter_C_Client_OnHeal) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Client_OnHeal");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnHeal, NewHP) == 0x000000, "Member 'BP_PlayerCharacter_C_Client_OnHeal::NewHP' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Client_OnHeal, HPHealed) == 0x000004, "Member 'BP_PlayerCharacter_C_Client_OnHeal::HPHealed' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateUI_Health
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_UpdateUI_Health final
{
public:
	float                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateUI_Health) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_UpdateUI_Health");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateUI_Health) == 0x000004, "Wrong size on BP_PlayerCharacter_C_UpdateUI_Health");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateUI_Health, NewHP) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateUI_Health::NewHP' has a wrong offset!");

}

