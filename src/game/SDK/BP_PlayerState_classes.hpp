#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState

#include "Basic.hpp"

#include "EPlayerClass_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ERewardReasons_structs.hpp"
#include "EGameModeNames_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerState.BP_PlayerState_C
// 0x00B0 (0x03D0 - 0x0320)
class ABP_PlayerState_C final : public APlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  PlayerClass;                                       // 0x0330(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Kills;                                             // 0x0334(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Deaths;                                            // 0x0338(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0340(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         KillStreak;                                        // 0x0350(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerScore;                                       // 0x0354(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillingSpree;                                      // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedsUpdate;                                      // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Team;                                              // 0x0360(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FString>                           AI_Names;                                          // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_Base_GM_C*                          GM;                                                // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayerReady;                                    // 0x03C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Assists;                                           // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewPing;                                           // 0x03C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetKills(int32* Kills_0);
	void IsPlayerReady(bool* bReady);
	void GetName(class FText* PlayerName);
	void GetTeam(int32* Team_0);
	void SetBotName();
	void OnRep_Team();
	void PlayScoreSound(ERewardReasons Selection);
	void OnDeathmatch(bool Input, bool* bTeamKill);
	void UserConstructionScript();
	void ResetScore();
	void Client_ShowScore(float Score_0, ERewardReasons Text);
	void Update_Streak();
	void Streak(int32 Number_of_kills);
	void Client_NeedsUpdate();
	void UpdateScores();
	void AddDeath();
	void AddKill(bool TeamKill, bool Headshot);
	void AddScore(bool TeamKill, bool Headshot);
	void OnSuicide();
	void ReceiveBeginPlay();
	void AddScoreToPlayer(float ScoreToAdd, ERewardReasons ScoreReason);
	void ServerSetTeam(int32 NewTeam);
	void SetTeam(int32 NewTeam);
	void OnTeamUpdate();
	void SetIsPlayerReady(bool bReady);
	void AddAssist(float DamageDone);
	void GetNewPing();
	void ExecuteUbergraph_BP_PlayerState(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerState_C">();
	}
	static class ABP_PlayerState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerState_C>();
	}
};
static_assert(alignof(ABP_PlayerState_C) == 0x000008, "Wrong alignment on ABP_PlayerState_C");
static_assert(sizeof(ABP_PlayerState_C) == 0x0003D0, "Wrong size on ABP_PlayerState_C");
static_assert(offsetof(ABP_PlayerState_C, UberGraphFrame) == 0x000320, "Member 'ABP_PlayerState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, DefaultSceneRoot) == 0x000328, "Member 'ABP_PlayerState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, PlayerClass) == 0x000330, "Member 'ABP_PlayerState_C::PlayerClass' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, Kills) == 0x000334, "Member 'ABP_PlayerState_C::Kills' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, Deaths) == 0x000338, "Member 'ABP_PlayerState_C::Deaths' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, Name_0) == 0x000340, "Member 'ABP_PlayerState_C::Name_0' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, KillStreak) == 0x000350, "Member 'ABP_PlayerState_C::KillStreak' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, PlayerScore) == 0x000354, "Member 'ABP_PlayerState_C::PlayerScore' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, KillingSpree) == 0x000358, "Member 'ABP_PlayerState_C::KillingSpree' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, bNeedsUpdate) == 0x00035C, "Member 'ABP_PlayerState_C::bNeedsUpdate' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, Team) == 0x000360, "Member 'ABP_PlayerState_C::Team' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, AI_Names) == 0x000368, "Member 'ABP_PlayerState_C::AI_Names' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, GM) == 0x0003B8, "Member 'ABP_PlayerState_C::GM' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, bIsPlayerReady) == 0x0003C0, "Member 'ABP_PlayerState_C::bIsPlayerReady' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, Assists) == 0x0003C4, "Member 'ABP_PlayerState_C::Assists' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_C, NewPing) == 0x0003C8, "Member 'ABP_PlayerState_C::NewPing' has a wrong offset!");

}

