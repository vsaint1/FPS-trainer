#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Base_GM

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "EPlayerClass_structs.hpp"


namespace SDK::Params
{

// Function BP_Base_GM.BP_Base_GM_C.DestroyGameModeActors
// 0x0080 (0x0080 - 0x0000)
struct BP_Base_GM_C_DestroyGameModeActors final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BaseFlag_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ABP_BaseFlag_C*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ConquestCapturePoint_C*>     CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0040(0x0010)(ReferenceParm)
	class ABP_ConquestCapturePoint_C*             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Conquest_GM_C*                      K2Node_DynamicCast_AsBP_Conquest_GM;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CaptureTheFlag_GM_C*                K2Node_DynamicCast_AsBP_Capture_the_Flag_GM;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_DestroyGameModeActors) == 0x000008, "Wrong alignment on BP_Base_GM_C_DestroyGameModeActors");
static_assert(sizeof(BP_Base_GM_C_DestroyGameModeActors) == 0x000080, "Wrong size on BP_Base_GM_C_DestroyGameModeActors");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_Base_GM_C_DestroyGameModeActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Base_GM_C_DestroyGameModeActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_Base_GM_C_DestroyGameModeActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_Base_GM_C_DestroyGameModeActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000040, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, K2Node_DynamicCast_AsBP_Conquest_GM) == 0x000058, "Member 'BP_Base_GM_C_DestroyGameModeActors::K2Node_DynamicCast_AsBP_Conquest_GM' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_Base_GM_C_DestroyGameModeActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, K2Node_DynamicCast_AsBP_Capture_the_Flag_GM) == 0x000068, "Member 'BP_Base_GM_C_DestroyGameModeActors::K2Node_DynamicCast_AsBP_Capture_the_Flag_GM' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_Base_GM_C_DestroyGameModeActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyGameModeActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_Base_GM_C_DestroyGameModeActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ChooseSpawnDM
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Base_GM_C_ChooseSpawnDM final
{
public:
	TArray<class ABP_PlayerSpawn_C*>              Spawns;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Team;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerSpawn_C*>              BestSpawns;                                        // 0x0018(0x0010)(Parm, OutParm)
	TArray<class AController*>                    AllControllers;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_PlayerSpawn_C*                      ActualSpawn;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              BestPossibleSpawn;                                 // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_ChooseSpawnDM) == 0x000008, "Wrong alignment on BP_Base_GM_C_ChooseSpawnDM");
static_assert(sizeof(BP_Base_GM_C_ChooseSpawnDM) == 0x0000C8, "Wrong size on BP_Base_GM_C_ChooseSpawnDM");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, Spawns) == 0x000000, "Member 'BP_Base_GM_C_ChooseSpawnDM::Spawns' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, Team) == 0x000010, "Member 'BP_Base_GM_C_ChooseSpawnDM::Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, BestSpawns) == 0x000018, "Member 'BP_Base_GM_C_ChooseSpawnDM::BestSpawns' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, AllControllers) == 0x000028, "Member 'BP_Base_GM_C_ChooseSpawnDM::AllControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, ActualSpawn) == 0x000038, "Member 'BP_Base_GM_C_ChooseSpawnDM::ActualSpawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, BestPossibleSpawn) == 0x000040, "Member 'BP_Base_GM_C_ChooseSpawnDM::BestPossibleSpawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_Base_GM_C_ChooseSpawnDM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_Base_GM_C_ChooseSpawnDM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_Base_GM_C_ChooseSpawnDM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_K2_GetPawn_ReturnValue) == 0x000080, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B5, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B8, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BP_Base_GM_C_ChooseSpawnDM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawnDM, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_Base_GM_C_ChooseSpawnDM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.AutoTeamBalanceUponDeath
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Base_GM_C_AutoTeamBalanceUponDeath final
{
public:
	class AController*                            PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CurrentController;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AController*>                    TeamBControllers;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AController*>                    TeamAControllers;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_2;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_3;             // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team_1;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_AutoTeamBalanceUponDeath) == 0x000008, "Wrong alignment on BP_Base_GM_C_AutoTeamBalanceUponDeath");
static_assert(sizeof(BP_Base_GM_C_AutoTeamBalanceUponDeath) == 0x0000E8, "Wrong size on BP_Base_GM_C_AutoTeamBalanceUponDeath");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, PlayerController) == 0x000000, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CurrentController) == 0x000008, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CurrentController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, TeamBControllers) == 0x000010, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::TeamBControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, TeamAControllers) == 0x000020, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::TeamAControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_AsI_Player_State) == 0x000038, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_AsI_Player_State_1) == 0x000050, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_AsI_Player_State_2) == 0x000068, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_AsI_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_GetTeam_Team) == 0x00007C, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Subtract_IntInt_ReturnValue) == 0x000094, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_Length_ReturnValue_3) == 0x0000A0, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_AddUnique_ReturnValue) == 0x0000AC, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000B0, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Array_Length_ReturnValue_4) == 0x0000C0, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_AsI_Player_State_3) == 0x0000C8, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_AsI_Player_State_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_GetTeam_Team_1) == 0x0000DC, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_GetTeam_Team_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalanceUponDeath, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_Base_GM_C_AutoTeamBalanceUponDeath::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.CheckTeamBalance
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Base_GM_C_CheckTeamBalance final
{
public:
	class AController*                            PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoSwap;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CurrentController;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AController*>                    TeamBControllers;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AController*>                    TeamAControllers;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team_1;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_CheckTeamBalance) == 0x000008, "Wrong alignment on BP_Base_GM_C_CheckTeamBalance");
static_assert(sizeof(BP_Base_GM_C_CheckTeamBalance) == 0x0000B8, "Wrong size on BP_Base_GM_C_CheckTeamBalance");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, PlayerController) == 0x000000, "Member 'BP_Base_GM_C_CheckTeamBalance::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, NoSwap) == 0x000008, "Member 'BP_Base_GM_C_CheckTeamBalance::NoSwap' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CurrentController) == 0x000010, "Member 'BP_Base_GM_C_CheckTeamBalance::CurrentController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, TeamBControllers) == 0x000018, "Member 'BP_Base_GM_C_CheckTeamBalance::TeamBControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, TeamAControllers) == 0x000028, "Member 'BP_Base_GM_C_CheckTeamBalance::TeamAControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_Base_GM_C_CheckTeamBalance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, K2Node_DynamicCast_AsI_Player_State) == 0x000040, "Member 'BP_Base_GM_C_CheckTeamBalance::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Base_GM_C_CheckTeamBalance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_GetTeam_Team) == 0x000054, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_Base_GM_C_CheckTeamBalance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_Length_ReturnValue_2) == 0x00006C, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_AddUnique_ReturnValue) == 0x00007C, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000080, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Array_Length_ReturnValue_4) == 0x000090, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, K2Node_DynamicCast_AsI_Player_State_1) == 0x000098, "Member 'BP_Base_GM_C_CheckTeamBalance::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_Base_GM_C_CheckTeamBalance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_GetTeam_Team_1) == 0x0000AC, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_GetTeam_Team_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_CheckTeamBalance, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_Base_GM_C_CheckTeamBalance::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.GetDefaultPawnClassForController
// 0x0018 (0x0018 - 0x0000)
struct BP_Base_GM_C_GetDefaultPawnClassForController final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetDefaultPawnClassForController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_GetDefaultPawnClassForController) == 0x000008, "Wrong alignment on BP_Base_GM_C_GetDefaultPawnClassForController");
static_assert(sizeof(BP_Base_GM_C_GetDefaultPawnClassForController) == 0x000018, "Wrong size on BP_Base_GM_C_GetDefaultPawnClassForController");
static_assert(offsetof(BP_Base_GM_C_GetDefaultPawnClassForController, InController) == 0x000000, "Member 'BP_Base_GM_C_GetDefaultPawnClassForController::InController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetDefaultPawnClassForController, ReturnValue) == 0x000008, "Member 'BP_Base_GM_C_GetDefaultPawnClassForController::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetDefaultPawnClassForController, CallFunc_GetDefaultPawnClassForController_ReturnValue) == 0x000010, "Member 'BP_Base_GM_C_GetDefaultPawnClassForController::CallFunc_GetDefaultPawnClassForController_ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SetGameWithBots
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_SetGameWithBots final
{
public:
	bool                                          bAllowBots_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_SetGameWithBots) == 0x000001, "Wrong alignment on BP_Base_GM_C_SetGameWithBots");
static_assert(sizeof(BP_Base_GM_C_SetGameWithBots) == 0x000001, "Wrong size on BP_Base_GM_C_SetGameWithBots");
static_assert(offsetof(BP_Base_GM_C_SetGameWithBots, bAllowBots_0) == 0x000000, "Member 'BP_Base_GM_C_SetGameWithBots::bAllowBots_0' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SetGameOver
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_SetGameOver final
{
public:
	bool                                          bGameOver_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_SetGameOver) == 0x000001, "Wrong alignment on BP_Base_GM_C_SetGameOver");
static_assert(sizeof(BP_Base_GM_C_SetGameOver) == 0x000001, "Wrong size on BP_Base_GM_C_SetGameOver");
static_assert(offsetof(BP_Base_GM_C_SetGameOver, bGameOver_0) == 0x000000, "Member 'BP_Base_GM_C_SetGameOver::bGameOver_0' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SetFriedlyFire
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_SetFriedlyFire final
{
public:
	bool                                          bFriendlyFire_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_SetFriedlyFire) == 0x000001, "Wrong alignment on BP_Base_GM_C_SetFriedlyFire");
static_assert(sizeof(BP_Base_GM_C_SetFriedlyFire) == 0x000001, "Wrong size on BP_Base_GM_C_SetFriedlyFire");
static_assert(offsetof(BP_Base_GM_C_SetFriedlyFire, bFriendlyFire_0) == 0x000000, "Member 'BP_Base_GM_C_SetFriedlyFire::bFriendlyFire_0' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ShowCharacterSelection Screen
// 0x0018 (0x0018 - 0x0000)
struct BP_Base_GM_C_ShowCharacterSelection_Screen final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_ShowCharacterSelection_Screen) == 0x000008, "Wrong alignment on BP_Base_GM_C_ShowCharacterSelection_Screen");
static_assert(sizeof(BP_Base_GM_C_ShowCharacterSelection_Screen) == 0x000018, "Wrong size on BP_Base_GM_C_ShowCharacterSelection_Screen");
static_assert(offsetof(BP_Base_GM_C_ShowCharacterSelection_Screen, NewPlayer) == 0x000000, "Member 'BP_Base_GM_C_ShowCharacterSelection_Screen::NewPlayer' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ShowCharacterSelection_Screen, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000008, "Member 'BP_Base_GM_C_ShowCharacterSelection_Screen::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ShowCharacterSelection_Screen, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Base_GM_C_ShowCharacterSelection_Screen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SetAIDifficulty
// 0x0018 (0x0018 - 0x0000)
struct BP_Base_GM_C_SetAIDifficulty final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_SetAIDifficulty) == 0x000008, "Wrong alignment on BP_Base_GM_C_SetAIDifficulty");
static_assert(sizeof(BP_Base_GM_C_SetAIDifficulty) == 0x000018, "Wrong size on BP_Base_GM_C_SetAIDifficulty");
static_assert(offsetof(BP_Base_GM_C_SetAIDifficulty, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'BP_Base_GM_C_SetAIDifficulty::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SetAIDifficulty, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000008, "Member 'BP_Base_GM_C_SetAIDifficulty::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SetAIDifficulty, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Base_GM_C_SetAIDifficulty::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.AutoTeamBalance_InitialTeam
// 0x0098 (0x0098 - 0x0000)
struct BP_Base_GM_C_AutoTeamBalance_InitialTeam final
{
public:
	class AController*                            PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CurrentController;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AController*>                    TeamBControllers;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AController*>                    TeamAControllers;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_AutoTeamBalance_InitialTeam) == 0x000008, "Wrong alignment on BP_Base_GM_C_AutoTeamBalance_InitialTeam");
static_assert(sizeof(BP_Base_GM_C_AutoTeamBalance_InitialTeam) == 0x000098, "Wrong size on BP_Base_GM_C_AutoTeamBalance_InitialTeam");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, PlayerController) == 0x000000, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CurrentController) == 0x000008, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CurrentController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, TeamBControllers) == 0x000010, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::TeamBControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, TeamAControllers) == 0x000020, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::TeamAControllers' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, K2Node_DynamicCast_AsI_Player_State) == 0x000038, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Array_AddUnique_ReturnValue) == 0x000060, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000064, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, K2Node_DynamicCast_AsI_Player_State_1) == 0x000078, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_GetTeam_Team) == 0x00008C, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AutoTeamBalance_InitialTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_Base_GM_C_AutoTeamBalance_InitialTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.HandleFriendlyFireDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_Base_GM_C_HandleFriendlyFireDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageToDo;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFriendlyFireEnabled_bEnabled;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_HandleFriendlyFireDamage) == 0x000004, "Wrong alignment on BP_Base_GM_C_HandleFriendlyFireDamage");
static_assert(sizeof(BP_Base_GM_C_HandleFriendlyFireDamage) == 0x000010, "Wrong size on BP_Base_GM_C_HandleFriendlyFireDamage");
static_assert(offsetof(BP_Base_GM_C_HandleFriendlyFireDamage, Damage) == 0x000000, "Member 'BP_Base_GM_C_HandleFriendlyFireDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_HandleFriendlyFireDamage, DamageToDo) == 0x000004, "Member 'BP_Base_GM_C_HandleFriendlyFireDamage::DamageToDo' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_HandleFriendlyFireDamage, CallFunc_IsFriendlyFireEnabled_bEnabled) == 0x000008, "Member 'BP_Base_GM_C_HandleFriendlyFireDamage::CallFunc_IsFriendlyFireEnabled_bEnabled' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_HandleFriendlyFireDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Base_GM_C_HandleFriendlyFireDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.OverrideNumberOfBots
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_OverrideNumberOfBots final
{
public:
	int32                                         TeamA;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamB;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_OverrideNumberOfBots) == 0x000004, "Wrong alignment on BP_Base_GM_C_OverrideNumberOfBots");
static_assert(sizeof(BP_Base_GM_C_OverrideNumberOfBots) == 0x000008, "Wrong size on BP_Base_GM_C_OverrideNumberOfBots");
static_assert(offsetof(BP_Base_GM_C_OverrideNumberOfBots, TeamA) == 0x000000, "Member 'BP_Base_GM_C_OverrideNumberOfBots::TeamA' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_OverrideNumberOfBots, TeamB) == 0x000004, "Member 'BP_Base_GM_C_OverrideNumberOfBots::TeamB' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.DestroyBotsPlayerState
// 0x0040 (0x0040 - 0x0000)
struct BP_Base_GM_C_DestroyBotsPlayerState final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_DestroyBotsPlayerState) == 0x000008, "Wrong alignment on BP_Base_GM_C_DestroyBotsPlayerState");
static_assert(sizeof(BP_Base_GM_C_DestroyBotsPlayerState) == 0x000040, "Wrong size on BP_Base_GM_C_DestroyBotsPlayerState");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_DestroyBotsPlayerState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_Base_GM_C_DestroyBotsPlayerState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.UnpossesBots
// 0x0040 (0x0040 - 0x0000)
struct BP_Base_GM_C_UnpossesBots final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_UnpossesBots) == 0x000008, "Wrong alignment on BP_Base_GM_C_UnpossesBots");
static_assert(sizeof(BP_Base_GM_C_UnpossesBots) == 0x000040, "Wrong size on BP_Base_GM_C_UnpossesBots");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_Base_GM_C_UnpossesBots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Base_GM_C_UnpossesBots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_Base_GM_C_UnpossesBots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_Base_GM_C_UnpossesBots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000025, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00002C, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_UnpossesBots, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_Base_GM_C_UnpossesBots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ReadyToStartMatch
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_ReadyToStartMatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_ReadyToStartMatch) == 0x000001, "Wrong alignment on BP_Base_GM_C_ReadyToStartMatch");
static_assert(sizeof(BP_Base_GM_C_ReadyToStartMatch) == 0x000001, "Wrong size on BP_Base_GM_C_ReadyToStartMatch");
static_assert(offsetof(BP_Base_GM_C_ReadyToStartMatch, ReturnValue) == 0x000000, "Member 'BP_Base_GM_C_ReadyToStartMatch::ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ReadyToEndMatch
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_ReadyToEndMatch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_ReadyToEndMatch) == 0x000001, "Wrong alignment on BP_Base_GM_C_ReadyToEndMatch");
static_assert(sizeof(BP_Base_GM_C_ReadyToEndMatch) == 0x000001, "Wrong size on BP_Base_GM_C_ReadyToEndMatch");
static_assert(offsetof(BP_Base_GM_C_ReadyToEndMatch, ReturnValue) == 0x000000, "Member 'BP_Base_GM_C_ReadyToEndMatch::ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SendKillFeedInfo
// 0x0058 (0x0058 - 0x0000)
struct BP_Base_GM_C_SendKillFeedInfo final
{
public:
	class APlayerState*                           Kill;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Vic;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Assist;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadshot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_SendKillFeedInfo) == 0x000008, "Wrong alignment on BP_Base_GM_C_SendKillFeedInfo");
static_assert(sizeof(BP_Base_GM_C_SendKillFeedInfo) == 0x000058, "Wrong size on BP_Base_GM_C_SendKillFeedInfo");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, Kill) == 0x000000, "Member 'BP_Base_GM_C_SendKillFeedInfo::Kill' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, Vic) == 0x000008, "Member 'BP_Base_GM_C_SendKillFeedInfo::Vic' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, DmgType) == 0x000010, "Member 'BP_Base_GM_C_SendKillFeedInfo::DmgType' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, Assist) == 0x000018, "Member 'BP_Base_GM_C_SendKillFeedInfo::Assist' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, bHeadshot) == 0x000020, "Member 'BP_Base_GM_C_SendKillFeedInfo::bHeadshot' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_Base_GM_C_SendKillFeedInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_Base_GM_C_SendKillFeedInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Base_GM_C_SendKillFeedInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Base_GM_C_SendKillFeedInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Base_GM_C_SendKillFeedInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_Base_GM_C_SendKillFeedInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000048, "Member 'BP_Base_GM_C_SendKillFeedInfo::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SendKillFeedInfo, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Base_GM_C_SendKillFeedInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.PossesPawn
// 0x0090 (0x0090 - 0x0000)
struct BP_Base_GM_C_PossesPawn final
{
public:
	class AActor*                                 Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_PossesPawn) == 0x000010, "Wrong alignment on BP_Base_GM_C_PossesPawn");
static_assert(sizeof(BP_Base_GM_C_PossesPawn) == 0x000090, "Wrong size on BP_Base_GM_C_PossesPawn");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, Pawn) == 0x000000, "Member 'BP_Base_GM_C_PossesPawn::Pawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, Controller) == 0x000008, "Member 'BP_Base_GM_C_PossesPawn::Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, Transform) == 0x000010, "Member 'BP_Base_GM_C_PossesPawn::Transform' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_Base_GM_C_PossesPawn::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_Base_GM_C_PossesPawn::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_Base_GM_C_PossesPawn::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000068, "Member 'BP_Base_GM_C_PossesPawn::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_Base_GM_C_PossesPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, K2Node_DynamicCast_AsPawn) == 0x000078, "Member 'BP_Base_GM_C_PossesPawn::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_PossesPawn, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_Base_GM_C_PossesPawn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ChooseSpawn
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Base_GM_C_ChooseSpawn final
{
public:
	TArray<class ABP_PlayerSpawn_C*>              Spawns;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Team;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerSpawn_C*>              BestSpawns;                                        // 0x0018(0x0010)(Parm, OutParm)
	class ABP_PlayerSpawn_C*                      ActualSpawn;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              BestPossibleSpawn;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_ChooseSpawn) == 0x000008, "Wrong alignment on BP_Base_GM_C_ChooseSpawn");
static_assert(sizeof(BP_Base_GM_C_ChooseSpawn) == 0x0000C0, "Wrong size on BP_Base_GM_C_ChooseSpawn");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, Spawns) == 0x000000, "Member 'BP_Base_GM_C_ChooseSpawn::Spawns' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, Team) == 0x000010, "Member 'BP_Base_GM_C_ChooseSpawn::Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, BestSpawns) == 0x000018, "Member 'BP_Base_GM_C_ChooseSpawn::BestSpawns' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, ActualSpawn) == 0x000028, "Member 'BP_Base_GM_C_ChooseSpawn::ActualSpawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, BestPossibleSpawn) == 0x000030, "Member 'BP_Base_GM_C_ChooseSpawn::BestPossibleSpawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_Base_GM_C_ChooseSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_Base_GM_C_ChooseSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_Base_GM_C_ChooseSpawn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_Base_GM_C_ChooseSpawn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000074, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x00008C, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_K2_GetPawn_ReturnValue) == 0x000090, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00009C, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_VSize_ReturnValue) == 0x0000B4, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ChooseSpawn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_Base_GM_C_ChooseSpawn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.GetPlayerSpawns
// 0x0040 (0x0040 - 0x0000)
struct BP_Base_GM_C_GetPlayerSpawns final
{
public:
	bool                                          FFA;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_GetPlayerSpawns) == 0x000008, "Wrong alignment on BP_Base_GM_C_GetPlayerSpawns");
static_assert(sizeof(BP_Base_GM_C_GetPlayerSpawns) == 0x000040, "Wrong size on BP_Base_GM_C_GetPlayerSpawns");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, FFA) == 0x000000, "Member 'BP_Base_GM_C_GetPlayerSpawns::FFA' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Base_GM_C_GetPlayerSpawns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Base_GM_C_GetPlayerSpawns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_Array_AddUnique_ReturnValue) == 0x000034, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000038, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_GetPlayerSpawns, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Base_GM_C_GetPlayerSpawns::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.AllPosibleSpawns
// 0x0060 (0x0060 - 0x0000)
struct BP_Base_GM_C_AllPosibleSpawns final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_AllPosibleSpawns) == 0x000008, "Wrong alignment on BP_Base_GM_C_AllPosibleSpawns");
static_assert(sizeof(BP_Base_GM_C_AllPosibleSpawns) == 0x000060, "Wrong size on BP_Base_GM_C_AllPosibleSpawns");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, PlayerController) == 0x000000, "Member 'BP_Base_GM_C_AllPosibleSpawns::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Base_GM_C_AllPosibleSpawns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, K2Node_DynamicCast_AsBP_Player_State) == 0x000010, "Member 'BP_Base_GM_C_AllPosibleSpawns::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Base_GM_C_AllPosibleSpawns::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Base_GM_C_AllPosibleSpawns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_Base_GM_C_AllPosibleSpawns::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_Base_GM_C_AllPosibleSpawns::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_AllPosibleSpawns, CallFunc_Array_Add_ReturnValue_1) == 0x000058, "Member 'BP_Base_GM_C_AllPosibleSpawns::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SpawnCharacterPawn
// 0x0120 (0x0120 - 0x0000)
struct BP_Base_GM_C_SpawnCharacterPawn final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	EPlayerClass                                  Player_Class;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PC;                                                // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0048(0x0018)(Edit, BlueprintVisible)
	struct FTransform                             Transform;                                         // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UClass*                                 Temp_class_Variable;                               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_2;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  Temp_byte_Variable_1;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamFromPlayerState_Team;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_2;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_SpawnCharacterPawn) == 0x000010, "Wrong alignment on BP_Base_GM_C_SpawnCharacterPawn");
static_assert(sizeof(BP_Base_GM_C_SpawnCharacterPawn) == 0x000120, "Wrong size on BP_Base_GM_C_SpawnCharacterPawn");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, SpawnTransform) == 0x000000, "Member 'BP_Base_GM_C_SpawnCharacterPawn::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Player_Class) == 0x000030, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Player_Class' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, PC) == 0x000038, "Member 'BP_Base_GM_C_SpawnCharacterPawn::PC' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, PlayerController) == 0x000040, "Member 'BP_Base_GM_C_SpawnCharacterPawn::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Name_0) == 0x000048, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Name_0' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Transform) == 0x000060, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Transform' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_class_Variable) == 0x000090, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_class_Variable_1) == 0x000098, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_byte_Variable) == 0x0000A0, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_class_Variable_2) == 0x0000A8, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_class_Variable_3) == 0x0000B0, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_class_Variable_4) == 0x0000B8, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_class_Variable_5) == 0x0000C0, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_Select_Default) == 0x0000C8, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_byte_Variable_1) == 0x0000D0, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, Temp_int_Variable) == 0x0000D4, "Member 'BP_Base_GM_C_SpawnCharacterPawn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_Select_Default_1) == 0x0000D8, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, CallFunc_GetPlayerTeamFromPlayerState_Team) == 0x0000E0, "Member 'BP_Base_GM_C_SpawnCharacterPawn::CallFunc_GetPlayerTeamFromPlayerState_Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x0000E8, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_Select_Default_2) == 0x0000F8, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'BP_Base_GM_C_SpawnCharacterPawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'BP_Base_GM_C_SpawnCharacterPawn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_DynamicCast_AsBP_Player_Character) == 0x000110, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterPawn, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_Base_GM_C_SpawnCharacterPawn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.Team Posible Spawn
// 0x0060 (0x0060 - 0x0000)
struct BP_Base_GM_C_Team_Posible_Spawn final
{
public:
	int32                                         Team;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerSpawn_C*>              TeamSpawns;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Bots;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerSpawn_C*>              PosibleSpawn;                                      // 0x0020(0x0010)(Parm, OutParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_Team_Posible_Spawn) == 0x000008, "Wrong alignment on BP_Base_GM_C_Team_Posible_Spawn");
static_assert(sizeof(BP_Base_GM_C_Team_Posible_Spawn) == 0x000060, "Wrong size on BP_Base_GM_C_Team_Posible_Spawn");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, Team) == 0x000000, "Member 'BP_Base_GM_C_Team_Posible_Spawn::Team' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, TeamSpawns) == 0x000008, "Member 'BP_Base_GM_C_Team_Posible_Spawn::TeamSpawns' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, Bots) == 0x000018, "Member 'BP_Base_GM_C_Team_Posible_Spawn::Bots' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, PosibleSpawn) == 0x000020, "Member 'BP_Base_GM_C_Team_Posible_Spawn::PosibleSpawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_Base_GM_C_Team_Posible_Spawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Base_GM_C_Team_Posible_Spawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000053, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_BooleanAND_ReturnValue_1) == 0x000054, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_BooleanAND_ReturnValue_2) == 0x000055, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_BooleanAND_ReturnValue_3) == 0x000056, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_BooleanAND_ReturnValue_4) == 0x000057, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000058, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Team_Posible_Spawn, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'BP_Base_GM_C_Team_Posible_Spawn::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SVR_SetPointsToWin
// 0x0004 (0x0004 - 0x0000)
struct BP_Base_GM_C_SVR_SetPointsToWin final
{
public:
	int32                                         PointsToWin;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_SVR_SetPointsToWin) == 0x000004, "Wrong alignment on BP_Base_GM_C_SVR_SetPointsToWin");
static_assert(sizeof(BP_Base_GM_C_SVR_SetPointsToWin) == 0x000004, "Wrong size on BP_Base_GM_C_SVR_SetPointsToWin");
static_assert(offsetof(BP_Base_GM_C_SVR_SetPointsToWin, PointsToWin) == 0x000000, "Member 'BP_Base_GM_C_SVR_SetPointsToWin::PointsToWin' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SpawnCharacterWithClass
// 0x0010 (0x0010 - 0x0000)
struct BP_Base_GM_C_SpawnCharacterWithClass final
{
public:
	EPlayerClass                                  PlayerClass;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_SpawnCharacterWithClass) == 0x000008, "Wrong alignment on BP_Base_GM_C_SpawnCharacterWithClass");
static_assert(sizeof(BP_Base_GM_C_SpawnCharacterWithClass) == 0x000010, "Wrong size on BP_Base_GM_C_SpawnCharacterWithClass");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterWithClass, PlayerClass) == 0x000000, "Member 'BP_Base_GM_C_SpawnCharacterWithClass::PlayerClass' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnCharacterWithClass, PlayerController) == 0x000008, "Member 'BP_Base_GM_C_SpawnCharacterWithClass::PlayerController' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.SpawnPlayerClass
// 0x0010 (0x0010 - 0x0000)
struct BP_Base_GM_C_SpawnPlayerClass final
{
public:
	EPlayerClass                                  PlayerClass;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_SpawnPlayerClass) == 0x000008, "Wrong alignment on BP_Base_GM_C_SpawnPlayerClass");
static_assert(sizeof(BP_Base_GM_C_SpawnPlayerClass) == 0x000010, "Wrong size on BP_Base_GM_C_SpawnPlayerClass");
static_assert(offsetof(BP_Base_GM_C_SpawnPlayerClass, PlayerClass) == 0x000000, "Member 'BP_Base_GM_C_SpawnPlayerClass::PlayerClass' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_SpawnPlayerClass, PlayerController) == 0x000008, "Member 'BP_Base_GM_C_SpawnPlayerClass::PlayerController' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.Server_RemovePC
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_Server_RemovePC final
{
public:
	class APlayerController*                      NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_Server_RemovePC) == 0x000008, "Wrong alignment on BP_Base_GM_C_Server_RemovePC");
static_assert(sizeof(BP_Base_GM_C_Server_RemovePC) == 0x000008, "Wrong size on BP_Base_GM_C_Server_RemovePC");
static_assert(offsetof(BP_Base_GM_C_Server_RemovePC, NewParam) == 0x000000, "Member 'BP_Base_GM_C_Server_RemovePC::NewParam' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_K2_OnLogout) == 0x000008, "Wrong alignment on BP_Base_GM_C_K2_OnLogout");
static_assert(sizeof(BP_Base_GM_C_K2_OnLogout) == 0x000008, "Wrong size on BP_Base_GM_C_K2_OnLogout");
static_assert(offsetof(BP_Base_GM_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'BP_Base_GM_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.HandleStartingNewPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_HandleStartingNewPlayer final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_HandleStartingNewPlayer) == 0x000008, "Wrong alignment on BP_Base_GM_C_HandleStartingNewPlayer");
static_assert(sizeof(BP_Base_GM_C_HandleStartingNewPlayer) == 0x000008, "Wrong size on BP_Base_GM_C_HandleStartingNewPlayer");
static_assert(offsetof(BP_Base_GM_C_HandleStartingNewPlayer, NewPlayer) == 0x000000, "Member 'BP_Base_GM_C_HandleStartingNewPlayer::NewPlayer' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ResetGame
// 0x0004 (0x0004 - 0x0000)
struct BP_Base_GM_C_ResetGame final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_ResetGame) == 0x000004, "Wrong alignment on BP_Base_GM_C_ResetGame");
static_assert(sizeof(BP_Base_GM_C_ResetGame) == 0x000004, "Wrong size on BP_Base_GM_C_ResetGame");
static_assert(offsetof(BP_Base_GM_C_ResetGame, Delay) == 0x000000, "Member 'BP_Base_GM_C_ResetGame::Delay' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.Server_GetKillFeedText
// 0x0028 (0x0028 - 0x0000)
struct BP_Base_GM_C_Server_GetKillFeedText final
{
public:
	class APlayerState*                           Kill;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Vic;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Assist;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadshot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_Server_GetKillFeedText) == 0x000008, "Wrong alignment on BP_Base_GM_C_Server_GetKillFeedText");
static_assert(sizeof(BP_Base_GM_C_Server_GetKillFeedText) == 0x000028, "Wrong size on BP_Base_GM_C_Server_GetKillFeedText");
static_assert(offsetof(BP_Base_GM_C_Server_GetKillFeedText, Kill) == 0x000000, "Member 'BP_Base_GM_C_Server_GetKillFeedText::Kill' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Server_GetKillFeedText, Vic) == 0x000008, "Member 'BP_Base_GM_C_Server_GetKillFeedText::Vic' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Server_GetKillFeedText, DmgType) == 0x000010, "Member 'BP_Base_GM_C_Server_GetKillFeedText::DmgType' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Server_GetKillFeedText, Assist) == 0x000018, "Member 'BP_Base_GM_C_Server_GetKillFeedText::Assist' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_Server_GetKillFeedText, bHeadshot) == 0x000020, "Member 'BP_Base_GM_C_Server_GetKillFeedText::bHeadshot' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.InitializeHUDForPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_InitializeHUDForPlayer final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_InitializeHUDForPlayer) == 0x000008, "Wrong alignment on BP_Base_GM_C_InitializeHUDForPlayer");
static_assert(sizeof(BP_Base_GM_C_InitializeHUDForPlayer) == 0x000008, "Wrong size on BP_Base_GM_C_InitializeHUDForPlayer");
static_assert(offsetof(BP_Base_GM_C_InitializeHUDForPlayer, NewPlayer) == 0x000000, "Member 'BP_Base_GM_C_InitializeHUDForPlayer::NewPlayer' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.Server_SendChatMessage
// 0x0018 (0x0018 - 0x0000)
struct BP_Base_GM_C_Server_SendChatMessage final
{
public:
	class FText                                   TextToSend;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Base_GM_C_Server_SendChatMessage) == 0x000008, "Wrong alignment on BP_Base_GM_C_Server_SendChatMessage");
static_assert(sizeof(BP_Base_GM_C_Server_SendChatMessage) == 0x000018, "Wrong size on BP_Base_GM_C_Server_SendChatMessage");
static_assert(offsetof(BP_Base_GM_C_Server_SendChatMessage, TextToSend) == 0x000000, "Member 'BP_Base_GM_C_Server_SendChatMessage::TextToSend' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_K2_PostLogin) == 0x000008, "Wrong alignment on BP_Base_GM_C_K2_PostLogin");
static_assert(sizeof(BP_Base_GM_C_K2_PostLogin) == 0x000008, "Wrong size on BP_Base_GM_C_K2_PostLogin");
static_assert(offsetof(BP_Base_GM_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'BP_Base_GM_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.K2_OnSetMatchState
// 0x0008 (0x0008 - 0x0000)
struct BP_Base_GM_C_K2_OnSetMatchState final
{
public:
	class FName                                   NewState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Base_GM_C_K2_OnSetMatchState) == 0x000004, "Wrong alignment on BP_Base_GM_C_K2_OnSetMatchState");
static_assert(sizeof(BP_Base_GM_C_K2_OnSetMatchState) == 0x000008, "Wrong size on BP_Base_GM_C_K2_OnSetMatchState");
static_assert(offsetof(BP_Base_GM_C_K2_OnSetMatchState, NewState) == 0x000000, "Member 'BP_Base_GM_C_K2_OnSetMatchState::NewState' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.ExecuteUbergraph_BP_Base_GM
// 0x0770 (0x0770 - 0x0000)
struct BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameWithBots_bGameWithBots;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameInstance_C*                     K2Node_DynamicCast_AsBP_Game_Instance_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PointsToWin;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_Team_Posible_Spawn_PosibleSpawn;          // 0x00C8(0x0010)(ReferenceParm)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_ChooseSpawn_BestSpawns;                   // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_Team_Posible_Spawn_PosibleSpawn_1;        // 0x0138(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_ChooseSpawn_BestSpawns_1;                 // 0x0148(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_1;                 // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item_1;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_2;                 // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_3;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerClass                                  K2Node_CustomEvent_PlayerClass_1;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver_1;                   // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerClass                                  K2Node_CustomEvent_PlayerClass;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_3;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              K2Node_Select_Default;                             // 0x0240(0x0010)(ReferenceParm)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_Team_Posible_Spawn_PosibleSpawn_2;        // 0x0250(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_ChooseSpawn_BestSpawns_2;                 // 0x0268(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item_4;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_NewParam;                       // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController;                    // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetName_PlayerName;                       // 0x02D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0330(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0340(0x0018)()
	class APlayerController*                      CallFunc_Array_Get_Item_5;                         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller_1;  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer_2;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item_6;                         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item_7;                         // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_Kill;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Vic;                            // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_CustomEvent_DmgType;                        // 0x03C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Assist;                         // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadshot;                      // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0xF];                                      // 0x03D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x03E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0xC];                                      // 0x0434(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0440(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item_8;                         // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_1;            // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_Array_Get_Item_9;                         // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerState_C*                      K2Node_DynamicCast_AsBP_Player_State_2;            // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB[0x5];                                      // 0x04BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              K2Node_Select_Default_2;                           // 0x04C8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_Team_Posible_Spawn_PosibleSpawn_3;        // 0x04E0(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerSpawn_C*>              CallFunc_ChooseSpawn_BestSpawns_3;                 // 0x04F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerSpawn_C*                      CallFunc_Array_Get_Item_10;                        // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer_1;                          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameOver_bGameOver_2;                   // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_TextToSend;                     // 0x0540(0x0018)()
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_11;                        // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller_2;  // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_1;             // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetName_PlayerName_1;                     // 0x0590(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x05B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x05F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0600(0x0018)()
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0620(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_NewState;                             // 0x0674(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_SpawnAIFromClass_ReturnValue;             // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0688(0x0018)()
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_2;             // 0x06A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C5[0x3];                                      // 0x06C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x06C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_SpawnAIFromClass_ReturnValue_1;           // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State_3;             // 0x0738(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_749[0x3];                                      // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS_4;                 // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM) == 0x000010, "Wrong alignment on BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM");
static_assert(sizeof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM) == 0x000770, "Wrong size on BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, EntryPoint) == 0x000000, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_bool_Variable) == 0x000004, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_4) == 0x00003C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_4) == 0x000044, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_5) == 0x000048, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_5) == 0x00004C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_6) == 0x000050, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_6) == 0x000054, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_5) == 0x000058, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameInstance_ReturnValue) == 0x000060, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_6) == 0x000068, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Game_Instance) == 0x000070, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameInstance_ReturnValue_1) == 0x000080, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameWithBots_bGameWithBots) == 0x000088, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameWithBots_bGameWithBots' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Game_Instance_1) == 0x000090, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameState_ReturnValue) == 0x0000A0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_PointsToWin) == 0x0000A8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_PointsToWin' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_GS) == 0x0000B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000BA, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000C0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Team_Posible_Spawn_PosibleSpawn) == 0x0000C8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Team_Posible_Spawn_PosibleSpawn' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000E0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_ChooseSpawn_BestSpawns) == 0x000110, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_ChooseSpawn_BestSpawns' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_LastIndex_ReturnValue) == 0x000120, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000124, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000128, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Team_Posible_Spawn_PosibleSpawn_1) == 0x000138, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Team_Posible_Spawn_PosibleSpawn_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_ChooseSpawn_BestSpawns_1) == 0x000148, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_ChooseSpawn_BestSpawns_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameState_ReturnValue_1) == 0x000158, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000160, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_GS_1) == 0x000168, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_GS_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000174, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000185, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000186, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_bool_Variable_1) == 0x000187, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameState_ReturnValue_2) == 0x000188, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_GS_2) == 0x000190, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_GS_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_4) == 0x000198, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameState_ReturnValue_3) == 0x0001A0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Variable) == 0x0001A8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_GS_3) == 0x0001B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_GS_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_5) == 0x0001B8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001B9, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x0001C8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_6) == 0x0001D0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_1) == 0x0001D4, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001D8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_PlayerClass_1) == 0x0001DC, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_PlayerClass_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_PlayerController_1) == 0x0001E0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_class_Variable) == 0x0001E8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_K2_GetPawn_ReturnValue) == 0x0001F0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_IsGameOver_bGameOver) == 0x0001F9, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_IsGameOver_bGameOver' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_IsGameOver_bGameOver_1) == 0x0001FA, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_IsGameOver_bGameOver_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_class_Variable_1) == 0x000200, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_bool_Variable_2) == 0x000208, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_PlayerClass) == 0x000209, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_PlayerClass' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_PlayerController) == 0x000210, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Loop_Counter_Variable_7) == 0x000218, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_1) == 0x00021C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_8) == 0x000220, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Player_State) == 0x000228, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_7) == 0x000230, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000231, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_3) == 0x000238, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Select_Default) == 0x000240, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Team_Posible_Spawn_PosibleSpawn_2) == 0x000250, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Team_Posible_Spawn_PosibleSpawn_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_2) == 0x000260, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_ChooseSpawn_BestSpawns_2) == 0x000268, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_ChooseSpawn_BestSpawns_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_2) == 0x000278, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00027C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000280, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000284, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_4) == 0x000288, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_NewParam) == 0x000290, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_RemoveItem_ReturnValue) == 0x000298, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Event_ExitingController) == 0x0002A0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0002A8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsPlayer_Controller) == 0x0002B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_8) == 0x0002B8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsI_Player_State) == 0x0002C0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_9) == 0x0002D0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0002D1, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetName_PlayerName) == 0x0002D8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetName_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_MakeStruct_FormatArgumentData) == 0x0002F0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_MakeArray_Array) == 0x000330, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Format_ReturnValue) == 0x000340, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_5) == 0x000358, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_Player_Controller_1) == 0x000360, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_10) == 0x000368, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_3) == 0x00036C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_3) == 0x000370, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Event_NewPlayer_2) == 0x000378, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Event_NewPlayer_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Add_ReturnValue) == 0x000380, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_IsValid_ReturnValue_1) == 0x000384, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_Delay) == 0x000388, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_6) == 0x000390, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_7) == 0x000398, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_4) == 0x0003A0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_5) == 0x0003A4, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_4) == 0x0003A8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_5) == 0x0003A9, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_Kill) == 0x0003B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_Kill' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_Vic) == 0x0003B8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_Vic' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_DmgType) == 0x0003C0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_DmgType' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_Assist) == 0x0003C8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_Assist' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_bHeadshot) == 0x0003D0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_bHeadshot' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetTransform_ReturnValue) == 0x0003E0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Location) == 0x000410, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Rotation) == 0x00041C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Scale) == 0x000428, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_MakeTransform_ReturnValue) == 0x000440, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Variable_1) == 0x000470, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_8) == 0x000478, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000480, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Player_State_1) == 0x000488, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_11) == 0x000490, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Add_IntInt_ReturnValue_9) == 0x000494, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_6) == 0x000498, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_6) == 0x00049C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, Temp_int_Array_Index_Variable_7) == 0x0004A0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_9) == 0x0004A8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Player_State_2) == 0x0004B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_12) == 0x0004B8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0004B9, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0004BA, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Select_Default_1) == 0x0004C0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Select_Default_2) == 0x0004C8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0004D8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Team_Posible_Spawn_PosibleSpawn_3) == 0x0004E0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Team_Posible_Spawn_PosibleSpawn_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_FinishSpawningActor_ReturnValue) == 0x0004F0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_ChooseSpawn_BestSpawns_3) == 0x0004F8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_ChooseSpawn_BestSpawns_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_IsValid_ReturnValue_2) == 0x000508, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_LastIndex_ReturnValue_3) == 0x00050C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x000510, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x000514, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_10) == 0x000518, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetAIController_ReturnValue) == 0x000520, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_RunBehaviorTree_ReturnValue) == 0x000528, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Event_NewPlayer_1) == 0x000530, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Event_NewPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_IsGameOver_bGameOver_2) == 0x000538, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_IsGameOver_bGameOver_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_CustomEvent_TextToSend) == 0x000540, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_CustomEvent_TextToSend' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Event_NewPlayer) == 0x000558, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Get_Item_11) == 0x000560, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_Player_Controller_2) == 0x000568, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_13) == 0x000570, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsI_Player_State_1) == 0x000578, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsI_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_14) == 0x000588, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetName_PlayerName_1) == 0x000590, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetName_PlayerName_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_Length_ReturnValue_7) == 0x0005A8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Less_IntInt_ReturnValue_7) == 0x0005AC, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_MakeStruct_FormatArgumentData_1) == 0x0005B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_MakeArray_Array_1) == 0x0005F0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Format_ReturnValue_1) == 0x000600, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetTransform_ReturnValue_1) == 0x000620, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Location_1) == 0x000650, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Rotation_1) == 0x00065C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Scale_1) == 0x000668, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_Event_NewState) == 0x000674, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_SpawnAIFromClass_ReturnValue) == 0x000680, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_SpawnAIFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Conv_NameToText_ReturnValue) == 0x000688, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsI_Player_State_2) == 0x0006A0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsI_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_15) == 0x0006B0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetController_ReturnValue) == 0x0006B8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_AddUnique_ReturnValue) == 0x0006C0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_SwitchName_CmpSuccess) == 0x0006C4, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0006C8, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0006D0, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Location_2) == 0x000700, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Rotation_2) == 0x00070C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_BreakTransform_Scale_2) == 0x000718, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_SpawnAIFromClass_ReturnValue_1) == 0x000728, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_SpawnAIFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetController_ReturnValue_1) == 0x000730, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsI_Player_State_3) == 0x000738, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsI_Player_State_3' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_16) == 0x000748, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00074C, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, CallFunc_GetGameState_ReturnValue_4) == 0x000750, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_AsBP_Base_GS_4) == 0x000758, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_AsBP_Base_GS_4' has a wrong offset!");
static_assert(offsetof(BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM, K2Node_DynamicCast_bSuccess_17) == 0x000760, "Member 'BP_Base_GM_C_ExecuteUbergraph_BP_Base_GM::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.GetGameWithBots
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_GetGameWithBots final
{
public:
	bool                                          bGameWithBots;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_GetGameWithBots) == 0x000001, "Wrong alignment on BP_Base_GM_C_GetGameWithBots");
static_assert(sizeof(BP_Base_GM_C_GetGameWithBots) == 0x000001, "Wrong size on BP_Base_GM_C_GetGameWithBots");
static_assert(offsetof(BP_Base_GM_C_GetGameWithBots, bGameWithBots) == 0x000000, "Member 'BP_Base_GM_C_GetGameWithBots::bGameWithBots' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.IsGameOver
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_IsGameOver final
{
public:
	bool                                          bGameOver_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_IsGameOver) == 0x000001, "Wrong alignment on BP_Base_GM_C_IsGameOver");
static_assert(sizeof(BP_Base_GM_C_IsGameOver) == 0x000001, "Wrong size on BP_Base_GM_C_IsGameOver");
static_assert(offsetof(BP_Base_GM_C_IsGameOver, bGameOver_0) == 0x000000, "Member 'BP_Base_GM_C_IsGameOver::bGameOver_0' has a wrong offset!");

// Function BP_Base_GM.BP_Base_GM_C.IsFriendlyFireEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_Base_GM_C_IsFriendlyFireEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Base_GM_C_IsFriendlyFireEnabled) == 0x000001, "Wrong alignment on BP_Base_GM_C_IsFriendlyFireEnabled");
static_assert(sizeof(BP_Base_GM_C_IsFriendlyFireEnabled) == 0x000001, "Wrong size on BP_Base_GM_C_IsFriendlyFireEnabled");
static_assert(offsetof(BP_Base_GM_C_IsFriendlyFireEnabled, bEnabled) == 0x000000, "Member 'BP_Base_GM_C_IsFriendlyFireEnabled::bEnabled' has a wrong offset!");

}

