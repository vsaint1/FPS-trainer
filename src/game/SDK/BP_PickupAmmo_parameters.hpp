#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PickupAmmo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PickupAmmo.BP_PickupAmmo_C.PickupMagazines
// 0x0048 (0x0048 - 0x0000)
struct BP_PickupAmmo_C_PickupMagazines final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_1;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterdNeedsAmmo_bNeedsAmmo;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PickupAmmo_C_PickupMagazines) == 0x000008, "Wrong alignment on BP_PickupAmmo_C_PickupMagazines");
static_assert(sizeof(BP_PickupAmmo_C_PickupMagazines) == 0x000048, "Wrong size on BP_PickupAmmo_C_PickupMagazines");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, Actor) == 0x000000, "Member 'BP_PickupAmmo_C_PickupMagazines::Actor' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, K2Node_DynamicCast_AsCharacter) == 0x000008, "Member 'BP_PickupAmmo_C_PickupMagazines::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PickupAmmo_C_PickupMagazines::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000018, "Member 'BP_PickupAmmo_C_PickupMagazines::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PickupAmmo_C_PickupMagazines::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, K2Node_DynamicCast_AsI_Pawn_Actions_1) == 0x000030, "Member 'BP_PickupAmmo_C_PickupMagazines::K2Node_DynamicCast_AsI_Pawn_Actions_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_PickupAmmo_C_PickupMagazines::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_PickupMagazines, CallFunc_CharacterdNeedsAmmo_bNeedsAmmo) == 0x000041, "Member 'BP_PickupAmmo_C_PickupMagazines::CallFunc_CharacterdNeedsAmmo_bNeedsAmmo' has a wrong offset!");

// Function BP_PickupAmmo.BP_PickupAmmo_C.CheckForOverlappingActors
// 0x0080 (0x0080 - 0x0000)
struct BP_PickupAmmo_C_CheckForOverlappingActors final
{
public:
	class ACharacter*                             OverlappingActors;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharacterdNeedsAmmo_bNeedsAmmo;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PickupAmmo_C_CheckForOverlappingActors) == 0x000008, "Wrong alignment on BP_PickupAmmo_C_CheckForOverlappingActors");
static_assert(sizeof(BP_PickupAmmo_C_CheckForOverlappingActors) == 0x000080, "Wrong size on BP_PickupAmmo_C_CheckForOverlappingActors");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, OverlappingActors) == 0x000000, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, K2Node_DynamicCast_AsCharacter) == 0x000040, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000050, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_CharacterdNeedsAmmo_bNeedsAmmo) == 0x000061, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_CharacterdNeedsAmmo_bNeedsAmmo' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000070, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_CheckForOverlappingActors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'BP_PickupAmmo_C_CheckForOverlappingActors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PickupAmmo.BP_PickupAmmo_C.BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_PickupAmmo_C_BndEvt__BP_PickupAmmo_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_PickupAmmo.BP_PickupAmmo_C.ExecuteUbergraph_BP_PickupAmmo
// 0x0120 (0x0120 - 0x0000)
struct BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0060(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Base_AI_Character_C*                K2Node_DynamicCast_AsBP_Base_AI_Character;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo) == 0x000008, "Wrong alignment on BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo");
static_assert(sizeof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo) == 0x000120, "Wrong size on BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, EntryPoint) == 0x000000, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_HasAuthority_ReturnValue_1) == 0x000030, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000038, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000040, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_ComponentBoundEvent_OtherActor) == 0x000048, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_ComponentBoundEvent_OtherComp) == 0x000050, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000058, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_ComponentBoundEvent_bFromSweep) == 0x00005C, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_ComponentBoundEvent_SweepResult) == 0x000060, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_HasAuthority_ReturnValue_2) == 0x0000E8, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_DynamicCast_AsBP_Base_AI_Character) == 0x0000F0, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_DynamicCast_AsBP_Base_AI_Character' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_DynamicCast_AsBP_Player_Character) == 0x000100, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000109, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_GetComponentVelocity_ReturnValue) == 0x00010C, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000118, "Member 'BP_PickupAmmo_C_ExecuteUbergraph_BP_PickupAmmo::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

}

