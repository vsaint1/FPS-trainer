#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerScore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PlayerScore.WB_PlayerScore_C
// 0x0058 (0x02B8 - 0x0260)
class UWB_PlayerScore_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             AssistText;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BackgroundColor;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DeathsText;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KillsText;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameText;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PingText;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PositionText;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreText;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         Position;                                          // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_C*                      PS;                                                // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdatePlayerScoreInfo(class ABP_PlayerState_C* PS_0, uint8 Position_0, bool bSelf);
	void ExecuteUbergraph_WB_PlayerScore(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PlayerScore_C">();
	}
	static class UWB_PlayerScore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PlayerScore_C>();
	}
};
static_assert(alignof(UWB_PlayerScore_C) == 0x000008, "Wrong alignment on UWB_PlayerScore_C");
static_assert(sizeof(UWB_PlayerScore_C) == 0x0002B8, "Wrong size on UWB_PlayerScore_C");
static_assert(offsetof(UWB_PlayerScore_C, UberGraphFrame) == 0x000260, "Member 'UWB_PlayerScore_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, AssistText) == 0x000268, "Member 'UWB_PlayerScore_C::AssistText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, BackgroundColor) == 0x000270, "Member 'UWB_PlayerScore_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, DeathsText) == 0x000278, "Member 'UWB_PlayerScore_C::DeathsText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, KillsText) == 0x000280, "Member 'UWB_PlayerScore_C::KillsText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, NameText) == 0x000288, "Member 'UWB_PlayerScore_C::NameText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, PingText) == 0x000290, "Member 'UWB_PlayerScore_C::PingText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, PositionText) == 0x000298, "Member 'UWB_PlayerScore_C::PositionText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, ScoreText) == 0x0002A0, "Member 'UWB_PlayerScore_C::ScoreText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, Position) == 0x0002A8, "Member 'UWB_PlayerScore_C::Position' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, PS) == 0x0002B0, "Member 'UWB_PlayerScore_C::PS' has a wrong offset!");

}

