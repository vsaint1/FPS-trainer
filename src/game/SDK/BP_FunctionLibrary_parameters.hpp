#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FunctionLibrary

#include "Basic.hpp"

#include "EGameModeNames_structs.hpp"
#include "AmmoMagazines_structs.hpp"
#include "EAmmoType_structs.hpp"


namespace SDK::Params
{

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetCurrentGameMode
// 0x0028 (0x0028 - 0x0000)
struct BP_FunctionLibrary_C_GetCurrentGameMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeNames                                CurrentGameMode;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FunctionLibrary_C_GetCurrentGameMode) == 0x000008, "Wrong alignment on BP_FunctionLibrary_C_GetCurrentGameMode");
static_assert(sizeof(BP_FunctionLibrary_C_GetCurrentGameMode) == 0x000028, "Wrong size on BP_FunctionLibrary_C_GetCurrentGameMode");
static_assert(offsetof(BP_FunctionLibrary_C_GetCurrentGameMode, __WorldContext) == 0x000000, "Member 'BP_FunctionLibrary_C_GetCurrentGameMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetCurrentGameMode, CurrentGameMode) == 0x000008, "Member 'BP_FunctionLibrary_C_GetCurrentGameMode::CurrentGameMode' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetCurrentGameMode, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_FunctionLibrary_C_GetCurrentGameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetCurrentGameMode, K2Node_DynamicCast_AsBP_Base_GS) == 0x000018, "Member 'BP_FunctionLibrary_C_GetCurrentGameMode::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetCurrentGameMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FunctionLibrary_C_GetCurrentGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetMagazineInfoPerType
// 0x0050 (0x0050 - 0x0000)
struct BP_FunctionLibrary_C_GetMagazineInfoPerType final
{
public:
	TArray<struct FAmmoMagazines>                 Magazine;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EAmmoType                                     AmmoType;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         Array_Element;                                     // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoMagazines                         CallFunc_Array_Get_Item;                           // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FunctionLibrary_C_GetMagazineInfoPerType) == 0x000008, "Wrong alignment on BP_FunctionLibrary_C_GetMagazineInfoPerType");
static_assert(sizeof(BP_FunctionLibrary_C_GetMagazineInfoPerType) == 0x000050, "Wrong size on BP_FunctionLibrary_C_GetMagazineInfoPerType");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, Magazine) == 0x000000, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::Magazine' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, AmmoType) == 0x000010, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::AmmoType' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, __WorldContext) == 0x000018, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, Array_Element) == 0x000020, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::Array_Element' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetMagazineInfoPerType, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_FunctionLibrary_C_GetMagazineInfoPerType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetPlayerNameFromPlayerState
// 0x0058 (0x0058 - 0x0000)
struct BP_FunctionLibrary_C_GetPlayerNameFromPlayerState final
{
public:
	class APlayerState*                           Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerName;                                        // 0x0010(0x0018)(Parm, OutParm)
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetName_PlayerName;                       // 0x0040(0x0018)()
};
static_assert(alignof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState) == 0x000008, "Wrong alignment on BP_FunctionLibrary_C_GetPlayerNameFromPlayerState");
static_assert(sizeof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState) == 0x000058, "Wrong size on BP_FunctionLibrary_C_GetPlayerNameFromPlayerState");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState, Object) == 0x000000, "Member 'BP_FunctionLibrary_C_GetPlayerNameFromPlayerState::Object' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState, __WorldContext) == 0x000008, "Member 'BP_FunctionLibrary_C_GetPlayerNameFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState, PlayerName) == 0x000010, "Member 'BP_FunctionLibrary_C_GetPlayerNameFromPlayerState::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState, K2Node_DynamicCast_AsI_Player_State) == 0x000028, "Member 'BP_FunctionLibrary_C_GetPlayerNameFromPlayerState::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FunctionLibrary_C_GetPlayerNameFromPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerNameFromPlayerState, CallFunc_GetName_PlayerName) == 0x000040, "Member 'BP_FunctionLibrary_C_GetPlayerNameFromPlayerState::CallFunc_GetName_PlayerName' has a wrong offset!");

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.IsGameOver
// 0x0028 (0x0028 - 0x0000)
struct BP_FunctionLibrary_C_IsGameOver final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGameOver;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Base_GS_C*                          K2Node_DynamicCast_AsBP_Base_GS;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_bGameOver;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FunctionLibrary_C_IsGameOver) == 0x000008, "Wrong alignment on BP_FunctionLibrary_C_IsGameOver");
static_assert(sizeof(BP_FunctionLibrary_C_IsGameOver) == 0x000028, "Wrong size on BP_FunctionLibrary_C_IsGameOver");
static_assert(offsetof(BP_FunctionLibrary_C_IsGameOver, __WorldContext) == 0x000000, "Member 'BP_FunctionLibrary_C_IsGameOver::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_IsGameOver, bGameOver) == 0x000008, "Member 'BP_FunctionLibrary_C_IsGameOver::bGameOver' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_IsGameOver, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_FunctionLibrary_C_IsGameOver::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_IsGameOver, K2Node_DynamicCast_AsBP_Base_GS) == 0x000018, "Member 'BP_FunctionLibrary_C_IsGameOver::K2Node_DynamicCast_AsBP_Base_GS' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_IsGameOver, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FunctionLibrary_C_IsGameOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_IsGameOver, CallFunc_IsGameOver_bGameOver) == 0x000021, "Member 'BP_FunctionLibrary_C_IsGameOver::CallFunc_IsGameOver_bGameOver' has a wrong offset!");

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.GetPlayerTeamFromPlayerState
// 0x0030 (0x0030 - 0x0000)
struct BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState final
{
public:
	class APlayerState*                           Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerState_C>       K2Node_DynamicCast_AsI_Player_State;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_Team;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState) == 0x000008, "Wrong alignment on BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState");
static_assert(sizeof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState) == 0x000030, "Wrong size on BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState, Object) == 0x000000, "Member 'BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState::Object' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState, __WorldContext) == 0x000008, "Member 'BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState, Team) == 0x000010, "Member 'BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState::Team' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState, K2Node_DynamicCast_AsI_Player_State) == 0x000018, "Member 'BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState::K2Node_DynamicCast_AsI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState, CallFunc_GetTeam_Team) == 0x00002C, "Member 'BP_FunctionLibrary_C_GetPlayerTeamFromPlayerState::CallFunc_GetTeam_Team' has a wrong offset!");

}

