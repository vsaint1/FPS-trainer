#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_FPP_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_FPP_Base.ABP_FPP_Base_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_FPP_Base_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_FPP_Base_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_FPP_Base_C_AnimGraph");
static_assert(sizeof(ABP_FPP_Base_C_AnimGraph) == 0x000010, "Wrong size on ABP_FPP_Base_C_AnimGraph");
static_assert(offsetof(ABP_FPP_Base_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_FPP_Base_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_FPP_Base.ABP_FPP_Base_C.GetPawnInfo
// 0x0020 (0x0020 - 0x0000)
struct ABP_FPP_Base_C_GetPawnInfo final
{
public:
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_FPP_Base_C_GetPawnInfo) == 0x000008, "Wrong alignment on ABP_FPP_Base_C_GetPawnInfo");
static_assert(sizeof(ABP_FPP_Base_C_GetPawnInfo) == 0x000020, "Wrong size on ABP_FPP_Base_C_GetPawnInfo");
static_assert(offsetof(ABP_FPP_Base_C_GetPawnInfo, CallFunc_GetMovementComponent_ReturnValue) == 0x000000, "Member 'ABP_FPP_Base_C_GetPawnInfo::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_GetPawnInfo, CallFunc_IsFalling_ReturnValue) == 0x000008, "Member 'ABP_FPP_Base_C_GetPawnInfo::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_GetPawnInfo, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ABP_FPP_Base_C_GetPawnInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_GetPawnInfo, CallFunc_GetVelocity_ReturnValue) == 0x00000C, "Member 'ABP_FPP_Base_C_GetPawnInfo::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_GetPawnInfo, CallFunc_VSize_ReturnValue) == 0x000018, "Member 'ABP_FPP_Base_C_GetPawnInfo::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function ABP_FPP_Base.ABP_FPP_Base_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_FPP_Base_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_FPP_Base_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_FPP_Base_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_FPP_Base_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_FPP_Base_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_FPP_Base_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_FPP_Base_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_FPP_Base.ABP_FPP_Base_C.ExecuteUbergraph_ABP_FPP_Base
// 0x0290 (0x0290 - 0x0000)
struct ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_1;             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseCharacter_C*                    K2Node_DynamicCast_AsBP_Base_Character;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_2;             // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_3;             // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_4;             // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_4;            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_5;             // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_5;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_6;             // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_6;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_7;             // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base) == 0x000008, "Wrong alignment on ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base");
static_assert(sizeof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base) == 0x000290, "Wrong size on ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, EntryPoint) == 0x000000, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable) == 0x000008, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable_1) == 0x000018, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable_2) == 0x000020, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable_3) == 0x000028, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable_4) == 0x000030, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_Event_DeltaTimeX) == 0x000038, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000040, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable_5) == 0x000058, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_1) == 0x000060, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_1' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_object_Variable_6) == 0x000078, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000080, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsBP_Base_Character) == 0x000088, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsBP_Base_Character' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_LineTraceSingle_OutHit) == 0x0000AC, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_LineTraceSingle_ReturnValue) == 0x000134, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_bBlockingHit) == 0x000135, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_bInitialOverlap) == 0x000136, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_Time) == 0x000138, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_Distance) == 0x00013C, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_ImpactPoint) == 0x00014C, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_ImpactNormal) == 0x000164, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_TraceStart) == 0x00019C, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x0001B8, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_2) == 0x0001C0, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_2' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_3) == 0x0001D0, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001D1, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x0001D8, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_3) == 0x0001E0, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_3' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_4) == 0x0001F0, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001F1, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x0001F8, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_4) == 0x000200, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_4' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_5) == 0x000210, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000211, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue_4) == 0x000218, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_5) == 0x000220, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_5' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_6) == 0x000230, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000231, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue_5) == 0x000238, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_6) == 0x000240, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_6' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_7) == 0x000250, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000251, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_TryGetPawnOwner_ReturnValue_6) == 0x000258, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_TryGetPawnOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_AsI_Pawn_Actions_7) == 0x000260, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_AsI_Pawn_Actions_7' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_DynamicCast_bSuccess_8) == 0x000270, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000271, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, CallFunc_GetPlayerController_ReturnValue) == 0x000278, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, Temp_byte_Variable) == 0x000280, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base, K2Node_Select_Default) == 0x000288, "Member 'ABP_FPP_Base_C_ExecuteUbergraph_ABP_FPP_Base::K2Node_Select_Default' has a wrong offset!");

}

