#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState

#include "Basic.hpp"

#include "BP_PlayerState_classes.hpp"
#include "BP_PlayerState_parameters.hpp"


namespace SDK
{

// Function BP_PlayerState.BP_PlayerState_C.GetKills
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Kills_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::GetKills(int32* Kills_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetKills");

	Params::BP_PlayerState_C_GetKills Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Kills_0 != nullptr)
		*Kills_0 = Parms.Kills_0;
}


// Function BP_PlayerState.BP_PlayerState_C.IsPlayerReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::IsPlayerReady(bool* bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "IsPlayerReady");

	Params::BP_PlayerState_C_IsPlayerReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReady != nullptr)
		*bReady = Parms.bReady;
}


// Function BP_PlayerState.BP_PlayerState_C.GetName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PlayerName                                             (Parm, OutParm)

void ABP_PlayerState_C::GetName(class FText* PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetName");

	Params::BP_PlayerState_C_GetName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerName != nullptr)
		*PlayerName = std::move(Parms.PlayerName);
}


// Function BP_PlayerState.BP_PlayerState_C.GetTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::GetTeam(int32* Team_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetTeam");

	Params::BP_PlayerState_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team_0 != nullptr)
		*Team_0 = Parms.Team_0;
}


// Function BP_PlayerState.BP_PlayerState_C.SetBotName
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::SetBotName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "SetBotName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.OnRep_Team
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::OnRep_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnRep_Team");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.PlayScoreSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardReasons                          Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::PlayScoreSound(ERewardReasons Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "PlayScoreSound");

	Params::BP_PlayerState_C_PlayScoreSound Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnDeathmatch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTeamKill                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::OnDeathmatch(bool Input, bool* bTeamKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnDeathmatch");

	Params::BP_PlayerState_C_OnDeathmatch Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);

	if (bTeamKill != nullptr)
		*bTeamKill = Parms.bTeamKill;
}


// Function BP_PlayerState.BP_PlayerState_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.ResetScore
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::ResetScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ResetScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Client_ShowScore
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Score_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERewardReasons                          Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Client_ShowScore(float Score_0, ERewardReasons Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Client_ShowScore");

	Params::BP_PlayerState_C_Client_ShowScore Parms{};

	Parms.Score_0 = Score_0;
	Parms.Text = Text;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Update Streak
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Update_Streak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Update Streak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.Streak
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Number_of_kills                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::Streak(int32 Number_of_kills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Streak");

	Params::BP_PlayerState_C_Streak Parms{};

	Parms.Number_of_kills = Number_of_kills;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.Client_NeedsUpdate
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::Client_NeedsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "Client_NeedsUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.UpdateScores
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::UpdateScores()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "UpdateScores");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.AddDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::AddDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "AddDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.AddKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TeamKill                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Headshot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::AddKill(bool TeamKill, bool Headshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "AddKill");

	Params::BP_PlayerState_C_AddKill Parms{};

	Parms.TeamKill = TeamKill;
	Parms.Headshot = Headshot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.AddScore
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TeamKill                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Headshot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::AddScore(bool TeamKill, bool Headshot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "AddScore");

	Params::BP_PlayerState_C_AddScore Parms{};

	Parms.TeamKill = TeamKill;
	Parms.Headshot = Headshot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnSuicide
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::OnSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnSuicide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.AddScoreToPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScoreToAdd                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERewardReasons                          ScoreReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::AddScoreToPlayer(float ScoreToAdd, ERewardReasons ScoreReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "AddScoreToPlayer");

	Params::BP_PlayerState_C_AddScoreToPlayer Parms{};

	Parms.ScoreToAdd = ScoreToAdd;
	Parms.ScoreReason = ScoreReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.ServerSetTeam
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewTeam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::ServerSetTeam(int32 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ServerSetTeam");

	Params::BP_PlayerState_C_ServerSetTeam Parms{};

	Parms.NewTeam = NewTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.SetTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewTeam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::SetTeam(int32 NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "SetTeam");

	Params::BP_PlayerState_C_SetTeam Parms{};

	Parms.NewTeam = NewTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.OnTeamUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::OnTeamUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "OnTeamUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.SetIsPlayerReady
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerState_C::SetIsPlayerReady(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "SetIsPlayerReady");

	Params::BP_PlayerState_C_SetIsPlayerReady Parms{};

	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.AddAssist
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageDone                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::AddAssist(float DamageDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "AddAssist");

	Params::BP_PlayerState_C_AddAssist Parms{};

	Parms.DamageDone = DamageDone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState.BP_PlayerState_C.GetNewPing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_C::GetNewPing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "GetNewPing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState.BP_PlayerState_C.ExecuteUbergraph_BP_PlayerState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_C::ExecuteUbergraph_BP_PlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_C", "ExecuteUbergraph_BP_PlayerState");

	Params::BP_PlayerState_C_ExecuteUbergraph_BP_PlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

