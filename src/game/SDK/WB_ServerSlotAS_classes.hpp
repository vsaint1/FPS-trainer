#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ServerSlotAS

#include "Basic.hpp"

#include "SteamCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ServerSlotAS.WB_ServerSlotAS_C
// 0x0178 (0x03D8 - 0x0260)
class UWB_ServerSlotAS_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ServerGameMode;                                    // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ServerLatency;                                     // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ServerName;                                        // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ServerSlotButton;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   NameOfTheServer;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPlayers;                                        // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPlayers;                                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamSessionResult                    SessionToJoin;                                     // 0x02A0(0x0118)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWB_JoinServerMenuAS_C*                 JoinServerWB;                                      // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerPing;                                        // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSteamSessionResult>            Results;                                           // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	class FText GetServerGameMode();
	class FText GetServerPing();
	class FText GetServerName();
	class FText GetServerCurrentPlayers();
	void BndEvt__ServerSlotButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ServerSlotButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ServerSlotButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_WB_ServerSlotAS(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ServerSlotAS_C">();
	}
	static class UWB_ServerSlotAS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ServerSlotAS_C>();
	}
};
static_assert(alignof(UWB_ServerSlotAS_C) == 0x000008, "Wrong alignment on UWB_ServerSlotAS_C");
static_assert(sizeof(UWB_ServerSlotAS_C) == 0x0003D8, "Wrong size on UWB_ServerSlotAS_C");
static_assert(offsetof(UWB_ServerSlotAS_C, UberGraphFrame) == 0x000260, "Member 'UWB_ServerSlotAS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, ServerGameMode) == 0x000268, "Member 'UWB_ServerSlotAS_C::ServerGameMode' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, ServerLatency) == 0x000270, "Member 'UWB_ServerSlotAS_C::ServerLatency' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, ServerName) == 0x000278, "Member 'UWB_ServerSlotAS_C::ServerName' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, ServerSlotButton) == 0x000280, "Member 'UWB_ServerSlotAS_C::ServerSlotButton' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, TextBlock_1) == 0x000288, "Member 'UWB_ServerSlotAS_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, NameOfTheServer) == 0x000290, "Member 'UWB_ServerSlotAS_C::NameOfTheServer' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, MaxPlayers) == 0x000298, "Member 'UWB_ServerSlotAS_C::MaxPlayers' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, CurrentPlayers) == 0x00029C, "Member 'UWB_ServerSlotAS_C::CurrentPlayers' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, SessionToJoin) == 0x0002A0, "Member 'UWB_ServerSlotAS_C::SessionToJoin' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, JoinServerWB) == 0x0003B8, "Member 'UWB_ServerSlotAS_C::JoinServerWB' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, ServerPing) == 0x0003C0, "Member 'UWB_ServerSlotAS_C::ServerPing' has a wrong offset!");
static_assert(offsetof(UWB_ServerSlotAS_C, Results) == 0x0003C8, "Member 'UWB_ServerSlotAS_C::Results' has a wrong offset!");

}

