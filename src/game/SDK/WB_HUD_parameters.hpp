#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EFiringMode_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WB_HUD.WB_HUD_C.UpdateTimer
// 0x0190 (0x0190 - 0x0000)
struct WB_HUD_C_UpdateTimer final
{
public:
	float                                         TimeInSeconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0158(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0178(0x0018)()
};
static_assert(alignof(WB_HUD_C_UpdateTimer) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateTimer");
static_assert(sizeof(WB_HUD_C_UpdateTimer) == 0x000190, "Wrong size on WB_HUD_C_UpdateTimer");
static_assert(offsetof(WB_HUD_C_UpdateTimer, TimeInSeconds) == 0x000000, "Member 'WB_HUD_C_UpdateTimer::TimeInSeconds' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_HUD_C_UpdateTimer::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_HUD_C_UpdateTimer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'WB_HUD_C_UpdateTimer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_FTrunc_ReturnValue_1) == 0x000010, "Member 'WB_HUD_C_UpdateTimer::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_Clamp_ReturnValue) == 0x000014, "Member 'WB_HUD_C_UpdateTimer::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WB_HUD_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000058, "Member 'WB_HUD_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData_2) == 0x000098, "Member 'WB_HUD_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_MakeArray_Array) == 0x0000D8, "Member 'WB_HUD_C_UpdateTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_MakeStruct_FormatArgumentData_3) == 0x0000E8, "Member 'WB_HUD_C_UpdateTimer::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_Format_ReturnValue) == 0x000128, "Member 'WB_HUD_C_UpdateTimer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_MakeArray_Array_1) == 0x000140, "Member 'WB_HUD_C_UpdateTimer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_Greater_IntInt_ReturnValue) == 0x000150, "Member 'WB_HUD_C_UpdateTimer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, CallFunc_Format_ReturnValue_1) == 0x000158, "Member 'WB_HUD_C_UpdateTimer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, Temp_bool_Variable) == 0x000170, "Member 'WB_HUD_C_UpdateTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateTimer, K2Node_Select_Default) == 0x000178, "Member 'WB_HUD_C_UpdateTimer::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.RotateDamageCanvas
// 0x0028 (0x0028 - 0x0000)
struct WB_HUD_C_RotateDamageCanvas final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_RotateDamageCanvas) == 0x000008, "Wrong alignment on WB_HUD_C_RotateDamageCanvas");
static_assert(sizeof(WB_HUD_C_RotateDamageCanvas) == 0x000028, "Wrong size on WB_HUD_C_RotateDamageCanvas");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_GetCameraRotation_ReturnValue) == 0x000008, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateDamageCanvas, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'WB_HUD_C_RotateDamageCanvas::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.RotateCompass
// 0x0040 (0x0040 - 0x0000)
struct WB_HUD_C_RotateCompass final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_RotateCompass) == 0x000008, "Wrong alignment on WB_HUD_C_RotateCompass");
static_assert(sizeof(WB_HUD_C_RotateCompass) == 0x000040, "Wrong size on WB_HUD_C_RotateCompass");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'WB_HUD_C_RotateCompass::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_GetCameraRotation_ReturnValue) == 0x000008, "Member 'WB_HUD_C_RotateCompass::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'WB_HUD_C_RotateCompass::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'WB_HUD_C_RotateCompass::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'WB_HUD_C_RotateCompass::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'WB_HUD_C_RotateCompass::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'WB_HUD_C_RotateCompass::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'WB_HUD_C_RotateCompass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000034, "Member 'WB_HUD_C_RotateCompass::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_RotateCompass, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WB_HUD_C_RotateCompass::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateObjectiveMarkers
// 0x0010 (0x0010 - 0x0000)
struct WB_HUD_C_UpdateObjectiveMarkers final
{
public:
	class ABP_Base_Objective_C*                   ObjectiveToUpdate;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayIconAnim;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Team;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateObjectiveMarkers) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateObjectiveMarkers");
static_assert(sizeof(WB_HUD_C_UpdateObjectiveMarkers) == 0x000010, "Wrong size on WB_HUD_C_UpdateObjectiveMarkers");
static_assert(offsetof(WB_HUD_C_UpdateObjectiveMarkers, ObjectiveToUpdate) == 0x000000, "Member 'WB_HUD_C_UpdateObjectiveMarkers::ObjectiveToUpdate' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateObjectiveMarkers, PlayIconAnim) == 0x000008, "Member 'WB_HUD_C_UpdateObjectiveMarkers::PlayIconAnim' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateObjectiveMarkers, Team) == 0x00000C, "Member 'WB_HUD_C_UpdateObjectiveMarkers::Team' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ToogleInteractText
// 0x0001 (0x0001 - 0x0000)
struct WB_HUD_C_ToogleInteractText final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_HUD_C_ToogleInteractText) == 0x000001, "Wrong alignment on WB_HUD_C_ToogleInteractText");
static_assert(sizeof(WB_HUD_C_ToogleInteractText) == 0x000001, "Wrong size on WB_HUD_C_ToogleInteractText");
static_assert(offsetof(WB_HUD_C_ToogleInteractText, bVisible) == 0x000000, "Member 'WB_HUD_C_ToogleInteractText::bVisible' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateGameModeScores
// 0x000C (0x000C - 0x0000)
struct WB_HUD_C_UpdateGameModeScores final
{
public:
	int32                                         TeamAPoints;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamBPoints;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PointsToWin;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateGameModeScores) == 0x000004, "Wrong alignment on WB_HUD_C_UpdateGameModeScores");
static_assert(sizeof(WB_HUD_C_UpdateGameModeScores) == 0x00000C, "Wrong size on WB_HUD_C_UpdateGameModeScores");
static_assert(offsetof(WB_HUD_C_UpdateGameModeScores, TeamAPoints) == 0x000000, "Member 'WB_HUD_C_UpdateGameModeScores::TeamAPoints' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateGameModeScores, TeamBPoints) == 0x000004, "Member 'WB_HUD_C_UpdateGameModeScores::TeamBPoints' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateGameModeScores, PointsToWin) == 0x000008, "Member 'WB_HUD_C_UpdateGameModeScores::PointsToWin' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.SetWeaponAmmoInfoVisibility
// 0x0001 (0x0001 - 0x0000)
struct WB_HUD_C_SetWeaponAmmoInfoVisibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_SetWeaponAmmoInfoVisibility) == 0x000001, "Wrong alignment on WB_HUD_C_SetWeaponAmmoInfoVisibility");
static_assert(sizeof(WB_HUD_C_SetWeaponAmmoInfoVisibility) == 0x000001, "Wrong size on WB_HUD_C_SetWeaponAmmoInfoVisibility");
static_assert(offsetof(WB_HUD_C_SetWeaponAmmoInfoVisibility, Visibility_0) == 0x000000, "Member 'WB_HUD_C_SetWeaponAmmoInfoVisibility::Visibility_0' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ShowHitMarker
// 0x0001 (0x0001 - 0x0000)
struct WB_HUD_C_ShowHitMarker final
{
public:
	bool                                          bVehicle;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_HUD_C_ShowHitMarker) == 0x000001, "Wrong alignment on WB_HUD_C_ShowHitMarker");
static_assert(sizeof(WB_HUD_C_ShowHitMarker) == 0x000001, "Wrong size on WB_HUD_C_ShowHitMarker");
static_assert(offsetof(WB_HUD_C_ShowHitMarker, bVehicle) == 0x000000, "Member 'WB_HUD_C_ShowHitMarker::bVehicle' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateFiringMode
// 0x0001 (0x0001 - 0x0000)
struct WB_HUD_C_UpdateFiringMode final
{
public:
	EFiringMode                                   NewFiringMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateFiringMode) == 0x000001, "Wrong alignment on WB_HUD_C_UpdateFiringMode");
static_assert(sizeof(WB_HUD_C_UpdateFiringMode) == 0x000001, "Wrong size on WB_HUD_C_UpdateFiringMode");
static_assert(offsetof(WB_HUD_C_UpdateFiringMode, NewFiringMode) == 0x000000, "Member 'WB_HUD_C_UpdateFiringMode::NewFiringMode' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateHP
// 0x0008 (0x0008 - 0x0000)
struct WB_HUD_C_UpdateHP final
{
public:
	float                                         NewHP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHP;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateHP) == 0x000004, "Wrong alignment on WB_HUD_C_UpdateHP");
static_assert(sizeof(WB_HUD_C_UpdateHP) == 0x000008, "Wrong size on WB_HUD_C_UpdateHP");
static_assert(offsetof(WB_HUD_C_UpdateHP, NewHP) == 0x000000, "Member 'WB_HUD_C_UpdateHP::NewHP' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateHP, MaxHP) == 0x000004, "Member 'WB_HUD_C_UpdateHP::MaxHP' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateCurrentBullets
// 0x0008 (0x0008 - 0x0000)
struct WB_HUD_C_UpdateCurrentBullets final
{
public:
	int32                                         CurrentBullets_0;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletsPerMag;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateCurrentBullets) == 0x000004, "Wrong alignment on WB_HUD_C_UpdateCurrentBullets");
static_assert(sizeof(WB_HUD_C_UpdateCurrentBullets) == 0x000008, "Wrong size on WB_HUD_C_UpdateCurrentBullets");
static_assert(offsetof(WB_HUD_C_UpdateCurrentBullets, CurrentBullets_0) == 0x000000, "Member 'WB_HUD_C_UpdateCurrentBullets::CurrentBullets_0' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateCurrentBullets, BulletsPerMag) == 0x000004, "Member 'WB_HUD_C_UpdateCurrentBullets::BulletsPerMag' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateTotalBullets
// 0x0004 (0x0004 - 0x0000)
struct WB_HUD_C_UpdateTotalBullets final
{
public:
	int32                                         TotalBullets_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateTotalBullets) == 0x000004, "Wrong alignment on WB_HUD_C_UpdateTotalBullets");
static_assert(sizeof(WB_HUD_C_UpdateTotalBullets) == 0x000004, "Wrong size on WB_HUD_C_UpdateTotalBullets");
static_assert(offsetof(WB_HUD_C_UpdateTotalBullets, TotalBullets_0) == 0x000000, "Member 'WB_HUD_C_UpdateTotalBullets::TotalBullets_0' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateMatchTimer
// 0x0004 (0x0004 - 0x0000)
struct WB_HUD_C_UpdateMatchTimer final
{
public:
	float                                         TimeInSeconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateMatchTimer) == 0x000004, "Wrong alignment on WB_HUD_C_UpdateMatchTimer");
static_assert(sizeof(WB_HUD_C_UpdateMatchTimer) == 0x000004, "Wrong size on WB_HUD_C_UpdateMatchTimer");
static_assert(offsetof(WB_HUD_C_UpdateMatchTimer, TimeInSeconds) == 0x000000, "Member 'WB_HUD_C_UpdateMatchTimer::TimeInSeconds' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateKillFeed
// 0x0028 (0x0028 - 0x0000)
struct WB_HUD_C_UpdateKillFeed final
{
public:
	class APlayerState*                           Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Victim;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Assist;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeadshot;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_HUD_C_UpdateKillFeed) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateKillFeed");
static_assert(sizeof(WB_HUD_C_UpdateKillFeed) == 0x000028, "Wrong size on WB_HUD_C_UpdateKillFeed");
static_assert(offsetof(WB_HUD_C_UpdateKillFeed, Killer) == 0x000000, "Member 'WB_HUD_C_UpdateKillFeed::Killer' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateKillFeed, Victim) == 0x000008, "Member 'WB_HUD_C_UpdateKillFeed::Victim' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateKillFeed, DamageType) == 0x000010, "Member 'WB_HUD_C_UpdateKillFeed::DamageType' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateKillFeed, Assist) == 0x000018, "Member 'WB_HUD_C_UpdateKillFeed::Assist' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateKillFeed, bHeadshot) == 0x000020, "Member 'WB_HUD_C_UpdateKillFeed::bHeadshot' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ShowScore
// 0x0020 (0x0020 - 0x0000)
struct WB_HUD_C_ShowScore final
{
public:
	float                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Reason;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_HUD_C_ShowScore) == 0x000008, "Wrong alignment on WB_HUD_C_ShowScore");
static_assert(sizeof(WB_HUD_C_ShowScore) == 0x000020, "Wrong size on WB_HUD_C_ShowScore");
static_assert(offsetof(WB_HUD_C_ShowScore, Score) == 0x000000, "Member 'WB_HUD_C_ShowScore::Score' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ShowScore, Reason) == 0x000008, "Member 'WB_HUD_C_ShowScore::Reason' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ShowInteractProgressBar
// 0x0004 (0x0004 - 0x0000)
struct WB_HUD_C_ShowInteractProgressBar final
{
public:
	float                                         InteractTime_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_ShowInteractProgressBar) == 0x000004, "Wrong alignment on WB_HUD_C_ShowInteractProgressBar");
static_assert(sizeof(WB_HUD_C_ShowInteractProgressBar) == 0x000004, "Wrong size on WB_HUD_C_ShowInteractProgressBar");
static_assert(offsetof(WB_HUD_C_ShowInteractProgressBar, InteractTime_0) == 0x000000, "Member 'WB_HUD_C_ShowInteractProgressBar::InteractTime_0' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ShowInteractInfo
// 0x0018 (0x0018 - 0x0000)
struct WB_HUD_C_ShowInteractInfo final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_HUD_C_ShowInteractInfo) == 0x000008, "Wrong alignment on WB_HUD_C_ShowInteractInfo");
static_assert(sizeof(WB_HUD_C_ShowInteractInfo) == 0x000018, "Wrong size on WB_HUD_C_ShowInteractInfo");
static_assert(offsetof(WB_HUD_C_ShowInteractInfo, Description) == 0x000000, "Member 'WB_HUD_C_ShowInteractInfo::Description' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ShowAbilityCooldownTime
// 0x0004 (0x0004 - 0x0000)
struct WB_HUD_C_ShowAbilityCooldownTime final
{
public:
	float                                         TimeRemaining;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_ShowAbilityCooldownTime) == 0x000004, "Wrong alignment on WB_HUD_C_ShowAbilityCooldownTime");
static_assert(sizeof(WB_HUD_C_ShowAbilityCooldownTime) == 0x000004, "Wrong size on WB_HUD_C_ShowAbilityCooldownTime");
static_assert(offsetof(WB_HUD_C_ShowAbilityCooldownTime, TimeRemaining) == 0x000000, "Member 'WB_HUD_C_ShowAbilityCooldownTime::TimeRemaining' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateExplosives
// 0x0010 (0x0010 - 0x0000)
struct WB_HUD_C_UpdateExplosives final
{
public:
	int32                                         ExplosivesAmount_0;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Icon;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateExplosives) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateExplosives");
static_assert(sizeof(WB_HUD_C_UpdateExplosives) == 0x000010, "Wrong size on WB_HUD_C_UpdateExplosives");
static_assert(offsetof(WB_HUD_C_UpdateExplosives, ExplosivesAmount_0) == 0x000000, "Member 'WB_HUD_C_UpdateExplosives::ExplosivesAmount_0' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateExplosives, Icon) == 0x000008, "Member 'WB_HUD_C_UpdateExplosives::Icon' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.OnHealthBarChange
// 0x0004 (0x0004 - 0x0000)
struct WB_HUD_C_OnHealthBarChange final
{
public:
	float                                         TargetPercent;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_OnHealthBarChange) == 0x000004, "Wrong alignment on WB_HUD_C_OnHealthBarChange");
static_assert(sizeof(WB_HUD_C_OnHealthBarChange) == 0x000004, "Wrong size on WB_HUD_C_OnHealthBarChange");
static_assert(offsetof(WB_HUD_C_OnHealthBarChange, TargetPercent) == 0x000000, "Member 'WB_HUD_C_OnHealthBarChange::TargetPercent' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.AddDamageIndicator
// 0x000C (0x000C - 0x0000)
struct WB_HUD_C_AddDamageIndicator final
{
public:
	struct FVector                                DmgLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_AddDamageIndicator) == 0x000004, "Wrong alignment on WB_HUD_C_AddDamageIndicator");
static_assert(sizeof(WB_HUD_C_AddDamageIndicator) == 0x00000C, "Wrong size on WB_HUD_C_AddDamageIndicator");
static_assert(offsetof(WB_HUD_C_AddDamageIndicator, DmgLocation) == 0x000000, "Member 'WB_HUD_C_AddDamageIndicator::DmgLocation' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateDeathmatchScores
// 0x0018 (0x0018 - 0x0000)
struct WB_HUD_C_UpdateDeathmatchScores final
{
public:
	class FString                                 WinnerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         WinnerKills;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillsToWin;                                        // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateDeathmatchScores) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateDeathmatchScores");
static_assert(sizeof(WB_HUD_C_UpdateDeathmatchScores) == 0x000018, "Wrong size on WB_HUD_C_UpdateDeathmatchScores");
static_assert(offsetof(WB_HUD_C_UpdateDeathmatchScores, WinnerName) == 0x000000, "Member 'WB_HUD_C_UpdateDeathmatchScores::WinnerName' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateDeathmatchScores, WinnerKills) == 0x000010, "Member 'WB_HUD_C_UpdateDeathmatchScores::WinnerKills' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateDeathmatchScores, KillsToWin) == 0x000014, "Member 'WB_HUD_C_UpdateDeathmatchScores::KillsToWin' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateTeamIcon
// 0x0008 (0x0008 - 0x0000)
struct WB_HUD_C_UpdateTeamIcon final
{
public:
	class UTexture*                               TeamIcon_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateTeamIcon) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateTeamIcon");
static_assert(sizeof(WB_HUD_C_UpdateTeamIcon) == 0x000008, "Wrong size on WB_HUD_C_UpdateTeamIcon");
static_assert(offsetof(WB_HUD_C_UpdateTeamIcon, TeamIcon_0) == 0x000000, "Member 'WB_HUD_C_UpdateTeamIcon::TeamIcon_0' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateRushScores
// 0x0008 (0x0008 - 0x0000)
struct WB_HUD_C_UpdateRushScores final
{
public:
	int32                                         Reinforcements;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalReinforcements;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateRushScores) == 0x000004, "Wrong alignment on WB_HUD_C_UpdateRushScores");
static_assert(sizeof(WB_HUD_C_UpdateRushScores) == 0x000008, "Wrong size on WB_HUD_C_UpdateRushScores");
static_assert(offsetof(WB_HUD_C_UpdateRushScores, Reinforcements) == 0x000000, "Member 'WB_HUD_C_UpdateRushScores::Reinforcements' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateRushScores, TotalReinforcements) == 0x000004, "Member 'WB_HUD_C_UpdateRushScores::TotalReinforcements' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateSkillIcon
// 0x0008 (0x0008 - 0x0000)
struct WB_HUD_C_UpdateSkillIcon final
{
public:
	class UTexture2D*                             SkillIcon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateSkillIcon) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateSkillIcon");
static_assert(sizeof(WB_HUD_C_UpdateSkillIcon) == 0x000008, "Wrong size on WB_HUD_C_UpdateSkillIcon");
static_assert(offsetof(WB_HUD_C_UpdateSkillIcon, SkillIcon) == 0x000000, "Member 'WB_HUD_C_UpdateSkillIcon::SkillIcon' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ExecuteUbergraph_WB_HUD
// 0x0780 (0x0780 - 0x0000)
struct WB_HUD_C_ExecuteUbergraph_WB_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0038(0x0010)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0098(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0120(0x0088)()
	class ABP_Base_Objective_C*                   K2Node_Event_ObjectiveToUpdate;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayIconAnim;                         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Team;                                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_TeamAPoints;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TeamBPoints;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PointsToWin;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_Visibility;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVehicle;                             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFiringMode                                   K2Node_Event_NewFiringMode;                        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_NewHP;                                // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxHP;                                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentBullets;                       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_BulletsPerMag;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0218(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_TotalBullets;                         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0240(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_TimeInSeconds;                        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_Event_Killer;                               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_Event_Victim;                               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0270(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_Event_Assist;                               // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHeadshot;                            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Score;                                // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Reason;                               // 0x0298(0x0018)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x02B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02D0(0x0040)(HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0320(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0348(0x0028)()
	class FText                                   Temp_text_Variable_1;                              // 0x0370(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InteractTime;                         // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_DirectionalDamageIndicator_C*       CallFunc_Create_ReturnValue;                       // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Description;                          // 0x03B8(0x0018)()
	float                                         K2Node_Event_TimeRemaining;                        // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x03D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x03E8(0x0018)()
	int32                                         K2Node_Event_ExplosivesAmount;                     // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Event_Icon;                                 // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0410(0x0088)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x04A0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TargetPercent;                  // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_7;              // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x04E8(0x0018)()
	struct FSlateColor                            K2Node_Select_Default_4;                           // 0x0500(0x0028)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0528(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0568(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0578(0x0018)()
	struct FVector                                K2Node_CustomEvent_DmgLocation;                    // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_WinnerName;                           // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_WinnerKills;                          // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_KillsToWin;                           // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default_5;                           // 0x05B8(0x0028)()
	class UTexture*                               K2Node_Event_TeamIcon;                             // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x05E8(0x0088)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_8;              // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Reinforcements;                       // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalReinforcements;                  // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0690(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x06A0(0x0018)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_1;     // 0x06C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x06D0(0x0018)()
	class UTexture2D*                             K2Node_Event_SkillIcon;                            // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_4;                    // 0x06F0(0x0088)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_9;              // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_ExecuteUbergraph_WB_HUD) == 0x000008, "Wrong alignment on WB_HUD_C_ExecuteUbergraph_WB_HUD");
static_assert(sizeof(WB_HUD_C_ExecuteUbergraph_WB_HUD) == 0x000780, "Wrong size on WB_HUD_C_ExecuteUbergraph_WB_HUD");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, EntryPoint) == 0x000000, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000030, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_Anchors) == 0x000038, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000068, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable) == 0x000070, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_byte_Variable) == 0x000071, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_byte_Variable_1) == 0x000072, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable_1) == 0x000073, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_byte_Variable_2) == 0x000074, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_byte_Variable_3) == 0x000075, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable_2) == 0x000076, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CreateDelegate_OutputDelegate_4) == 0x000078, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable_3) == 0x000088, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000090, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_SlateBrush) == 0x000098, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_SlateBrush_1) == 0x000120, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_ObjectiveToUpdate) == 0x0001A8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_ObjectiveToUpdate' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_PlayIconAnim) == 0x0001B0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_PlayIconAnim' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Team) == 0x0001B4, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue) == 0x0001B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001C0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_bVisible) == 0x0001C8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_bVisible' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TeamAPoints) == 0x0001CC, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TeamAPoints' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TeamBPoints) == 0x0001D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TeamBPoints' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_PointsToWin) == 0x0001D4, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_PointsToWin' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimer_ReturnValue) == 0x0001D8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_Visibility) == 0x0001E0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_Visibility' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0001E8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_bVehicle) == 0x0001F0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_bVehicle' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_NewFiringMode) == 0x0001F1, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_NewFiringMode' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_SwitchEnum_CmpSuccess) == 0x0001F2, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_NewHP) == 0x0001F4, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_NewHP' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_MaxHP) == 0x0001F8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_MaxHP' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_CurrentBullets) == 0x0001FC, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_CurrentBullets' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_BulletsPerMag) == 0x000200, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_BulletsPerMag' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000204, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000208, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00020C, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Less_FloatFloat_ReturnValue) == 0x00020D, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default) == 0x00020E, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00020F, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Clamp_ReturnValue) == 0x000210, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000214, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_IntToText_ReturnValue) == 0x000218, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000230, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000234, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TotalBullets) == 0x000238, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TotalBullets' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000240, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000258, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TimeInSeconds) == 0x00025C, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TimeInSeconds' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Killer) == 0x000260, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Killer' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Victim) == 0x000268, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Victim' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_DamageType) == 0x000270, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Assist) == 0x000278, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Assist' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_bHeadshot) == 0x000280, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_bHeadshot' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable_4) == 0x000281, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_2) == 0x000288, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Score) == 0x000290, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Reason) == 0x000298, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002B0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_FloatToText_ReturnValue) == 0x0002B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_FormatArgumentData) == 0x0002D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_3) == 0x000310, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_4) == 0x000318, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_text_Variable) == 0x000320, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_1) == 0x000338, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_SlateColor) == 0x000348, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_text_Variable_1) == 0x000370, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetPlayerController_ReturnValue) == 0x000388, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_InteractTime) == 0x000390, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_InteractTime' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Create_ReturnValue) == 0x000398, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_AddChildToCanvas_ReturnValue) == 0x0003A0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0003A8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0003AC, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_5) == 0x0003B0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Description) == 0x0003B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TimeRemaining) == 0x0003D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TimeRemaining' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x0003D8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1) == 0x0003E0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_FCeil_ReturnValue) == 0x0003E4, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0003E8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_ExplosivesAmount) == 0x000400, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_ExplosivesAmount' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Icon) == 0x000408, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Icon' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_SlateBrush_2) == 0x000410, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000498, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0004A0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Not_PreBool_ReturnValue) == 0x0004B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_2) == 0x0004B9, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_6) == 0x0004C0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_TargetPercent) == 0x0004C8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_TargetPercent' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0004CC, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_FInterpTo_ReturnValue) == 0x0004D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0004D4, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_7) == 0x0004D8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable_5) == 0x0004E0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_3) == 0x0004E8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_4) == 0x000500, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_FormatArgumentData_1) == 0x000528, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeArray_Array) == 0x000568, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Format_ReturnValue) == 0x000578, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_DmgLocation) == 0x000590, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_DmgLocation' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_WinnerName) == 0x0005A0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_WinnerName' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_WinnerKills) == 0x0005B0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_WinnerKills' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_KillsToWin) == 0x0005B4, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_KillsToWin' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_5) == 0x0005B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TeamIcon) == 0x0005E0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TeamIcon' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_SlateBrush_3) == 0x0005E8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_8) == 0x000670, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000678, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Reinforcements) == 0x000680, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Reinforcements' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_TotalReinforcements) == 0x000684, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_TotalReinforcements' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetInputSettings_ReturnValue) == 0x000688, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetActionMappingByName_OutMappings) == 0x000690, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Key_GetDisplayName_ReturnValue) == 0x0006A0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetInputSettings_ReturnValue_1) == 0x0006B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetActionMappingByName_OutMappings_1) == 0x0006C0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetActionMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x0006D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_SkillIcon) == 0x0006E8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_SkillIcon' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_SlateBrush_4) == 0x0006F0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_SlateBrush_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_9) == 0x000778, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_9' has a wrong offset!");

}

