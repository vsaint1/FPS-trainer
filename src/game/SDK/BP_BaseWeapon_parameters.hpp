#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseWeapon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EFiringMode_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseWeapon.BP_BaseWeapon_C.OnInstantBulletHit
// 0x0178 (0x0178 - 0x0000)
struct BP_BaseWeapon_C_OnInstantBulletHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         DmgMultiplier;                                     // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Instigator_0;                                      // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseWeapon_C*                       CallFunc_GetCurrentWeapon_CurrentWeapon;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_ReturnValue;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_OnInstantBulletHit) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_OnInstantBulletHit");
static_assert(sizeof(BP_BaseWeapon_C_OnInstantBulletHit) == 0x000178, "Wrong size on BP_BaseWeapon_C_OnInstantBulletHit");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, Hit) == 0x000000, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, DmgMultiplier) == 0x000088, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::DmgMultiplier' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, Instigator_0) == 0x000090, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, Temp_bool_Variable) == 0x000098, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x0000A0, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B1, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B2, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_GetCurrentWeapon_CurrentWeapon) == 0x000138, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_GetCurrentWeapon_CurrentWeapon' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000140, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00014C, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_GetController_ReturnValue) == 0x000158, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000160, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, K2Node_Select_Default) == 0x000164, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_FTrunc_ReturnValue) == 0x000168, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00016C, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_OnInstantBulletHit, CallFunc_ApplyPointDamage_ReturnValue) == 0x000170, "Member 'BP_BaseWeapon_C_OnInstantBulletHit::CallFunc_ApplyPointDamage_ReturnValue' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.GetSpawnBulletInfo
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BaseWeapon_C_GetSpawnBulletInfo final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRotation;                                     // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UsingTPP_bUsingTPP;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_GetSpawnBulletInfo) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_GetSpawnBulletInfo");
static_assert(sizeof(BP_BaseWeapon_C_GetSpawnBulletInfo) == 0x0000A8, "Wrong size on BP_BaseWeapon_C_GetSpawnBulletInfo");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, SpawnLocation) == 0x000000, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, Velocity) == 0x00000C, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::Velocity' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, SpawnRotation) == 0x000018, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::SpawnRotation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, Temp_bool_Variable) == 0x000024, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000030, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000038, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_GetControlRotation_ReturnValue) == 0x00004C, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_UsingTPP_bUsingTPP) == 0x000058, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_UsingTPP_bUsingTPP' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000060, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_GetActorForwardVector_ReturnValue) == 0x000074, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetSpawnBulletInfo, K2Node_Select_Default) == 0x000098, "Member 'BP_BaseWeapon_C_GetSpawnBulletInfo::K2Node_Select_Default' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.GetLineTraceInfo
// 0x0088 (0x0088 - 0x0000)
struct BP_BaseWeapon_C_GetLineTraceInfo final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UsingTPP_bUsingTPP;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_GetLineTraceInfo) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_GetLineTraceInfo");
static_assert(sizeof(BP_BaseWeapon_C_GetLineTraceInfo) == 0x000088, "Wrong size on BP_BaseWeapon_C_GetLineTraceInfo");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, TraceStart) == 0x000000, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, TraceEnd) == 0x00000C, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, Temp_bool_Variable) == 0x000018, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x000030, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_GetActorForwardVector_ReturnValue) == 0x000044, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_UsingTPP_bUsingTPP) == 0x000050, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_UsingTPP_bUsingTPP' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000054, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_GetLineTraceInfo, K2Node_Select_Default) == 0x000078, "Member 'BP_BaseWeapon_C_GetLineTraceInfo::K2Node_Select_Default' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.FireInstant
// 0x0268 (0x0268 - 0x0000)
struct BP_BaseWeapon_C_FireInstant final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVector;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spread;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     HitResults;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FHitResult                             CurrentHit;                                        // 0x0038(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  InstigatorRef;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BulletSpread;                                      // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInRadians_ReturnValue; // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HealthComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x01B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x01CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseWeapon_C_FireInstant) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_FireInstant");
static_assert(sizeof(BP_BaseWeapon_C_FireInstant) == 0x000268, "Wrong size on BP_BaseWeapon_C_FireInstant");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, TraceStart) == 0x000000, "Member 'BP_BaseWeapon_C_FireInstant::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, ForwardVector) == 0x00000C, "Member 'BP_BaseWeapon_C_FireInstant::ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, Instigator_0) == 0x000018, "Member 'BP_BaseWeapon_C_FireInstant::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, Spread) == 0x000020, "Member 'BP_BaseWeapon_C_FireInstant::Spread' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, HitResults) == 0x000028, "Member 'BP_BaseWeapon_C_FireInstant::HitResults' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CurrentHit) == 0x000038, "Member 'BP_BaseWeapon_C_FireInstant::CurrentHit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, InstigatorRef) == 0x0000C0, "Member 'BP_BaseWeapon_C_FireInstant::InstigatorRef' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, BulletSpread) == 0x0000C8, "Member 'BP_BaseWeapon_C_FireInstant::BulletSpread' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_RandomUnitVectorInConeInRadians_ReturnValue) == 0x0000CC, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_RandomUnitVectorInConeInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'BP_BaseWeapon_C_FireInstant::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, Temp_int_Loop_Counter_Variable) == 0x0000DC, "Member 'BP_BaseWeapon_C_FireInstant::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E4, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, Temp_int_Variable) == 0x0000F0, "Member 'BP_BaseWeapon_C_FireInstant::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F4, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Add_VectorVector_ReturnValue) == 0x000104, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_bBlockingHit) == 0x000110, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_bInitialOverlap) == 0x000111, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_Time) == 0x000114, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_Distance) == 0x000118, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_Location) == 0x00011C, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_ImpactPoint) == 0x000128, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_Normal) == 0x000134, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_PhysMat) == 0x000150, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_HitActor) == 0x000158, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_HitComponent) == 0x000160, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_HitBoneName) == 0x000168, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_HitItem) == 0x000170, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_ElementIndex) == 0x000174, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_FaceIndex) == 0x000178, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_TraceStart) == 0x00017C, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_BreakHitResult_TraceEnd) == 0x000188, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_IsValid_ReturnValue) == 0x000194, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_GetComponentByClass_ReturnValue) == 0x000198, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_IsValid_ReturnValue_1) == 0x0001A0, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BP_BaseWeapon_C_FireInstant::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_LineTraceMulti_OutHits) == 0x0001B8, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_LineTraceMulti_ReturnValue) == 0x0001C8, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Array_Get_Item) == 0x0001CC, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000254, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Array_Add_ReturnValue) == 0x000258, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Array_Length_ReturnValue) == 0x00025C, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_FireInstant, CallFunc_Less_IntInt_ReturnValue) == 0x000260, "Member 'BP_BaseWeapon_C_FireInstant::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.CheckBulletPath
// 0x01D0 (0x01D0 - 0x0000)
struct BP_BaseWeapon_C_CheckBulletPath final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ForwardVectorRef;                                  // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseCharacter_C*                    PawnRef;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStartRef;                                     // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UsingTPP_bUsingTPP;                       // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseWeapon_C_CheckBulletPath) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_CheckBulletPath");
static_assert(sizeof(BP_BaseWeapon_C_CheckBulletPath) == 0x0001D0, "Wrong size on BP_BaseWeapon_C_CheckBulletPath");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, NewParam) == 0x000000, "Member 'BP_BaseWeapon_C_CheckBulletPath::NewParam' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, ForwardVectorRef) == 0x000004, "Member 'BP_BaseWeapon_C_CheckBulletPath::ForwardVectorRef' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, PawnRef) == 0x000010, "Member 'BP_BaseWeapon_C_CheckBulletPath::PawnRef' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, TraceStartRef) == 0x000018, "Member 'BP_BaseWeapon_C_CheckBulletPath::TraceStartRef' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, Temp_object_Variable) == 0x000028, "Member 'BP_BaseWeapon_C_CheckBulletPath::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000050, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_GetCameraLocation_ReturnValue) == 0x000058, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_GetSocketLocation_ReturnValue) == 0x000064, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_GetActorForwardVector_ReturnValue) == 0x000070, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000088, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x0000A0, "Member 'BP_BaseWeapon_C_CheckBulletPath::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_BaseWeapon_C_CheckBulletPath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_LineTraceSingle_OutHit) == 0x0000B4, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_LineTraceSingle_ReturnValue) == 0x00013C, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_UsingTPP_bUsingTPP) == 0x00013D, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_UsingTPP_bUsingTPP' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_bBlockingHit) == 0x00013E, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013F, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_Time) == 0x000140, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_Distance) == 0x000144, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_ImpactPoint) == 0x000154, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_ImpactNormal) == 0x00016C, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_TraceStart) == 0x0001A4, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001BC, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_VSize_ReturnValue) == 0x0001C8, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001CC, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_CheckBulletPath, CallFunc_BooleanAND_ReturnValue) == 0x0001CD, "Member 'BP_BaseWeapon_C_CheckBulletPath::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.SpawnBullet
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BaseWeapon_C_SpawnBullet final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BulletVelocity_0;                                  // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRotation;                                     // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Spread;                                            // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClientSideOnly;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BulletSpread;                                      // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInRadians_ReturnValue; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Bullet_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseWeapon_C_SpawnBullet) == 0x000010, "Wrong alignment on BP_BaseWeapon_C_SpawnBullet");
static_assert(sizeof(BP_BaseWeapon_C_SpawnBullet) == 0x0000B0, "Wrong size on BP_BaseWeapon_C_SpawnBullet");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, SpawnLocation) == 0x000000, "Member 'BP_BaseWeapon_C_SpawnBullet::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, BulletVelocity_0) == 0x00000C, "Member 'BP_BaseWeapon_C_SpawnBullet::BulletVelocity_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, Instigator_0) == 0x000018, "Member 'BP_BaseWeapon_C_SpawnBullet::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, SpawnRotation) == 0x000020, "Member 'BP_BaseWeapon_C_SpawnBullet::SpawnRotation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, Spread) == 0x00002C, "Member 'BP_BaseWeapon_C_SpawnBullet::Spread' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, bClientSideOnly) == 0x000030, "Member 'BP_BaseWeapon_C_SpawnBullet::bClientSideOnly' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, BulletSpread) == 0x000034, "Member 'BP_BaseWeapon_C_SpawnBullet::BulletSpread' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_RandomUnitVectorInConeInRadians_ReturnValue) == 0x000038, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_RandomUnitVectorInConeInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, Temp_int_Variable) == 0x000080, "Member 'BP_BaseWeapon_C_SpawnBullet::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000088, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00009C, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_SpawnBullet, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_BaseWeapon_C_SpawnBullet::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.ReduceAmmo
// 0x0020 (0x0020 - 0x0000)
struct BP_BaseWeapon_C_ReduceAmmo final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BasePlayerController_C*             K2Node_DynamicCast_AsBP_Base_Player_Controller;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInfiniteClip_bInfiniteClip;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_ReduceAmmo) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_ReduceAmmo");
static_assert(sizeof(BP_BaseWeapon_C_ReduceAmmo) == 0x000020, "Wrong size on BP_BaseWeapon_C_ReduceAmmo");
static_assert(offsetof(BP_BaseWeapon_C_ReduceAmmo, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_BaseWeapon_C_ReduceAmmo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ReduceAmmo, K2Node_DynamicCast_AsBP_Base_Player_Controller) == 0x000008, "Member 'BP_BaseWeapon_C_ReduceAmmo::K2Node_DynamicCast_AsBP_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ReduceAmmo, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BaseWeapon_C_ReduceAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ReduceAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_BaseWeapon_C_ReduceAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ReduceAmmo, CallFunc_HasInfiniteClip_bInfiniteClip) == 0x000018, "Member 'BP_BaseWeapon_C_ReduceAmmo::CallFunc_HasInfiniteClip_bInfiniteClip' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ReduceAmmo, Temp_int_Variable) == 0x00001C, "Member 'BP_BaseWeapon_C_ReduceAmmo::Temp_int_Variable' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Server_FireBullet
// 0x0030 (0x0030 - 0x0000)
struct BP_BaseWeapon_C_Server_FireBullet final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BulletVelocity_0;                                  // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRotation;                                     // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Spread;                                            // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_Server_FireBullet) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_Server_FireBullet");
static_assert(sizeof(BP_BaseWeapon_C_Server_FireBullet) == 0x000030, "Wrong size on BP_BaseWeapon_C_Server_FireBullet");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireBullet, SpawnLocation) == 0x000000, "Member 'BP_BaseWeapon_C_Server_FireBullet::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireBullet, BulletVelocity_0) == 0x00000C, "Member 'BP_BaseWeapon_C_Server_FireBullet::BulletVelocity_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireBullet, Instigator_0) == 0x000018, "Member 'BP_BaseWeapon_C_Server_FireBullet::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireBullet, SpawnRotation) == 0x000020, "Member 'BP_BaseWeapon_C_Server_FireBullet::SpawnRotation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireBullet, Spread) == 0x00002C, "Member 'BP_BaseWeapon_C_Server_FireBullet::Spread' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Server_FireInstantBullet
// 0x0028 (0x0028 - 0x0000)
struct BP_BaseWeapon_C_Server_FireInstantBullet final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVector;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spread;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_Server_FireInstantBullet) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_Server_FireInstantBullet");
static_assert(sizeof(BP_BaseWeapon_C_Server_FireInstantBullet) == 0x000028, "Wrong size on BP_BaseWeapon_C_Server_FireInstantBullet");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireInstantBullet, TraceStart) == 0x000000, "Member 'BP_BaseWeapon_C_Server_FireInstantBullet::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireInstantBullet, ForwardVector) == 0x00000C, "Member 'BP_BaseWeapon_C_Server_FireInstantBullet::ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireInstantBullet, Instigator_0) == 0x000018, "Member 'BP_BaseWeapon_C_Server_FireInstantBullet::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_FireInstantBullet, Spread) == 0x000020, "Member 'BP_BaseWeapon_C_Server_FireInstantBullet::Spread' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Server_InstantBulletHit
// 0x0098 (0x0098 - 0x0000)
struct BP_BaseWeapon_C_Server_InstantBulletHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         DmgMultiplier;                                     // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Instigator_0;                                      // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_Server_InstantBulletHit) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_Server_InstantBulletHit");
static_assert(sizeof(BP_BaseWeapon_C_Server_InstantBulletHit) == 0x000098, "Wrong size on BP_BaseWeapon_C_Server_InstantBulletHit");
static_assert(offsetof(BP_BaseWeapon_C_Server_InstantBulletHit, Hit) == 0x000000, "Member 'BP_BaseWeapon_C_Server_InstantBulletHit::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_InstantBulletHit, DmgMultiplier) == 0x000088, "Member 'BP_BaseWeapon_C_Server_InstantBulletHit::DmgMultiplier' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_Server_InstantBulletHit, Instigator_0) == 0x000090, "Member 'BP_BaseWeapon_C_Server_InstantBulletHit::Instigator_0' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Shoot
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseWeapon_C_Shoot final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_Shoot) == 0x000004, "Wrong alignment on BP_BaseWeapon_C_Shoot");
static_assert(sizeof(BP_BaseWeapon_C_Shoot) == 0x000004, "Wrong size on BP_BaseWeapon_C_Shoot");
static_assert(offsetof(BP_BaseWeapon_C_Shoot, Spread) == 0x000000, "Member 'BP_BaseWeapon_C_Shoot::Spread' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Multicast_PlayImpacEffects
// 0x0088 (0x0088 - 0x0000)
struct BP_BaseWeapon_C_Multicast_PlayImpacEffects final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseWeapon_C_Multicast_PlayImpacEffects) == 0x000004, "Wrong alignment on BP_BaseWeapon_C_Multicast_PlayImpacEffects");
static_assert(sizeof(BP_BaseWeapon_C_Multicast_PlayImpacEffects) == 0x000088, "Wrong size on BP_BaseWeapon_C_Multicast_PlayImpacEffects");
static_assert(offsetof(BP_BaseWeapon_C_Multicast_PlayImpacEffects, HitResult) == 0x000000, "Member 'BP_BaseWeapon_C_Multicast_PlayImpacEffects::HitResult' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Server_PlayImpactEffects
// 0x0088 (0x0088 - 0x0000)
struct BP_BaseWeapon_C_Server_PlayImpactEffects final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseWeapon_C_Server_PlayImpactEffects) == 0x000004, "Wrong alignment on BP_BaseWeapon_C_Server_PlayImpactEffects");
static_assert(sizeof(BP_BaseWeapon_C_Server_PlayImpactEffects) == 0x000088, "Wrong size on BP_BaseWeapon_C_Server_PlayImpactEffects");
static_assert(offsetof(BP_BaseWeapon_C_Server_PlayImpactEffects, HitResult) == 0x000000, "Member 'BP_BaseWeapon_C_Server_PlayImpactEffects::HitResult' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Multicast_PlayMultipleImpactEffects
// 0x0010 (0x0010 - 0x0000)
struct BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects final
{
public:
	TArray<struct FHitResult>                     HitResults;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects");
static_assert(sizeof(BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects) == 0x000010, "Wrong size on BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects");
static_assert(offsetof(BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects, HitResults) == 0x000000, "Member 'BP_BaseWeapon_C_Multicast_PlayMultipleImpactEffects::HitResults' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Server_PlayHitImpactEffect
// 0x0010 (0x0010 - 0x0000)
struct BP_BaseWeapon_C_Server_PlayHitImpactEffect final
{
public:
	TArray<struct FHitResult>                     HitResults;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseWeapon_C_Server_PlayHitImpactEffect) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_Server_PlayHitImpactEffect");
static_assert(sizeof(BP_BaseWeapon_C_Server_PlayHitImpactEffect) == 0x000010, "Wrong size on BP_BaseWeapon_C_Server_PlayHitImpactEffect");
static_assert(offsetof(BP_BaseWeapon_C_Server_PlayHitImpactEffect, HitResults) == 0x000000, "Member 'BP_BaseWeapon_C_Server_PlayHitImpactEffect::HitResults' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.ReloadWeapon
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseWeapon_C_ReloadWeapon final
{
public:
	int32                                         AddedAmmo;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_ReloadWeapon) == 0x000004, "Wrong alignment on BP_BaseWeapon_C_ReloadWeapon");
static_assert(sizeof(BP_BaseWeapon_C_ReloadWeapon) == 0x000004, "Wrong size on BP_BaseWeapon_C_ReloadWeapon");
static_assert(offsetof(BP_BaseWeapon_C_ReloadWeapon, AddedAmmo) == 0x000000, "Member 'BP_BaseWeapon_C_ReloadWeapon::AddedAmmo' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.ScopeZoom
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseWeapon_C_ScopeZoom final
{
public:
	bool                                          Up;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseWeapon_C_ScopeZoom) == 0x000001, "Wrong alignment on BP_BaseWeapon_C_ScopeZoom");
static_assert(sizeof(BP_BaseWeapon_C_ScopeZoom) == 0x000001, "Wrong size on BP_BaseWeapon_C_ScopeZoom");
static_assert(offsetof(BP_BaseWeapon_C_ScopeZoom, Up) == 0x000000, "Member 'BP_BaseWeapon_C_ScopeZoom::Up' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.UpdateWeaponVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseWeapon_C_UpdateWeaponVisibility final
{
public:
	bool                                          bThirdPerson;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseWeapon_C_UpdateWeaponVisibility) == 0x000001, "Wrong alignment on BP_BaseWeapon_C_UpdateWeaponVisibility");
static_assert(sizeof(BP_BaseWeapon_C_UpdateWeaponVisibility) == 0x000001, "Wrong size on BP_BaseWeapon_C_UpdateWeaponVisibility");
static_assert(offsetof(BP_BaseWeapon_C_UpdateWeaponVisibility, bThirdPerson) == 0x000000, "Member 'BP_BaseWeapon_C_UpdateWeaponVisibility::bThirdPerson' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.SetFiringMode
// 0x0001 (0x0001 - 0x0000)
struct BP_BaseWeapon_C_SetFiringMode final
{
public:
	EFiringMode                                   NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_SetFiringMode) == 0x000001, "Wrong alignment on BP_BaseWeapon_C_SetFiringMode");
static_assert(sizeof(BP_BaseWeapon_C_SetFiringMode) == 0x000001, "Wrong size on BP_BaseWeapon_C_SetFiringMode");
static_assert(offsetof(BP_BaseWeapon_C_SetFiringMode, NewParam) == 0x000000, "Member 'BP_BaseWeapon_C_SetFiringMode::NewParam' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.Server_SetActualAmmo
// 0x0004 (0x0004 - 0x0000)
struct BP_BaseWeapon_C_Server_SetActualAmmo final
{
public:
	int32                                         ActualAmmo_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseWeapon_C_Server_SetActualAmmo) == 0x000004, "Wrong alignment on BP_BaseWeapon_C_Server_SetActualAmmo");
static_assert(sizeof(BP_BaseWeapon_C_Server_SetActualAmmo) == 0x000004, "Wrong size on BP_BaseWeapon_C_Server_SetActualAmmo");
static_assert(offsetof(BP_BaseWeapon_C_Server_SetActualAmmo, ActualAmmo_0) == 0x000000, "Member 'BP_BaseWeapon_C_Server_SetActualAmmo::ActualAmmo_0' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.ExecuteUbergraph_BP_BaseWeapon
// 0x0730 (0x0730 - 0x0000)
struct BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBulletPath_NewParam;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_TraceStart;                     // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ForwardVector;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Instigator_1;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Spread_1;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLineTraceInfo_TraceStart;              // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLineTraceInfo_TraceEnd;                // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_SpawnLocation;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_BulletVelocity;                 // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Instigator_2;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_SpawnRotation;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Spread_2;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSpawnBulletInfo_SpawnLocation;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSpawnBulletInfo_Velocity;              // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSpawnBulletInfo_SpawnRotation;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_CustomEvent_dmgMultiplier;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Instigator;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Spread;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult_1;                    // 0x0188(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0214(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions;               // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UsingTPP_bUsingTPP;                       // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x1];                                      // 0x02BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     K2Node_CustomEvent_HitResults_1;                   // 0x02D0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FHitResult>                     K2Node_CustomEvent_HitResults;                     // 0x02E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303[0x5];                                      // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_4;              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPawnActions_C>       K2Node_DynamicCast_AsI_Pawn_Actions_1;             // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAiming_bAiming;                         // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x2];                                      // 0x0342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0358(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x03E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_5;              // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0460(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0490(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_6;              // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AddedAmmo;                      // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Up;                             // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bThirdPerson;                   // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFiringMode                                   K2Node_CustomEvent_NewParam;                       // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA[0x2];                                      // 0x04FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0500(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0588(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActualAmmo;                     // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0618(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_3; // 0x06A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon) == 0x000010, "Wrong alignment on BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon");
static_assert(sizeof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon) == 0x000730, "Wrong size on BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, EntryPoint) == 0x000000, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_CheckBulletPath_NewParam) == 0x000004, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_CheckBulletPath_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_TraceStart) == 0x000008, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_ForwardVector) == 0x000014, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Instigator_1) == 0x000020, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Instigator_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Spread_1) == 0x000028, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Spread_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetLineTraceInfo_TraceStart) == 0x00002C, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetLineTraceInfo_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetLineTraceInfo_TraceEnd) == 0x000038, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetLineTraceInfo_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_SpawnLocation) == 0x000044, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_BulletVelocity) == 0x000050, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_BulletVelocity' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Instigator_2) == 0x000060, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Instigator_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_SpawnRotation) == 0x000068, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_SpawnRotation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Spread_2) == 0x000074, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Spread_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetSpawnBulletInfo_SpawnLocation) == 0x000078, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetSpawnBulletInfo_SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetSpawnBulletInfo_Velocity) == 0x000084, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetSpawnBulletInfo_Velocity' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetSpawnBulletInfo_SpawnRotation) == 0x000090, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetSpawnBulletInfo_SpawnRotation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Hit) == 0x00009C, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_dmgMultiplier) == 0x000124, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_dmgMultiplier' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Instigator) == 0x000128, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Spread) == 0x000130, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Spread' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsValid_ReturnValue) == 0x000134, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000138, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_HasAuthority_ReturnValue) == 0x000144, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000148, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetOwner_ReturnValue) == 0x000158, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue) == 0x000160, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_HasAuthority_ReturnValue_1) == 0x000168, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_HasAuthority_ReturnValue_2) == 0x000169, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, Temp_float_Variable) == 0x00016C, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsDedicatedServer_ReturnValue) == 0x000170, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, Temp_float_Variable_1) == 0x000174, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetOwner_ReturnValue_1) == 0x000178, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000180, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_HitResult_1) == 0x000188, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_HitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000210, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_HitResult) == 0x000214, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00029C, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0002A0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_DynamicCast_AsI_Pawn_Actions) == 0x0002A8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_DynamicCast_AsI_Pawn_Actions' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_DynamicCast_bSuccess) == 0x0002B8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, Temp_bool_Variable) == 0x0002B9, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_UsingTPP_bUsingTPP) == 0x0002BA, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_UsingTPP_bUsingTPP' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002BC, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0002C0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, Temp_int_Variable) == 0x0002CC, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_HitResults_1) == 0x0002D0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_HitResults_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_HitResults) == 0x0002E0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_HitResults' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Array_Length_ReturnValue) == 0x0002F0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0002F8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000300, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsValid_ReturnValue_2) == 0x000301, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsVisible_ReturnValue) == 0x000302, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000308, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetOwner_ReturnValue_2) == 0x000310, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000318, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue_4) == 0x000320, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000328, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_DynamicCast_AsI_Pawn_Actions_1) == 0x000330, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_DynamicCast_AsI_Pawn_Actions_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000340, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsAiming_bAiming) == 0x000341, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsAiming_bAiming' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_Select_Default) == 0x000344, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_StartCameraShake_ReturnValue) == 0x000348, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Add_FloatFloat_ReturnValue) == 0x000350, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, Temp_int_Array_Index_Variable) == 0x000354, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Array_Get_Item) == 0x000358, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetSocketTransform_ReturnValue) == 0x0003E0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000410, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_BreakTransform_Location) == 0x000414, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_BreakTransform_Rotation) == 0x000420, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_BreakTransform_Scale) == 0x00042C, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000438, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_HasAuthority_ReturnValue_3) == 0x000444, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000448, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue_5) == 0x000450, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsValid_ReturnValue_3) == 0x000458, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000460, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_BreakTransform_Location_1) == 0x000490, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_BreakTransform_Rotation_1) == 0x00049C, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_BreakTransform_Scale_1) == 0x0004A8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsVisible_ReturnValue_1) == 0x0004B4, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x0004B8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_GetPlayerPawn_ReturnValue_6) == 0x0004C0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_GetPlayerPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_DynamicCast_AsBP_Player_Character) == 0x0004C8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_DynamicCast_bSuccess_2) == 0x0004D0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_AddedAmmo) == 0x0004D4, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_AddedAmmo' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Array_Find_ReturnValue) == 0x0004D8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x0004DC, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Subtract_IntInt_ReturnValue) == 0x0004E0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x0004E4, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004E8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004EC, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_Up) == 0x0004F0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_Up' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_bThirdPerson) == 0x0004F1, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_bThirdPerson' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x0004F2, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_NewParam) == 0x0004F3, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, Temp_int_Loop_Counter_Variable) == 0x0004F4, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0004F8, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x0004F9, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004FC, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000500, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000588, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_Clamp_ReturnValue) == 0x000610, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, K2Node_CustomEvent_ActualAmmo) == 0x000614, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::K2Node_CustomEvent_ActualAmmo' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000618, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon, CallFunc_K2_SetRelativeTransform_SweepHitResult_3) == 0x0006A0, "Member 'BP_BaseWeapon_C_ExecuteUbergraph_BP_BaseWeapon::CallFunc_K2_SetRelativeTransform_SweepHitResult_3' has a wrong offset!");

// Function BP_BaseWeapon.BP_BaseWeapon_C.PlayEffects
// 0x0150 (0x0150 - 0x0000)
struct BP_BaseWeapon_C_PlayEffects final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BaseWeapon_C_PlayEffects) == 0x000008, "Wrong alignment on BP_BaseWeapon_C_PlayEffects");
static_assert(sizeof(BP_BaseWeapon_C_PlayEffects) == 0x000150, "Wrong size on BP_BaseWeapon_C_PlayEffects");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, Hit) == 0x000000, "Member 'BP_BaseWeapon_C_PlayEffects::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_bBlockingHit) == 0x000088, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_bInitialOverlap) == 0x000089, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_ElementIndex) == 0x0000EC, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_FaceIndex) == 0x0000F0, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_TraceStart) == 0x0000F4, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_BreakHitResult_TraceEnd) == 0x000100, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00010C, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, K2Node_SwitchEnum_CmpSuccess) == 0x000118, "Member 'BP_BaseWeapon_C_PlayEffects::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000120, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_RandomFloatInRange_ReturnValue) == 0x000128, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_MakeVector_ReturnValue) == 0x00012C, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000138, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000140, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseWeapon_C_PlayEffects, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_BaseWeapon_C_PlayEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

